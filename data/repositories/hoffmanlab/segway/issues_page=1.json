{"pagelen": 100, "size": 137, "values": [{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/1/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/1/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/1/error-creating-inputmaster"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/1/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "Error creating input.master", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In segway 1.2.0 (bitbucket dev version), I get an error creating input.master (traceback below). The input.master file is created in the params directory, but is empty.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/vol1/software/modules-python/segway/1.2.0/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway==1.2.0', 'console_scripts', 'segway')()\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py\", line 2519, in main\r\n    return runner()\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py\", line 2347, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py\", line 2323, in run\r\n    self.run_train()\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py\", line 1912, in run_train\r\n    dst_filenames = self.setup_train()\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py\", line 1875, in setup_train\r\n    self.params_dirpath, self.clobber)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py\", line 149, in __call__\r\n    *args, **kwargs)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py\", line 425, in save_template\r\n    save_substituted_resource(filename, resource, mapping)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py\", line 408, in save_substituted_resource\r\n    text = tmpl.substitute(mapping)\r\n  File \"/vol1/software/modules-python/python/2.7.6/lib/python2.7/string.py\", line 172, in substitute\r\n    return self.pattern.sub(convert, self.template)\r\n  File \"/vol1/software/modules-python/python/2.7.6/lib/python2.7/string.py\", line 165, in convert\r\n    return '%s' % (val,)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py\", line 236, in __str__\r\n    return make_spec(self.type_name, self.generate_objects())\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py\", line 79, in make_spec\r\n    items = list(iterable)\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py\", line 483, in generate_objects\r\n    dirichlet_table = self.make_dirichlet_table()\r\n  File \"/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py\", line 467, in make_dirichlet_table\r\n    probs = self.make_dense_cpt_segCountDown_seg_segTransition()\r\nAttributeError: 'DirichletTabParamSpec' object has no attribute 'make_dense_cpt_segCountDown_seg_segTransition'\r\n```\r\n", "markup": "markdown", "html": "<p>In segway 1.2.0 (bitbucket dev version), I get an error creating input.master (traceback below). The input.master file is created in the params directory, but is empty.</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/vol1/software/modules-python/segway/1.2.0/bin/segway&quot;, line 9, in &lt;module&gt;\n    load_entry_point(&#39;segway==1.2.0&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py&quot;, line 2519, in main\n    return runner()\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py&quot;, line 2347, in __call__\n    self.run(*args, **kwargs)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py&quot;, line 2323, in run\n    self.run_train()\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py&quot;, line 1912, in run_train\n    dst_filenames = self.setup_train()\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/run.py&quot;, line 1875, in setup_train\n    self.params_dirpath, self.clobber)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py&quot;, line 149, in __call__\n    *args, **kwargs)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py&quot;, line 425, in save_template\n    save_substituted_resource(filename, resource, mapping)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/_util.py&quot;, line 408, in save_substituted_resource\n    text = tmpl.substitute(mapping)\n  File &quot;/vol1/software/modules-python/python/2.7.6/lib/python2.7/string.py&quot;, line 172, in substitute\n    return self.pattern.sub(convert, self.template)\n  File &quot;/vol1/software/modules-python/python/2.7.6/lib/python2.7/string.py&quot;, line 165, in convert\n    return &#39;%s&#39; % (val,)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py&quot;, line 236, in __str__\n    return make_spec(self.type_name, self.generate_objects())\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py&quot;, line 79, in make_spec\n    items = list(iterable)\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py&quot;, line 483, in generate_objects\n    dirichlet_table = self.make_dirichlet_table()\n  File &quot;/vol1/software/modules-python/segway/1.2.0/lib/python2.7/segway-1.2.0-py2.7.egg/segway/input_master.py&quot;, line 467, in make_dirichlet_table\n    probs = self.make_dense_cpt_segCountDown_seg_segTransition()\nAttributeError: &#39;DirichletTabParamSpec&#39; object has no attribute &#39;make_dense_cpt_segCountDown_seg_segTransition&#39;\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-03-28T11:57:51.696791+00:00", "milestone": null, "updated_on": "2016-05-10T15:34:11.624585+00:00", "type": "issue", "id": 1}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/2/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/2/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/2/lsf_unit_for_limits-not-used-for-resource"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/2/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "LSF_UNIT_FOR_LIMITS not used for resource requests", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Our LSF system is set up with GB as the LSF_UNIT_FOR_LIMITS:\r\n\r\n    $ badmin showconf mbd | grep UNIT\r\n        LSF_UNIT_FOR_LIMITS = GB\r\n\r\nAnd segway.cluster.lsf parses this correctly as the DIVISOR_FOR_LIMITS from our lsf.conf file.\r\n\r\nHowever, for the resource request, the DIVISOR_FOR_LIMITS is ignored and instead is specified in MB, irrespective of the configured unit:\r\n\r\n    select[mem>2148 && tmp>48] rusage[mem=2148, tmp=48]\r\n\r\nSo on our system, segway is asking for 2148 GB, which is awesome, but exceeds that RAM on our compute blades.  The jobs stay in PEND status and never run.\r\n\r\nThis comment in lsf.py::make_res_req() suggests that resources are always specified in MB:\r\n\r\n        # always specified in MB, unaffected by LSF_UNIT_FOR_LIMITS\r\n        # see Administering Platform LSF: Working with Resources:\r\n        # Understanding Resources\r\n\r\nI looked at that document, and don't see the logic for always specifying resources in MB.\r\n\r\nSo:\r\n\r\n1. Updating to the following in segway.cluster.lsf lets my jobs run:\r\n\r\n        mem_usage_mb = ceildiv(mem_usage, DIVISOR_FOR_LIMITS)\r\n        tmp_usage_mb = ceildiv(tmp_usage, DIVISOR_FOR_LIMITS)\r\n\r\n2. Does the comment suggest that we are somehow inappropriately managing LSF? I can't change LSF_UNIT_FOR_LIMITS, it would affect many users.\r\n\r\n", "markup": "markdown", "html": "<p>Our LSF system is set up with GB as the LSF_UNIT_FOR_LIMITS:</p>\n<div class=\"codehilite\"><pre><span></span>$ badmin showconf mbd <span class=\"p\">|</span> grep UNIT\n    <span class=\"nv\">LSF_UNIT_FOR_LIMITS</span> <span class=\"o\">=</span> GB\n</pre></div>\n\n\n<p>And segway.cluster.lsf parses this correctly as the DIVISOR_FOR_LIMITS from our lsf.conf file.</p>\n<p>However, for the resource request, the DIVISOR_FOR_LIMITS is ignored and instead is specified in MB, irrespective of the configured unit:</p>\n<div class=\"codehilite\"><pre><span></span>select[mem&gt;2148 &amp;&amp; tmp&gt;48] rusage[mem=2148, tmp=48]\n</pre></div>\n\n\n<p>So on our system, segway is asking for 2148 GB, which is awesome, but exceeds that RAM on our compute blades.  The jobs stay in PEND status and never run.</p>\n<p>This comment in lsf.py::make_res_req() suggests that resources are always specified in MB:</p>\n<div class=\"codehilite\"><pre><span></span>    # always specified in MB, unaffected by LSF_UNIT_FOR_LIMITS\n    # see Administering Platform LSF: Working with Resources:\n    # Understanding Resources\n</pre></div>\n\n\n<p>I looked at that document, and don't see the logic for always specifying resources in MB.</p>\n<p>So:</p>\n<ol>\n<li>\n<p>Updating to the following in segway.cluster.lsf lets my jobs run:</p>\n<div class=\"codehilite\"><pre><span></span>mem_usage_mb = ceildiv(mem_usage, DIVISOR_FOR_LIMITS)\ntmp_usage_mb = ceildiv(tmp_usage, DIVISOR_FOR_LIMITS)\n</pre></div>\n\n\n</li>\n<li>\n<p>Does the comment suggest that we are somehow inappropriately managing LSF? I can't change LSF_UNIT_FOR_LIMITS, it would affect many users.</p>\n</li>\n</ol>", "type": "rendered"}, "assignee": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-03-28T12:34:30.671856+00:00", "milestone": null, "updated_on": "2014-03-29T14:23:02.623032+00:00", "type": "issue", "id": 2}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/3/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/3/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/3/add-oar-cluster-management-system"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/3/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Add OAR cluster management system", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #31\n\n**Imported Labels**: enhancement, imported, Priority-Medium\n\n_From [demircis...@gmail.com](https://code.google.com/u/114736579499977222923/) on April 25, 2014 11:16:22_\n\nHello, \r\n\r\nWe would like to use Segway on our cluster managed by OAR system ( http://oar.imag.fr/dokuwiki/doku.php ). Could you make necessary changes for this? If you require any information or help, I am willing to provide as much as I can. \r\n\r\nSincerely,\r\n\r\nSevgin\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=31_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/31/better-warning-message-when-include-coords\" rel=\"nofollow\" title=\"Better warning message when --include-coords includes a region not in the genomedata assembly\" class=\"ap-connect-link\">#31</a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/114736579499977222923/\" rel=\"nofollow\">demircis...@gmail.com</a> on April 25, 2014 11:16:22</em></p>\n<p>Hello, </p>\n<p>We would like to use Segway on our cluster managed by OAR system ( <a href=\"http://oar.imag.fr/dokuwiki/doku.php\" rel=\"nofollow\" class=\"ap-connect-link\">http://oar.imag.fr/dokuwiki/doku.php</a> ). Could you make necessary changes for this? If you require any information or help, I am willing to provide as much as I can. </p>\n<p>Sincerely,</p>\n<p>Sevgin</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=31\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=31</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:15.195993+00:00", "milestone": null, "updated_on": "2014-06-09T18:34:15.649991+00:00", "type": "issue", "id": 3}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/4/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4/add-slurm-cluster-system"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/4/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Add Slurm cluster system", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #27\n\n**Imported Labels**: enhancement, imported, Priority-Medium\n\n_From [cconn...@fhcrc.org](https://code.google.com/u/117044530567697322629/) on May 01, 2013 12:51:33_\n\nHi,\r\n     Would it be possible to add the ability to use SLURM with Segway? SLURM has a DRMAA implementation. I am willing to help.\r\n\r\nSincerely,\r\n\r\n\r\nChuck Connolly\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=27_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/27/separate-job-report-files-and-reports-on\" rel=\"nofollow\" title=\"Separate job report files and reports on LSF\" class=\"ap-connect-link\">#27</a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/117044530567697322629/\" rel=\"nofollow\">cconn...@fhcrc.org</a> on May 01, 2013 12:51:33</em></p>\n<p>Hi,\n     Would it be possible to add the ability to use SLURM with Segway? SLURM has a DRMAA implementation. I am willing to help.</p>\n<p>Sincerely,</p>\n<p>Chuck Connolly</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=27\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=27</a></em></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:15.913403+00:00", "milestone": null, "updated_on": "2019-09-04T12:50:00.126749+00:00", "type": "issue", "id": 4}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/5/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/5/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/5/gmtk-segfault-occurs-when-using-resolution"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/5/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "GMTK segfault occurs when using --resolution option", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #26\r\n\r\n**Imported Labels**: bug, imported, Priority-High, Usability\r\n\r\n_From [epa...@uw.edu](https://code.google.com/u/108766868340988196614/) on September 26, 2012 19:14:22_\r\n\r\nError is described more here https://j.ee.washington.edu/trac/gmtk/ticket/343 .\r\n\r\nThe output/e/*/emt* files will have an error similar to:\r\nsegway-1.2.0.dev_r9225-py2.7.egg/segway/data/segway-wrapper.sh: line 38:  3501 Segmentation fault      (core dumped) \"$@\" > \"$stdout_filename\"\r\n\r\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=26_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/26/better-error-message-when-dealing-with\" rel=\"nofollow\" title=\"Better error message when dealing with improper genomedata archives\" class=\"ap-connect-link\">#26</a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-High, Usability</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/108766868340988196614/\" rel=\"nofollow\">epa...@uw.edu</a> on September 26, 2012 19:14:22</em></p>\n<p>Error is described more here <a href=\"https://j.ee.washington.edu/trac/gmtk/ticket/343\" rel=\"nofollow\" class=\"ap-connect-link\">https://j.ee.washington.edu/trac/gmtk/ticket/343</a> .</p>\n<p>The output/e/<em>/emt</em> files will have an error similar to:\nsegway-1.2.0.dev_r9225<a href=\"http://-py2.7.egg/segway/data/segway-wrapper.sh\" rel=\"nofollow\" class=\"ap-connect-link\">-py2.7.egg/segway/data/segway-wrapper.sh</a>: line 38:  3501 Segmentation fault      (core dumped) \"$@\" &gt; \"$stdout_filename\"</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=26\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=26</a></em></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:17.621487+00:00", "milestone": null, "updated_on": "2014-06-10T20:17:41.534733+00:00", "type": "issue", "id": 5}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/6/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/6/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/6/identify-fails-in-semisupervised-mode-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/6/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "identify fails in semisupervised mode when train.tab is specified", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #18\r\n\r\n**Imported Labels**: bug, imported, Priority-High\r\n\r\n_From [avinash....@gmail.com](https://code.google.com/u/109814709722952855649/) on May 11, 2011 16:59:18_\r\n\r\nWhat steps will reproduce the problem? 1. segway train --semi-supervised\r\n2. segway identify What is the expected output? What do you see instead? Error from gmtkViterbi: ERROR: discrete observed random variable 'supervisionLabel', frame 0, line 78, specifies a feature element 6:6 that is out of discrete range ([3:5] inclusive) of observation matrix What version of the product are you using? On what operating system? segway 1.0 Please provide any additional information below. I am not sure but I think there might be some problem in train.tab for semi-supervised cases. The train.tab look like:\r\nname    value\r\ndistribution    asinh_norm\r\ndont_train_filename    3histones-semisuperivisedWU/auxiliary/dont_train.list\r\ninclude_tracknames    BroadHistoneK562H3k79me2StdAln_2Reps.norm5\r\ninclude_tracknames    AllLabsHistoneK562H3k36me3StdAln_4Reps.norm5\r\ninclude_tracknames    AllLabsHistoneK562H3k4me3StdAln_6Reps.norm5\r\ninclude_tracknames    supervisionLabel\r\n\r\n\r\nSo in inculde_tracknames have supervisionLabel. So when I run the identify on it  get error from gmtkViterbi like:\r\nERROR: discrete observed random variable 'supervisionLabel', frame 0, line 78, specifies a feature element 6:6 that is out of discrete range ([3:5] inclusive) of observation matrix\r\nTraceback (most recent call last):\r\n\r\nIt seems to be mismatch in train.tab  tracknames and those for which it is trained. \r\n\r\n\r\nI have also tried to remove supervisionLabel from the train.tab and run it still I am getting same Error. One more basic doubt when running semi-supervised identify do I have to give --semi-supervised=filename option or not.\r\nI have run with both options.\r\n\r\n**Attachment:** [vit15.cpkc.WU.identify.tab.1eed73a27bad11e0b2960019b9e1892e train.tab](http://code.google.com/p/segway-genome/issues/detail?id=18)\r\n\r\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=18_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/18/divide-by-zero-error-when-num-sublabels-is\" rel=\"nofollow\" title=\"Divide-by-zero error when num-sublabels is set to 0\" class=\"ap-connect-link\">#18</a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-High</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/109814709722952855649/\" rel=\"nofollow\">avinash....@gmail.com</a> on May 11, 2011 16:59:18</em></p>\n<p>What steps will reproduce the problem? 1. segway train --semi-supervised\n2. segway identify What is the expected output? What do you see instead? Error from gmtkViterbi: ERROR: discrete observed random variable 'supervisionLabel', frame 0, line 78, specifies a feature element 6:6 that is out of discrete range ([3:5] inclusive) of observation matrix What version of the product are you using? On what operating system? segway 1.0 Please provide any additional information below. I am not sure but I think there might be some problem in train.tab for semi-supervised cases. The train.tab look like:\nname    value\ndistribution    asinh_norm\ndont_train_filename    3histones-semisuperivisedWU/auxiliary/dont_train.list\ninclude_tracknames    BroadHistoneK562H3k79me2StdAln_2Reps.norm5\ninclude_tracknames    AllLabsHistoneK562H3k36me3StdAln_4Reps.norm5\ninclude_tracknames    AllLabsHistoneK562H3k4me3StdAln_6Reps.norm5\ninclude_tracknames    supervisionLabel</p>\n<p>So in inculde_tracknames have supervisionLabel. So when I run the identify on it  get error from gmtkViterbi like:\nERROR: discrete observed random variable 'supervisionLabel', frame 0, line 78, specifies a feature element 6:6 that is out of discrete range ([3:5] inclusive) of observation matrix\nTraceback (most recent call last):</p>\n<p>It seems to be mismatch in train.tab  tracknames and those for which it is trained. </p>\n<p>I have also tried to remove supervisionLabel from the train.tab and run it still I am getting same Error. One more basic doubt when running semi-supervised identify do I have to give --semi-supervised=filename option or not.\nI have run with both options.</p>\n<p><strong>Attachment:</strong> <a data-is-external-link=\"true\" href=\"http://code.google.com/p/segway-genome/issues/detail?id=18\" rel=\"nofollow\">vit15.cpkc.WU.identify.tab.1eed73a27bad11e0b2960019b9e1892e train.tab</a></p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=18\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=18</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:18.578174+00:00", "milestone": null, "updated_on": "2014-07-16T14:36:04.494966+00:00", "type": "issue", "id": 6}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/7/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/7/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/7/possible-model-generation-segment-table"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/7/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Possible model generation / segment table bug", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #14\r\n\r\n**Imported Labels**: bug, imported, Priority-Medium\r\n\r\n_From [jay.hesselberth](https://code.google.com/u/jay.hesselberth/) on April 13, 2011 10:27:13_\r\n\r\nI'm trying to run a segmentation where I'd like to specify that all\r\nlabel 0 segments be between 20 and 150, with a ruler of 1 bp.  All\r\nother segments have no constraints.  The seg table I use is:\r\n\r\nlabel   len\r\n0       20:150:1\r\n1:      1::1\r\n\r\nand I also use --ruler-scale=1.\r\n\r\nHowever, when I run this, the label 0 segments all end up being\r\nexactly 150 bases in size, with nothing between 20-150.  This seems\r\nvery strange to me.  I've attached a picture of one of the segments, the parameter files, run script and segment table.\r\n\r\n**Attachment:** [mmh.tar.gz pic.tiff](http://code.google.com/p/segway-genome/issues/detail?id=14)\r\n\r\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=14_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/14/cant-run-training-and-identification-in\" rel=\"nofollow\" title=\"Can&#39;t run training and identification in same run\" class=\"ap-connect-link\"><s>#14</s></a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/jay.hesselberth/\" rel=\"nofollow\">jay.hesselberth</a> on April 13, 2011 10:27:13</em></p>\n<p>I'm trying to run a segmentation where I'd like to specify that all\nlabel 0 segments be between 20 and 150, with a ruler of 1 bp.  All\nother segments have no constraints.  The seg table I use is:</p>\n<p>label   len\n0       20:150:1\n1:      1::1</p>\n<p>and I also use --ruler-scale=1.</p>\n<p>However, when I run this, the label 0 segments all end up being\nexactly 150 bases in size, with nothing between 20-150.  This seems\nvery strange to me.  I've attached a picture of one of the segments, the parameter files, run script and segment table.</p>\n<p><strong>Attachment:</strong> <a data-is-external-link=\"true\" href=\"http://code.google.com/p/segway-genome/issues/detail?id=14\" rel=\"nofollow\">mmh.tar.gz pic.tiff</a></p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=14\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=14</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:19.204278+00:00", "milestone": null, "updated_on": "2014-06-09T18:59:56.203273+00:00", "type": "issue", "id": 7}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/8/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/8/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/8/segway-should-not-requeue-jobs-that-failed"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/8/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should not requeue jobs that failed for reasons other than out-of-memory", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #13\n\n**Imported Labels**: bug, imported, Priority-Low\n\n_From [jay.hesselberth](https://code.google.com/u/jay.hesselberth/) on August 18, 2010 12:29:09_\n\nI migrated some segway training runs from one file system to another; this changed the root path and so the .inc files referenced by segway.inc and input.master changed.  When I initiate an identify run, the gmtkTriangulate task raises and exception and exits the segway run cleanly:\r\n\r\n/segway-projects/results/20100812/exp1/segway.str:1:70: error: /segway-results/results/20100812/exp1/auxiliary/segway.inc: No such file or directory\r\nParse Error in file '/segway-projects/results/20100812/exp1/segway.str': expecting variable type at or before line 7, near (TYPE_SEGCOUNTDOWN)\r\nExiting Program\r\nTraceback (most recent call last):\r\n  File \"/segway-build/arch/Linux-x86_64/bin/segway\", line 8, in <module>\r\n    load_entry_point('segway==0.2.0', 'console_scripts', 'segway')()\r\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/run.py\", line 3694, in main\r\n    return runner()\r\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/run.py\", line 3514, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/run.py\", line 3487, in run\r\n    self.run_triangulate()\r\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/run.py\", line 3084, in run_triangulate\r\n    self.run_triangulate_single(num_segs)\r\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/run.py\", line 3077, in run_triangulate_single\r\n    prog(**kwargs)\r\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 78, in __call__\r\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 209, in run\r\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 191, in _getoutput\r\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 154, in _popen\r\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 54, in _returncode_error_factory\r\noptbuild.ReturncodeError: /segway-build/arch/Linux-x86_64/bin/gmtkTriangulate returned 1\r\n\r\nHowever, the gmtkViterbi task that uses input.master recognizes the error and raises and exception, but then (apparently) thinks it exited because it ran out of memory and launches another job with increased memory requirements (below; there are multiple of these errors in a row as it keeps trying to launch the same job repeatedly).  Rather than doing this, it should exit cleanly as above because the model isn't correctly parsed.\r\n\r\nroot@ip-10-204-151-58\r\n/segway-projects/results/20100818/exp1/20100818.identify.20100818/output/e/identify\r\n> cat vit999.20100818.identify.20100818.196ffc5aaadf11dfbaf712313b0a94cc\r\n/segway-build/arch/Linux-x86_64/lib/python2.6/path-2.2-py2.6.egg/path.py:32:\r\nDeprecationWarning: the md5 module is deprecated; use hashlib instead\r\n/segway-build/arch/Linux-x86_64/lib/python2.6/optbuild-0.1.7-py2.6.egg/optbuild.py:294:\r\nDeprecationWarning: object.__new__() takes no parameters\r\n/segway-build/arch/Linux-x86_64/lib/python2.6/tables/leaf.py:415:\r\nPerformanceWarning: The Leaf ``/supercontig_5/continuous`` is\r\nexceeding the maximum recommended rowsize (32000000 bytes);\r\nbe ready to see PyTables asking for *lots* of memory and possibly slow\r\nI/O.  You may want to reduce the rowsize by trimming the value of\r\ndimensions that are orthogonal (and preferably close) to the main\r\ndimension of this leave.  Alternatively, in case you have specified a\r\nvery small/large chunksize, you may want to increase/decrease it.\r\n PerformanceWarning)\r\n/segway-projects/results/20100812/exp1/params/input.master:1:70:\r\nerror: /segway-results/results/20100812/exp1/auxiliary/segway.inc: No\r\nsuch file or directory\r\nERROR: In file '/segway-projects/results/20100812/exp1/params/input.master'\r\nline 18, DT 'map_frameIndex_ruler', equation 'mod(p0, RULER_SCALE) ==\r\n0 ':  Invalid symbol at 'ruler_scale)==0'\r\nTraceback (most recent call last):\r\n File \"/segway-build/arch/Linux-x86_64/bin/segway-task\", line 8, in <module>\r\n   load_entry_point('segway==0.2.0', 'console_scripts', 'segway-task')()\r\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/task.py\",\r\nline 242, in main\r\n   return task(*args)\r\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/task.py\",\r\nline 234, in task\r\n   TASKS[verb, kind]((chrom, start, end), resolution, outfilename, *args)\r\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/segway-0.2.0-py2.6.egg/segway/task.py\",\r\nline 211, in run_viterbi_save_bed\r\n   output = VITERBI_PROG.getoutput(*args)\r\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 203, in getoutput\r\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 191, in _getoutput\r\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 154, in _popen\r\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 54, in\r\n_returncode_error_factory\r\noptbuild.ReturncodeError:\r\n/segway-build/arch/Linux-x86_64/bin/gmtkViterbi returned 1\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=13_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/13/supervision-labels-are-disabled-during\" rel=\"nofollow\" title=\"Supervision labels are disabled during identify\" class=\"ap-connect-link\">#13</a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-Low</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/jay.hesselberth/\" rel=\"nofollow\">jay.hesselberth</a> on August 18, 2010 12:29:09</em></p>\n<p>I migrated some segway training runs from one file system to another; this changed the root path and so the .inc files referenced by segway.inc and input.master changed.  When I initiate an identify run, the gmtkTriangulate task raises and exception and exits the segway run cleanly:</p>\n<p>/segway-projects/results/20100812/exp1/segway.str:1:70: error: /segway-results/results/20100812/exp1/auxiliary/segway.inc: No such file or directory\nParse Error in file '/segway-projects/results/20100812/exp1/segway.str': expecting variable type at or before line 7, near (TYPE_SEGCOUNTDOWN)\nExiting Program\nTraceback (most recent call last):\n  File \"/segway-build/arch/Linux-x86_64/bin/segway\", line 8, in &lt;module&gt;\n    load_entry_point('segway==0.2.0', 'console_scripts', 'segway')()\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/run.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/run.py</a>\", line 3694, in main\n    return runner()\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/run.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/run.py</a>\", line 3514, in <strong>call</strong>\n    self.run(*args, <strong>kwargs)\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/run.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/run.py</a>\", line 3487, in run\n    self.run_triangulate()\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/run.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/run.py</a>\", line 3084, in run_triangulate\n    self.run_triangulate_single(num_segs)\n  File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/run.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/run.py</a>\", line 3077, in run_triangulate_single\n    prog(</strong>kwargs)\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 78, in <strong>call</strong>\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 209, in run\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 191, in _getoutput\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 154, in _popen\n  File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 54, in _returncode_error_factory\noptbuild.ReturncodeError: /segway-build/arch/Linux-x86_64/bin/gmtkTriangulate returned 1</p>\n<p>However, the gmtkViterbi task that uses input.master recognizes the error and raises and exception, but then (apparently) thinks it exited because it ran out of memory and launches another job with increased memory requirements (below; there are multiple of these errors in a row as it keeps trying to launch the same job repeatedly).  Rather than doing this, it should exit cleanly as above because the model isn't correctly parsed.</p>\n<p>root@ip-10-204-151-58\n/segway-projects/results/20100818/exp1/20100818.identify.20100818/output/e/identify</p>\n<blockquote>\n<p>cat vit999.<a href=\"#!/hoffmanlab/segway/commits/20100818\" rel=\"nofollow\" class=\"ap-connect-link\">20100818</a>.identify.<a href=\"#!/hoffmanlab/segway/commits/20100818\" rel=\"nofollow\" class=\"ap-connect-link\">20100818</a>.<a href=\"#!/hoffmanlab/segway/commits/196ffc5aaadf11dfbaf712313b0a94cc\" rel=\"nofollow\" class=\"ap-connect-link\">196ffc5aaadf11dfbaf712313b0a94cc</a>\n/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://path-2.2-py2.6.egg/path.py:32\" rel=\"nofollow\" class=\"ap-connect-link\">path-2.2-py2.6.egg/path.py:32</a>:\nDeprecationWarning: the md5 module is deprecated; use hashlib instead\n/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://optbuild-0.1.7-py2.6.egg/optbuild.py:294\" rel=\"nofollow\" class=\"ap-connect-link\">optbuild-0.1.7-py2.6.egg/optbuild.py:294</a>:\nDeprecationWarning: object.<strong>new</strong>() takes no parameters\n/segway-build/arch/Linux-x86_64/lib/python2.6/tables/leaf.py:415:\nPerformanceWarning: The Leaf <code>/supercontig_5/continuous</code> is\nexceeding the maximum recommended rowsize (<a href=\"#!/hoffmanlab/segway/commits/32000000\" rel=\"nofollow\" class=\"ap-connect-link\">32000000</a> bytes);\nbe ready to see PyTables asking for <em>lots</em> of memory and possibly slow\nI/O.  You may want to reduce the rowsize by trimming the value of\ndimensions that are orthogonal (and preferably close) to the main\ndimension of this leave.  Alternatively, in case you have specified a\nvery small/large chunksize, you may want to increase/decrease it.\n PerformanceWarning)\n/segway-projects/results/20100812/exp1/params/input.master:1:70:\nerror: /segway-results/results/20100812/exp1/auxiliary/segway.inc: No\nsuch file or directory\nERROR: In file '/segway-projects/results/20100812/exp1/params/input.master'\nline 18, DT 'map_frameIndex_ruler', equation 'mod(p0, RULER_SCALE) ==\n0 ':  Invalid symbol at 'ruler_scale)==0'\nTraceback (most recent call last):\n File \"/segway-build/arch/Linux-x86_64/bin/segway-task\", line 8, in &lt;module&gt;\n   load_entry_point('segway==0.2.0', 'console_scripts', 'segway-task')()\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/task.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/task.py</a>\",\nline 242, in main\n   return task(<em>args)\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/task.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/task.py</a>\",\nline 234, in task\n   TASKS<a data-is-external-link=\"true\" href=\"/hoffmanlab/segway/src/f04cce0da8be2a440391951445c15aa6e3f37f77/(chrom,%20start,%20end),%20resolution,%20outfilename,%20*args\" rel=\"nofollow\">verb, kind</a>\n File \"/segway-build/arch/Linux-x86_64/lib/python2.6/<a href=\"http://segway-0.2.0-py2.6.egg/segway/task.py\" rel=\"nofollow\" class=\"ap-connect-link\">segway-0.2.0-py2.6.egg/segway/task.py</a>\",\nline 211, in run_viterbi_save_bed\n   output = VITERBI_PROG.getoutput(</em>args)\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 203, in getoutput\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 191, in _getoutput\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 154, in _popen\n File \"build/bdist.linux-x86_64/egg/optbuild.py\", line 54, in\n_returncode_error_factory\noptbuild.ReturncodeError:\n/segway-build/arch/Linux-x86_64/bin/gmtkViterbi returned 1</p>\n</blockquote>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=13\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=13</a></em></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:19.401788+00:00", "milestone": null, "updated_on": "2016-02-23T19:42:22.088355+00:00", "type": "issue", "id": 8}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/9/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/9/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/9/checking-job-exit-status-is-unreliable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/9/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Checking job exit status is unreliable", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #11\r\n\r\n**Imported Labels**: bug, imported, Priority-Low\r\n\r\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on November 24, 2009 14:39:44_\r\n\r\nSwitching to a new work unit/hive architecture might be better. Set the\r\nulimit using the script. Allow running multiple work units per script.\r\n\r\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=11_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/11/set-priority-of-submitted-jobs\" rel=\"nofollow\" title=\"Set priority of submitted jobs\" class=\"ap-connect-link\">#11</a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-Low</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on November 24, 2009 14:39:44</em></p>\n<p>Switching to a new work unit/hive architecture might be better. Set the\nulimit using the script. Allow running multiple work units per script.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=11\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=11</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:19.985199+00:00", "milestone": null, "updated_on": "2014-06-09T19:00:53.215682+00:00", "type": "issue", "id": 9}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/10/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/10/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/10/flexible-callback-for-setting-job"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/10/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Flexible callback for setting job parameters", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #9\n\n**Imported Labels**: enhancement, imported, Priority-Medium\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on November 14, 2009 13:36:58_\n\nAllow a user to specify a Python function that will take information about\r\na job and set parameters. This would allow people to, say, switch queues\r\ndepending on job memory usage requirements.\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=9_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/9/checking-job-exit-status-is-unreliable\" rel=\"nofollow\" title=\"Checking job exit status is unreliable\" class=\"ap-connect-link\">#9</a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on November 14, 2009 13:36:58</em></p>\n<p>Allow a user to specify a Python function that will take information about\na job and set parameters. This would allow people to, say, switch queues\ndepending on job memory usage requirements.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=9\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=9</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:20.188187+00:00", "milestone": null, "updated_on": "2014-06-09T18:34:20.605045+00:00", "type": "issue", "id": 10}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/11/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/11/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/11/set-priority-of-submitted-jobs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/11/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Set priority of submitted jobs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #8\n\n**Imported Labels**: enhancement, imported, Performance, Priority-Medium\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on November 14, 2009 13:35:26_\n\nThis is part of the nativeSpecification for each clustering system.\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=8_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/8/segway-should-not-requeue-jobs-that-failed\" rel=\"nofollow\" title=\"Segway should not requeue jobs that failed for reasons other than out-of-memory\" class=\"ap-connect-link\"><s>#8</s></a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Performance, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on November 14, 2009 13:35:26</em></p>\n<p>This is part of the nativeSpecification for each clustering system.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=8\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=8</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:20.792688+00:00", "milestone": null, "updated_on": "2014-06-09T18:34:21.440078+00:00", "type": "issue", "id": 11}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/12/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/12/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/12/log-jobstab-sometimes-does-not-report"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/12/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "log/jobs.tab sometimes does not report maxvmem >2G on LSF", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #7\n\n**Imported Labels**: bug, Cluster-LSF, imported, OpSys-Linux, Priority-Low\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on November 13, 2009 18:03:27_\n\nEven for very large jobs, only 2G of maxvmem is reported.\r\n\r\nThis might be a problem with some upstream package (either DRMAA for LSF or\r\nthe Platform LSF API itself) using an unsigned int32 somewhere where size_t\r\nshould be used.\r\n\r\nI haven't investigated much, but it is a problem found only at the Sanger\r\nso far. At the EBI, I don't have this issue. At the EBI, the system\r\nparameter setting LSF_UNIT_FOR_LIMITS is set to \"MB\" rather than the\r\ndefault of \"KB\" (because the values reported are much smaller). But at\r\nSanger memhog is not installed so it's not as easy to investigate further.\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=7_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/7/possible-model-generation-segment-table\" rel=\"nofollow\" title=\"Possible model generation / segment table bug\" class=\"ap-connect-link\">#7</a></p>\n<p><strong>Imported Labels</strong>: bug, Cluster-LSF, imported, OpSys-Linux, Priority-Low</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on November 13, 2009 18:03:27</em></p>\n<p>Even for very large jobs, only 2G of maxvmem is reported.</p>\n<p>This might be a problem with some upstream package (either DRMAA for LSF or\nthe Platform LSF API itself) using an unsigned int32 somewhere where size_t\nshould be used.</p>\n<p>I haven't investigated much, but it is a problem found only at the Sanger\nso far. At the EBI, I don't have this issue. At the EBI, the system\nparameter setting LSF_UNIT_FOR_LIMITS is set to \"MB\" rather than the\ndefault of \"KB\" (because the values reported are much smaller). But at\nSanger memhog is not installed so it's not as easy to investigate further.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=7\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=7</a></em></p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:21.646883+00:00", "milestone": null, "updated_on": "2014-06-09T18:58:56.383053+00:00", "type": "issue", "id": 12}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/13/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/13/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/13/supervision-labels-are-disabled-during"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/13/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Supervision labels are disabled during identify", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #4\n\n**Imported Labels**: bug, imported, Priority-Medium\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on October 07, 2009 10:13:11_\n\nFix. Allow specification of a number of BED files to segway-task that will\r\nbe laid down as extra int tracks.\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=4_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/4/add-slurm-cluster-system\" rel=\"nofollow\" title=\"Add Slurm cluster system\" class=\"ap-connect-link\"><s>#4</s></a></p>\n<p><strong>Imported Labels</strong>: bug, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on October 07, 2009 10:13:11</em></p>\n<p>Fix. Allow specification of a number of BED files to segway-task that will\nbe laid down as extra int tracks.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=4\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=4</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:21.935790+00:00", "milestone": null, "updated_on": "2014-06-09T18:34:22.435304+00:00", "type": "issue", "id": 13}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/14/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/14/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/14/cant-run-training-and-identification-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/14/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Can't run training and identification in same run", "component": null, "votes": 0, "watches": 2, "content": {"raw": "From Google Code Issue #3\n\n**Imported Labels**: enhancement, imported, Priority-Low\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on October 07, 2009 10:07:58_\n\nSuggested fix: change segway-task such that if an existing file is passed\r\nas the argument, it will not rewrite another one.\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=3_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/3/add-oar-cluster-management-system\" rel=\"nofollow\" title=\"Add OAR cluster management system\" class=\"ap-connect-link\">#3</a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Low</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on October 07, 2009 10:07:58</em></p>\n<p>Suggested fix: change segway-task such that if an existing file is passed\nas the argument, it will not rewrite another one.</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=3\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=3</a></em></p>", "type": "rendered"}, "assignee": null, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:22.719204+00:00", "milestone": null, "updated_on": "2014-06-09T18:57:17.769137+00:00", "type": "issue", "id": 14}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/15/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/15/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/15/allow-multiple-include-coords-exclude"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/15/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Allow multiple --include-coords, --exclude-coords options", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #2\n\n**Imported Labels**: enhancement, imported, Priority-Medium\n\n_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on October 05, 2009 17:14:48_\n\nThis would be nice. For now you can simulate this in bash by using\r\nsomething like --include-coords=<(cat file1.bed file2.bed <(zcat\r\nfile3.bed.gz)).\n\n_Original issue: http://code.google.com/p/segway-genome/issues/detail?id=2_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/segway/issues/2/lsf_unit_for_limits-not-used-for-resource\" rel=\"nofollow\" title=\"LSF_UNIT_FOR_LIMITS not used for resource requests\" class=\"ap-connect-link\"><s>#2</s></a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on October 05, 2009 17:14:48</em></p>\n<p>This would be nice. For now you can simulate this in bash by using\nsomething like --include-coords=&lt;(cat file1.bed file2.bed &lt;(zcat\nfile3.bed.gz)).</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/segway-genome/issues/detail?id=2\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/segway-genome/issues/detail?id=2</a></em></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T18:34:23.800984+00:00", "milestone": null, "updated_on": "2014-06-09T18:34:23.800984+00:00", "type": "issue", "id": 15}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/16/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/16/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/16/posterior-output-doesnt-work-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/16/vote"}}, "reporter": {"display_name": "ajshaw", "uuid": "{547650d6-1225-4731-b1da-ba9913babfbf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D"}, "html": {"href": "https://bitbucket.org/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1f9b227ab720d7a41f4f0d49570db03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsA-2.png"}}, "nickname": "ajshaw", "type": "user", "account_id": "5b22d060ba383e0814004a64"}, "title": "Posterior output doesn't work with sublabels", "component": null, "votes": 0, "watches": 2, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": {"display_name": "ajshaw", "uuid": "{547650d6-1225-4731-b1da-ba9913babfbf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D"}, "html": {"href": "https://bitbucket.org/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1f9b227ab720d7a41f4f0d49570db03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsA-2.png"}}, "nickname": "ajshaw", "type": "user", "account_id": "5b22d060ba383e0814004a64"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-06-20T18:55:01.431317+00:00", "milestone": null, "updated_on": "2014-10-24T14:05:39.267431+00:00", "type": "issue", "id": 16}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/17/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/17/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/17/unclear-error-message-when-using-space"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/17/vote"}}, "reporter": {"display_name": "ajshaw", "uuid": "{547650d6-1225-4731-b1da-ba9913babfbf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D"}, "html": {"href": "https://bitbucket.org/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1f9b227ab720d7a41f4f0d49570db03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsA-2.png"}}, "nickname": "ajshaw", "type": "user", "account_id": "5b22d060ba383e0814004a64"}, "title": "Unclear error message when using space-delimited segment table", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If the user specifies a segment table with --seg-table=*FILE*, and the file separates by spaces rather than tabs (text editors sometimes replace tabs with spaces automatically depending on their configurations), segway fails on an assertion error which does not make clear what the problem is. Depending on whether this is common, it may help users to suggest that this may be the problem.\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/ashaw/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway==1.2.0.dev-rel889-hg992cc54de504', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 2537, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 2359, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 2320, in run\r\n    self.save_observations_params()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 1460, in save_observations_params\r\n    self.save_include()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 1337, in save_include\r\n    IncludeSaver(self)(self.gmtk_include_filename, aux_dirpath,\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py\", line 136, in __init__\r\n    copy_attrs(runner, self, self.copy_attrs)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py\", line 128, in copy_attrs\r\n    setattr(dst, attr, getattr(src, attr))\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py\", line 465, in __get__\r\n    res = self.fget(instance or owner)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 1064, in card_seg_countdown\r\n    return self.seg_countdowns_initial.max() + 1\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py\", line 465, in __get__\r\n    res = self.fget(instance or owner)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 1038, in seg_countdowns_initial\r\n    table = self.seg_table\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py\", line 465, in __get__\r\n    res = self.fget(instance or owner)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py\", line 808, in seg_table\r\n    label = row[\"label\"]\r\nKeyError: 'label'\r\n\r\n\r\n```\r\n", "markup": "markdown", "html": "<p>If the user specifies a segment table with --seg-table=<em>FILE</em>, and the file separates by spaces rather than tabs (text editors sometimes replace tabs with spaces automatically depending on their configurations), segway fails on an assertion error which does not make clear what the problem is. Depending on whether this is common, it may help users to suggest that this may be the problem.</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/mnt/work1/users/home2/ashaw/bin/segway&quot;, line 9, in &lt;module&gt;\n    load_entry_point(&#39;segway==1.2.0.dev-rel889-hg992cc54de504&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 2537, in main\n    return runner()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 2359, in __call__\n    self.run(*args, **kwargs)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 2320, in run\n    self.save_observations_params()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 1460, in save_observations_params\n    self.save_include()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 1337, in save_include\n    IncludeSaver(self)(self.gmtk_include_filename, aux_dirpath,\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py&quot;, line 136, in __init__\n    copy_attrs(runner, self, self.copy_attrs)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py&quot;, line 128, in copy_attrs\n    setattr(dst, attr, getattr(src, attr))\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py&quot;, line 465, in __get__\n    res = self.fget(instance or owner)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 1064, in card_seg_countdown\n    return self.seg_countdowns_initial.max() + 1\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py&quot;, line 465, in __get__\n    res = self.fget(instance or owner)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 1038, in seg_countdowns_initial\n    table = self.seg_table\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/_util.py&quot;, line 465, in __get__\n    res = self.fget(instance or owner)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hg992cc54de504-py2.7.egg/segway/run.py&quot;, line 808, in seg_table\n    label = row[&quot;label&quot;]\nKeyError: &#39;label&#39;\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-07-28T08:07:08.893479+00:00", "milestone": null, "updated_on": "2014-10-16T14:53:44.419024+00:00", "type": "issue", "id": 17}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/18/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/18/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/18/divide-by-zero-error-when-num-sublabels-is"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/18/vote"}}, "reporter": {"display_name": "ajshaw", "uuid": "{547650d6-1225-4731-b1da-ba9913babfbf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D"}, "html": {"href": "https://bitbucket.org/%7B547650d6-1225-4731-b1da-ba9913babfbf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1f9b227ab720d7a41f4f0d49570db03fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsA-2.png"}}, "nickname": "ajshaw", "type": "user", "account_id": "5b22d060ba383e0814004a64"}, "title": "Divide-by-zero error when num-sublabels is set to 0", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Setting num-sublabels to 1 is what disables hierarchical segmentation and sets it to 1 sublabel per label, but setting num-sublabels to 0 is not safely accounted for, and results in a divide-by-zero error. If this is a setting that doesn't make sense, then it would be better if it triggered a helpful error message.\r\n\r\nSteps to reproduce: segway train --num-sublabels=0\r\n\r\nResult:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/ashaw/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway==1.2.0.dev-rel889-hga69ed44ef8c8p', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py\", line 2537, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py\", line 2359, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py\", line 2333, in run\r\n    self.run_train()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py\", line 1915, in run_train\r\n    dst_filenames = self.setup_train()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py\", line 1878, in setup_train\r\n    self.params_dirpath, self.clobber)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py\", line 150, in __call__\r\n    *args, **kwargs)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py\", line 452, in save_template\r\n    save_substituted_resource(filename, resource, mapping)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py\", line 435, in save_substituted_resource\r\n    text = tmpl.substitute(mapping)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/string.py\", line 172, in substitute\r\n    return self.pattern.sub(convert, self.template)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/string.py\", line 165, in convert\r\n    return '%s' % (val,)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py\", line 236, in __str__\r\n    return make_spec(self.type_name, self.generate_objects())\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py\", line 79, in make_spec\r\n    items = list(iterable)\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py\", line 446, in generate_objects\r\n    yield self.make_dense_cpt_seg_subseg_spec()\r\n  File \"/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py\", line 338, in make_dense_cpt_seg_subseg_spec\r\n    cpt = fill_array(1.0 / num_subsegs, (self.num_segs, num_subsegs))\r\nZeroDivisionError: float division by zero\r\n```", "markup": "markdown", "html": "<p>Setting num-sublabels to 1 is what disables hierarchical segmentation and sets it to 1 sublabel per label, but setting num-sublabels to 0 is not safely accounted for, and results in a divide-by-zero error. If this is a setting that doesn't make sense, then it would be better if it triggered a helpful error message.</p>\n<p>Steps to reproduce: segway train --num-sublabels=0</p>\n<p>Result:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/mnt/work1/users/home2/ashaw/bin/segway&quot;, line 9, in &lt;module&gt;\n    load_entry_point(&#39;segway==1.2.0.dev-rel889-hga69ed44ef8c8p&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py&quot;, line 2537, in main\n    return runner()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py&quot;, line 2359, in __call__\n    self.run(*args, **kwargs)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py&quot;, line 2333, in run\n    self.run_train()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py&quot;, line 1915, in run_train\n    dst_filenames = self.setup_train()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/run.py&quot;, line 1878, in setup_train\n    self.params_dirpath, self.clobber)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py&quot;, line 150, in __call__\n    *args, **kwargs)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py&quot;, line 452, in save_template\n    save_substituted_resource(filename, resource, mapping)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/_util.py&quot;, line 435, in save_substituted_resource\n    text = tmpl.substitute(mapping)\n  File &quot;/mnt/work1/software/python/2.7/lib/python2.7/string.py&quot;, line 172, in substitute\n    return self.pattern.sub(convert, self.template)\n  File &quot;/mnt/work1/software/python/2.7/lib/python2.7/string.py&quot;, line 165, in convert\n    return &#39;%s&#39; % (val,)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py&quot;, line 236, in __str__\n    return make_spec(self.type_name, self.generate_objects())\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py&quot;, line 79, in make_spec\n    items = list(iterable)\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py&quot;, line 446, in generate_objects\n    yield self.make_dense_cpt_seg_subseg_spec()\n  File &quot;/mnt/work1/users/home2/ashaw/bin/lib/python2.7/site-packages/segway-1.2.0.dev_rel889_hga69ed44ef8c8p-py2.7.egg/segway/input_master.py&quot;, line 338, in make_dense_cpt_seg_subseg_spec\n    cpt = fill_array(1.0 / num_subsegs, (self.num_segs, num_subsegs))\nZeroDivisionError: float division by zero\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-08-07T15:12:09.466048+00:00", "milestone": null, "updated_on": "2014-08-07T15:14:39.454720+00:00", "type": "issue", "id": 18}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/19/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/19/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/19/segmentation-changes-based-on-order-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/19/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segmentation changes based on order of tracks specified", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Segway will produce different segmentations if the `--included-tracknames` option (or equivalent) has a different ordering of tracknames. ", "markup": "markdown", "html": "<p>Segway will produce different segmentations if the <code>--included-tracknames</code> option (or equivalent) has a different ordering of tracknames. </p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2014-08-28T19:49:01.592447+00:00", "milestone": null, "updated_on": "2014-11-25T19:12:50.593534+00:00", "type": "issue", "id": 19}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/20/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/20/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/20/segway-version-prints-out-revision-instead"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/20/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway --version prints out \"$Revision$\" instead of correct version number", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Segway previous relied on SVN keyword $Revision$ to be substituted with the correct version number to display the version correctly. Currently it simply prints out the string \"$Revision$\" instead.", "markup": "markdown", "html": "<p>Segway previous relied on SVN keyword $Revision$ to be substituted with the correct version number to display the version correctly. Currently it simply prints out the string \"$Revision$\" instead.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-08-28T19:50:31.378828+00:00", "milestone": null, "updated_on": "2015-10-02T13:57:08.761996+00:00", "type": "issue", "id": 20}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/21/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/21/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/21/segway-installation-procedure-is-broken"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/21/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway installation procedure is broken", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently the installation procedure for Segway is broken when it comes to installing PyTables (3.1.1).\r\n\r\ne.g.\r\n```\r\n$ cython --version\r\nCython version 0.21\r\n$ pip install tables\r\nDownloading/unpacking tables\r\n  Running setup.py egg_info for package tables\r\n    * Using Python 2.7.3 (default, Apr 10 2013, 06:20:15)\r\n    * Found numpy 1.9.0 package installed.\r\n    * Found numexpr 2.4 package installed.\r\n    .. ERROR:: You need Cython 0.13 or greater to compile PyTables!\r\n    Complete output from command python setup.py egg_info:\r\n    * Using Python 2.7.3 (default, Apr 10 2013, 06:20:15)\r\n```\r\n\r\nThis is a problem with PyTables. Specifically it's version/import checking of Cython in setup.py. The current/latest release in PyPI that is installed with pip breaks with the newest version of Cython (and 0.20.2 works while 0.21 doesn't).\r\n\r\nThe current source release of PyTables does not have this issue.\r\n\r\nAn issue was raised with PyTables here:\r\nhttps://github.com/PyTables/PyTables/issues/394", "markup": "markdown", "html": "<p>Currently the installation procedure for Segway is broken when it comes to installing PyTables (3.1.1).</p>\n<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span>$ cython --version\nCython version <span class=\"m\">0</span>.21\n$ pip install tables\nDownloading/unpacking tables\n  Running setup.py egg_info <span class=\"k\">for</span> package tables\n    * Using Python <span class=\"m\">2</span>.7.3 <span class=\"o\">(</span>default, Apr <span class=\"m\">10</span> <span class=\"m\">2013</span>, <span class=\"m\">06</span>:20:15<span class=\"o\">)</span>\n    * Found numpy <span class=\"m\">1</span>.9.0 package installed.\n    * Found numexpr <span class=\"m\">2</span>.4 package installed.\n    .. ERROR:: You need Cython <span class=\"m\">0</span>.13 or greater to compile PyTables!\n    Complete output from <span class=\"nb\">command</span> python setup.py egg_info:\n    * Using Python <span class=\"m\">2</span>.7.3 <span class=\"o\">(</span>default, Apr <span class=\"m\">10</span> <span class=\"m\">2013</span>, <span class=\"m\">06</span>:20:15<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>This is a problem with PyTables. Specifically it's version/import checking of Cython in setup.py. The current/latest release in PyPI that is installed with pip breaks with the newest version of Cython (and 0.20.2 works while 0.21 doesn't).</p>\n<p>The current source release of PyTables does not have this issue.</p>\n<p>An issue was raised with PyTables here:\n<a href=\"https://github.com/PyTables/PyTables/issues/394\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/PyTables/PyTables/issues/394</a></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-15T14:30:28.714798+00:00", "milestone": null, "updated_on": "2014-11-07T14:38:37.000156+00:00", "type": "issue", "id": 21}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/22/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/22/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/22/segway-layer-bigbed-conversion-fails-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/22/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "segway-layer bigBed conversion fails when blockSize == 0", "component": null, "votes": 0, "watches": 3, "content": {"raw": "bigBed conversion is failing in `segway-layer`, it appears this is because the blockSizes begin with 0 instead of 1.  Here's an example from within the simpleseg test:\r\n\r\n\r\n```\r\n#!python\r\n\r\njayhesselberth@urburp ~/devel/segway/test/simpleseg/test-20141020.VYnG8M/identifydir\r\n$ segway-layer -b segway.layered.bb segway.bed.gz \r\ntrack autoScale=off description=\"segway 4-label segmentation of testtrack1, testtrack2\" viewLimits=0:1 visibility=full name=segway.034364de589011e4ac68542696df0d9d itemRgb=on\r\n\r\nchr1\t0\t8000\t1\t1000\t.\t0\t8000\t217,95,2\t3\t2000,2000,1\t0,4000,7999\r\nchr1\t0\t8000\t2\t1000\t.\t0\t8000\t117,112,179\t4\t0,1000,1000,1\t0,2000,6000,7999\r\nchr1\t0\t8000\t3\t1000\t.\t0\t8000\t231,41,138\t3\t0,1000,1000\t0,3000,7000\r\npass1 - making usageList (1 chroms): 0 millis\r\nError line 2 of /var/folders/s5/dh_w3yds5qx9gl409s178_qw0000gn/T/segway2UkENz.bed: BED blockSizes must be greater than 0, blockSize[0] = 0\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/segway-layer\", line 9, in <module>\r\n    load_entry_point('segway==1.2', 'console_scripts', 'segway-layer')()\r\n  File \"/usr/local/lib/python2.7/site-packages/segway/layer.py\", line 393, in main\r\n    *args)\r\n  File \"/usr/local/lib/python2.7/site-packages/segway/layer.py\", line 358, in layer\r\n    segmentation.save(outfilename, bigbed_outfilename)\r\n  File \"/usr/local/lib/python2.7/site-packages/segway/layer.py\", line 270, in save\r\n    BEDTOBIGBED_PROG(bigbed_infilename, sizes_file.name, bigbed_outfilename)\r\n  File \"/usr/local/lib/python2.7/site-packages/segway/layer.py\", line 270, in save\r\n    BEDTOBIGBED_PROG(bigbed_infilename, sizes_file.name, bigbed_outfilename)\r\n  File \"/usr/local/lib/python2.7/site-packages/optbuild.py\", line 81, in __call__\r\n    return self.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/optbuild.py\", line 212, in run\r\n    self._getoutput(args, kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/optbuild.py\", line 194, in _getoutput\r\n    stdin, stdout, stderr, cwd)\r\n  File \"/usr/local/lib/python2.7/site-packages/optbuild.py\", line 157, in _popen\r\n    _returncode_error_factory(cmdline, returncode, output, error)\r\n  File \"/usr/local/lib/python2.7/site-packages/optbuild.py\", line 57, in _returncode_error_factory\r\n    raise error_cls, (cmdline, returncode, output, error)\r\noptbuild.ReturncodeError: bedToBigBed returned 255\r\n\r\n```\r\n", "markup": "markdown", "html": "<p>bigBed conversion is failing in <code>segway-layer</code>, it appears this is because the blockSizes begin with 0 instead of 1.  Here's an example from within the simpleseg test:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">jayhesselberth</span><span class=\"nd\">@urburp</span> <span class=\"o\">~/</span><span class=\"n\">devel</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">simpleseg</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"mf\">20141020.</span><span class=\"n\">VYnG8M</span><span class=\"o\">/</span><span class=\"n\">identifydir</span>\n<span class=\"err\">$</span> <span class=\"n\">segway</span><span class=\"o\">-</span><span class=\"n\">layer</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"n\">segway</span><span class=\"o\">.</span><span class=\"n\">layered</span><span class=\"o\">.</span><span class=\"n\">bb</span> <span class=\"n\">segway</span><span class=\"o\">.</span><span class=\"n\">bed</span><span class=\"o\">.</span><span class=\"n\">gz</span> \n<span class=\"n\">track</span> <span class=\"n\">autoScale</span><span class=\"o\">=</span><span class=\"n\">off</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;segway 4-label segmentation of testtrack1, testtrack2&quot;</span> <span class=\"n\">viewLimits</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span> <span class=\"n\">visibility</span><span class=\"o\">=</span><span class=\"n\">full</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">segway</span><span class=\"o\">.</span><span class=\"mo\">034364</span><span class=\"n\">de589011e4ac68542696df0d9d</span> <span class=\"n\">itemRgb</span><span class=\"o\">=</span><span class=\"n\">on</span>\n\n<span class=\"n\">chr1</span>    <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">1</span>   <span class=\"mi\">1000</span>    <span class=\"o\">.</span>   <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">217</span><span class=\"p\">,</span><span class=\"mi\">95</span><span class=\"p\">,</span><span class=\"mi\">2</span>    <span class=\"mi\">3</span>   <span class=\"mi\">2000</span><span class=\"p\">,</span><span class=\"mi\">2000</span><span class=\"p\">,</span><span class=\"mi\">1</span> <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">4000</span><span class=\"p\">,</span><span class=\"mi\">7999</span>\n<span class=\"n\">chr1</span>    <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">2</span>   <span class=\"mi\">1000</span>    <span class=\"o\">.</span>   <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">117</span><span class=\"p\">,</span><span class=\"mi\">112</span><span class=\"p\">,</span><span class=\"mi\">179</span> <span class=\"mi\">4</span>   <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"mi\">1</span>   <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2000</span><span class=\"p\">,</span><span class=\"mi\">6000</span><span class=\"p\">,</span><span class=\"mi\">7999</span>\n<span class=\"n\">chr1</span>    <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">3</span>   <span class=\"mi\">1000</span>    <span class=\"o\">.</span>   <span class=\"mi\">0</span>   <span class=\"mi\">8000</span>    <span class=\"mi\">231</span><span class=\"p\">,</span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">138</span>  <span class=\"mi\">3</span>   <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"mi\">1000</span> <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3000</span><span class=\"p\">,</span><span class=\"mi\">7000</span>\n<span class=\"n\">pass1</span> <span class=\"o\">-</span> <span class=\"n\">making</span> <span class=\"n\">usageList</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">chroms</span><span class=\"p\">):</span> <span class=\"mi\">0</span> <span class=\"n\">millis</span>\n<span class=\"n\">Error</span> <span class=\"n\">line</span> <span class=\"mi\">2</span> <span class=\"n\">of</span> <span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">folders</span><span class=\"o\">/</span><span class=\"n\">s5</span><span class=\"o\">/</span><span class=\"n\">dh_w3yds5qx9gl409s178_qw0000gn</span><span class=\"o\">/</span><span class=\"n\">T</span><span class=\"o\">/</span><span class=\"n\">segway2UkENz</span><span class=\"o\">.</span><span class=\"n\">bed</span><span class=\"p\">:</span> <span class=\"n\">BED</span> <span class=\"n\">blockSizes</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">greater</span> <span class=\"n\">than</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blockSize</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/bin/segway-layer&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">load_entry_point</span><span class=\"p\">(</span><span class=\"s1\">&#39;segway==1.2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;console_scripts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;segway-layer&#39;</span><span class=\"p\">)()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/segway/layer.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">393</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">main</span>\n    <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/segway/layer.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">358</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">layer</span>\n    <span class=\"n\">segmentation</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">outfilename</span><span class=\"p\">,</span> <span class=\"n\">bigbed_outfilename</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/segway/layer.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">270</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">save</span>\n    <span class=\"n\">BEDTOBIGBED_PROG</span><span class=\"p\">(</span><span class=\"n\">bigbed_infilename</span><span class=\"p\">,</span> <span class=\"n\">sizes_file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bigbed_outfilename</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/segway/layer.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">270</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">save</span>\n    <span class=\"n\">BEDTOBIGBED_PROG</span><span class=\"p\">(</span><span class=\"n\">bigbed_infilename</span><span class=\"p\">,</span> <span class=\"n\">sizes_file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bigbed_outfilename</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/optbuild.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/optbuild.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">212</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_getoutput</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/optbuild.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">194</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_getoutput</span>\n    <span class=\"n\">stdin</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"p\">,</span> <span class=\"n\">cwd</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/optbuild.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">157</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_popen</span>\n    <span class=\"n\">_returncode_error_factory</span><span class=\"p\">(</span><span class=\"n\">cmdline</span><span class=\"p\">,</span> <span class=\"n\">returncode</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/site-packages/optbuild.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">57</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_returncode_error_factory</span>\n    <span class=\"k\">raise</span> <span class=\"n\">error_cls</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">cmdline</span><span class=\"p\">,</span> <span class=\"n\">returncode</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">)</span>\n<span class=\"n\">optbuild</span><span class=\"o\">.</span><span class=\"n\">ReturncodeError</span><span class=\"p\">:</span> <span class=\"n\">bedToBigBed</span> <span class=\"n\">returned</span> <span class=\"mi\">255</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-20T19:56:22.102876+00:00", "milestone": null, "updated_on": "2014-11-11T16:27:55.670281+00:00", "type": "issue", "id": 22}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/23/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/23/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/23/resolution-option-causes-segfault-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/23/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "--resolution option causes SEGFAULT in segway 1.2", "component": null, "votes": 0, "watches": 3, "content": {"raw": "This can be reproduced by adding `--resolution=10` to the segway command in the run.sh script of the simpleseg test.\r\n\r\nThe return codes of submitted jobs in the jobs.tab file are all SIGSEGV (or 139 on OS X).", "markup": "markdown", "html": "<p>This can be reproduced by adding <code>--resolution=10</code> to the segway command in the run.sh script of the simpleseg test.</p>\n<p>The return codes of submitted jobs in the jobs.tab file are all SIGSEGV (or 139 on OS X).</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-20T20:53:17.926935+00:00", "milestone": null, "updated_on": "2014-11-10T20:25:29.822839+00:00", "type": "issue", "id": 23}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/24/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/24/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/24/segway-fails-to-install-without-mercurial"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/24/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway fails to install without Mercurial Installed", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Running setup.py for installing seems to fail on machines without mercurial installed.\r\n\r\nThere have been reports of a StopIteration exception being thrown and no non-python files being copied from the \"data\" folder to where the distribution is installed.\r\n\r\nIt's suspected that it's a bug associated with hgtools.\r\n\r\n", "markup": "markdown", "html": "<p>Running setup.py for installing seems to fail on machines without mercurial installed.</p>\n<p>There have been reports of a StopIteration exception being thrown and no non-python files being copied from the \"data\" folder to where the distribution is installed.</p>\n<p>It's suspected that it's a bug associated with hgtools.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-31T16:25:57.398988+00:00", "milestone": null, "updated_on": "2014-10-31T16:25:57.398988+00:00", "type": "issue", "id": 24}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/25/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/25/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/25/segway-overwrites-custom-models"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/25/vote"}}, "reporter": null, "title": "segway overwrites custom models!", "component": null, "votes": 0, "watches": 2, "content": {"raw": "This is how to reproduce the error. I simply used the test genomedata from your website and made some rather vanilla changes to the structure and input master files. See attached zip file for the custom files used in this test.\r\n\r\ndiff custom.str traindir/segway.str\r\n3c3\r\n< GRAPHICAL_MODEL model_custom\r\n---\r\n> GRAPHICAL_MODEL model_seg\r\n8d7\r\n<      switchingparents: nil;\r\n14d12\r\n<      switchingparents: nil;\r\n21d18\r\n<      switchingparents: nil;\r\n\r\ndiff custom.inc traindir/auxiliary/segway.inc\r\n\r\ndiff custom.master traindir/params/input.master\r\n1c1\r\n< #include \"custom.inc\"\r\n---\r\n> #include \"traindir/auxiliary/segway.inc\"\r\n\r\nAfter this, the \"custom.str\" and \"custom.master\" files are copied to \"custom_backup\" folder. Then we run the following command:\r\n\r\nsegway --clobber --seg-table=custom.tab --resolution=200 --ruler-scale=200 --input-master=custom.master --structure=custom.str --cluster-opt=\"-q scavenger -P scavenger -W 01:00\" --num-labels=4 train test.genomedata customdir\r\n\r\nAfter segway finished running, the two files were overwritten by segway without any warnings.\r\n", "markup": "markdown", "html": "<p>This is how to reproduce the error. I simply used the test genomedata from your website and made some rather vanilla changes to the structure and input master files. See attached zip file for the custom files used in this test.</p>\n<p>diff custom.str traindir/segway.str\n3c3\n&lt; GRAPHICAL_MODEL model_custom</p>\n<hr />\n<blockquote>\n<p>GRAPHICAL_MODEL model_seg\n8d7\n&lt;      switchingparents: nil;\n14d12\n&lt;      switchingparents: nil;\n21d18\n&lt;      switchingparents: nil;</p>\n</blockquote>\n<p>diff custom.inc traindir/auxiliary/segway.inc</p>\n<p>diff custom.master traindir/params/input.master\n1c1\n&lt; #include \"custom.inc\"</p>\n<hr />\n<blockquote>\n<p>#include \"traindir/auxiliary/segway.inc\"</p>\n</blockquote>\n<p>After this, the \"custom.str\" and \"custom.master\" files are copied to \"custom_backup\" folder. Then we run the following command:</p>\n<p>segway --clobber --seg-table=custom.tab --resolution=200 --ruler-scale=200 --input-master=custom.master --structure=custom.str --cluster-opt=\"-q scavenger -P scavenger -W 01:00\" --num-labels=4 train test.genomedata customdir</p>\n<p>After segway finished running, the two files were overwritten by segway without any warnings.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2014-10-31T17:17:08.007592+00:00", "milestone": null, "updated_on": "2014-12-05T20:37:15.615727+00:00", "type": "issue", "id": 25}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/26/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/26.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/26/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/26/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/26/better-error-message-when-dealing-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/26/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better error message when dealing with improper genomedata archives", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently segway does not print out a helpful error message when there's something wrong with a genomedata archive. Most commonly when the archive is created with a datatrack that has 0 data points in it.\r\n\r\nCommonly this is reported:\r\n```\r\n/usr/lib/python2.6/site-packages/segway/structure.py:90: RuntimeWarning: invalid value encountered in long_scalars\r\n\r\n  / num_datapoints_track, MAX_WEIGHT_SCALE)\r\n\r\nParse Error in file 'traintest/segway.str': expecting integer or floating-point value at or before line 44, near (-)\r\n\r\nExiting Program\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/usr/bin/segway\", line 9, in <module>\r\n\r\n    load_entry_point('segway==1.2', 'console_scripts', 'segway')()\r\n\r\n  File \"/usr/lib/python2.6/site-packages/segway/run.py\", line 2545, in main\r\n\r\n    return runner()\r\n\r\n  File \"/usr/lib/python2.6/site-packages/segway/run.py\", line 2367, in __call__\r\n\r\n    self.run(*args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/segway/run.py\", line 2337, in run\r\n\r\n    self.run_triangulate()\r\n\r\n  File \"/usr/lib/python2.6/site-packages/segway/run.py\", line 1765, in run_triangulate\r\n\r\n    self.run_triangulate_single(num_segs)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/segway/run.py\", line 1761, in run_triangulate_single\r\n\r\n    prog(**kwargs)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/optbuild.py\", line 81, in __call__\r\n\r\n    return self.run(*args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/optbuild.py\", line 212, in run\r\n\r\n    self._getoutput(args, kwargs)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/optbuild.py\", line 194, in _getoutput\r\n\r\n    stdin, stdout, stderr, cwd)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/optbuild.py\", line 157, in _popen\r\n\r\n    _returncode_error_factory(cmdline, returncode, output, error)\r\n\r\n  File \"/usr/lib/python2.6/site-packages/optbuild.py\", line 57, in _returncode_error_factory\r\n\r\n    raise error_cls, (cmdline, returncode, output, error)\r\n\r\noptbuild.ReturncodeError: /usr/local/bin/gmtkTriangulate returned 1\r\n```\r\n\r\nA better error message stating the problem should be reported to the user.\r\nThe error can be reproduced with the attached archive.", "markup": "markdown", "html": "<p>Currently segway does not print out a helpful error message when there's something wrong with a genomedata archive. Most commonly when the archive is created with a datatrack that has 0 data points in it.</p>\n<p>Commonly this is reported:</p>\n<div class=\"codehilite\"><pre><span></span>/usr/lib/python2.6/site-packages/segway/structure.py:90: RuntimeWarning: invalid value encountered in long_scalars\n\n  / num_datapoints_track, MAX_WEIGHT_SCALE)\n\nParse Error in file &#39;traintest/segway.str&#39;: expecting integer or floating-point value at or before line 44, near (-)\n\nExiting Program\n\nTraceback (most recent call last):\n\n  File &quot;/usr/bin/segway&quot;, line 9, in &lt;module&gt;\n\n    load_entry_point(&#39;segway==1.2&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n\n  File &quot;/usr/lib/python2.6/site-packages/segway/run.py&quot;, line 2545, in main\n\n    return runner()\n\n  File &quot;/usr/lib/python2.6/site-packages/segway/run.py&quot;, line 2367, in __call__\n\n    self.run(*args, **kwargs)\n\n  File &quot;/usr/lib/python2.6/site-packages/segway/run.py&quot;, line 2337, in run\n\n    self.run_triangulate()\n\n  File &quot;/usr/lib/python2.6/site-packages/segway/run.py&quot;, line 1765, in run_triangulate\n\n    self.run_triangulate_single(num_segs)\n\n  File &quot;/usr/lib/python2.6/site-packages/segway/run.py&quot;, line 1761, in run_triangulate_single\n\n    prog(**kwargs)\n\n  File &quot;/usr/lib/python2.6/site-packages/optbuild.py&quot;, line 81, in __call__\n\n    return self.run(*args, **kwargs)\n\n  File &quot;/usr/lib/python2.6/site-packages/optbuild.py&quot;, line 212, in run\n\n    self._getoutput(args, kwargs)\n\n  File &quot;/usr/lib/python2.6/site-packages/optbuild.py&quot;, line 194, in _getoutput\n\n    stdin, stdout, stderr, cwd)\n\n  File &quot;/usr/lib/python2.6/site-packages/optbuild.py&quot;, line 157, in _popen\n\n    _returncode_error_factory(cmdline, returncode, output, error)\n\n  File &quot;/usr/lib/python2.6/site-packages/optbuild.py&quot;, line 57, in _returncode_error_factory\n\n    raise error_cls, (cmdline, returncode, output, error)\n\noptbuild.ReturncodeError: /usr/local/bin/gmtkTriangulate returned 1\n</pre></div>\n\n\n<p>A better error message stating the problem should be reported to the user.\nThe error can be reproduced with the attached archive.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-11-14T14:30:27.594106+00:00", "milestone": null, "updated_on": "2014-11-14T14:30:27.594106+00:00", "type": "issue", "id": 26}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/27/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/27/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/27/separate-job-report-files-and-reports-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/27/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Separate job report files and reports on LSF", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Will need to pass in N=True as a implementation-specific DRMAA option and LSB_JOB_REPORT_MAIL=N as an environment variable (if and only if LSB_JOB_REPORT_MAIL is not set).\r\n\r\nhttp://stackoverflow.com/questions/9038314/can-i-suppress-an-lsf-job-report-without-sending-mail/28193563#28193563\r\n", "markup": "markdown", "html": "<p>Will need to pass in N=True as a implementation-specific DRMAA option and LSB_JOB_REPORT_MAIL=N as an environment variable (if and only if LSB_JOB_REPORT_MAIL is not set).</p>\n<p><a href=\"http://stackoverflow.com/questions/9038314/can-i-suppress-an-lsf-job-report-without-sending-mail/28193563#28193563\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/9038314/can-i-suppress-an-lsf-job-report-without-sending-mail/28193563#28193563</a></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-01-29T19:58:18.594573+00:00", "milestone": null, "updated_on": "2015-01-29T19:58:18.594573+00:00", "type": "issue", "id": 27}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/28/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/28/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/28/parallelism-on-a-cluster-given-a-number-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/28/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Parallelism on a cluster given a number of cores", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On some cluster systems you can request or are explicitly instructed about the number of cores per node given to you.\r\n\r\nSegway currently submits jobs to a single core in serial that could be run in parallel using mulitple cores. This can mean using a node with multiple cores but only ever using a single core for the entire duration the node is in use.\r\n\r\nA simple change would be to try to group commands (e.g. see details.sh or jobs.sh from a segway run) that can be run in parallel to be submitted with an '&' for each possible core on a node. This would spawn a separate process on each core. Using up all cores until all jobs are completed for the next batch. Another (more efficient) option would to use gnu parallels if the software is available.", "markup": "markdown", "html": "<p>On some cluster systems you can request or are explicitly instructed about the number of cores per node given to you.</p>\n<p>Segway currently submits jobs to a single core in serial that could be run in parallel using mulitple cores. This can mean using a node with multiple cores but only ever using a single core for the entire duration the node is in use.</p>\n<p>A simple change would be to try to group commands (e.g. see details.sh or jobs.sh from a segway run) that can be run in parallel to be submitted with an '&amp;' for each possible core on a node. This would spawn a separate process on each core. Using up all cores until all jobs are completed for the next batch. Another (more efficient) option would to use gnu parallels if the software is available.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-03-24T15:15:09.900360+00:00", "milestone": null, "updated_on": "2015-03-24T15:15:09.900360+00:00", "type": "issue", "id": 28}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/29/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/29/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/29/better-error-reporting-on-running-out-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/29/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better error reporting on running out of memory with GMTK vs other problems", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Currently segway does not distinguish issues between GMTK potentially running out memory to correctly run vs other software issues (such as improper environment settings). Segway assumes that failed jobs are a result of GMTK running out of memory then are attempted again with increased memory. This is not ideal in the problem isn't with GMTK and there's actually sufficient memory available.\r\n\r\nIdeally segway would be able to identify/report the error that occured and early-exit out of running jobs if the error is not a GMTK and memory issue. If there's something wrong with the environment settings it should identify the issue immediately, report it, and exit.", "markup": "markdown", "html": "<p>Currently segway does not distinguish issues between GMTK potentially running out memory to correctly run vs other software issues (such as improper environment settings). Segway assumes that failed jobs are a result of GMTK running out of memory then are attempted again with increased memory. This is not ideal in the problem isn't with GMTK and there's actually sufficient memory available.</p>\n<p>Ideally segway would be able to identify/report the error that occured and early-exit out of running jobs if the error is not a GMTK and memory issue. If there's something wrong with the environment settings it should identify the issue immediately, report it, and exit.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-03-24T15:20:36.030509+00:00", "milestone": null, "updated_on": "2016-02-23T19:38:31.691393+00:00", "type": "issue", "id": 29}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/30/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/30.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/30/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/30/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/30/cannot-generate-command-line-help-files"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/30/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Cannot generate \"command line help\" files without installation of segway", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This issue is targeted at build machines that do not allow for c modules to be built or other external non-python software to be installed. Currently the command line help files are generated using:\r\n\r\n```shell\r\npython gethelp.py segway | sed -e 's/ATTR VALUE/<ATTR VALUE>/g' > _build/cmdline-help/segway.help.txt\r\npython gethelp.py segway-layer | sed -e 's/ATTR VALUE/<ATTR VALUE>/g' > _build/cmdline-help/segway-layer.help.txt\r\npython gethelp.py segway-winner | sed -e 's/ATTR VALUE/<ATTR VALUE>/g' > _build/cmdline-help/segway-winner.help.txt\r\n```\r\n\r\nThe python script itself attempts to run segway (from its subdirectory) but if the software has not been installed properly (on a failed pip install for example) none of the imports will work. A failed \"pip install segway\" does not install *any* of segway's dependencies.\r\n\r\nFor generating documentation it should not be necessary to have a full install happen. However extracting the command-line help text is currently non-trivial without having a proper install first.\r\n\r\nThere are two possible solutions that I'm aware of:\r\n\r\n* Mocking out all failed external imports (making them empty imports and implementing the few necessary functions). See http://docs.readthedocs.org/en/latest/faq.html#i-get-import-errors-on-libraries-that-depend-on-c-modules . The only issue with this comes to mocking out the optplus module. This module adds functionality to optparse that is non-trivial though technically possible to mock out. It may or may not affect the generated help files depending on the mocked out implementation. Non-committed sample in doc/conf.py  (up to optplus not working is shown below): \r\n\r\n```python\r\n# Custom segway configuration\r\n# When not using 'make' to build, the 'help' text included in the documentation is\r\n# not generated. This guarentees generation of the command line help files.\r\nimport os\r\n\r\n# Read the docs custom build logic\r\non_rtd = os.environ.get('READTHEDOCS', None) == 'True'\r\n# If we're building on readthedocs.org\r\nif on_rtd:\r\n    # Do not rely on additional C-based python modules (e.g. genomedata)\r\n    # On a public build system we cannot necessarily control what software is\r\n    # installed.\r\n\r\n    # Add mock imports to simply get the necessary information for\r\n    # documenation to build\r\n    # From http://docs.readthedocs.org/en/latest/faq.html\r\n    from mock import MagicMock\r\n    import optparse\r\n    class CustomMock(MagicMock):\r\n        @classmethod\r\n        # This magic method is not implemented by default\r\n        def __getattr__(cls, name):\r\n            mock_obj = CustomMock()\r\n            # Numpy specific logic to override the assert in run.py\r\n            if name == \"finfo\":\r\n                # Return a callable mock object with a return value of an\r\n                # object with .machep set to less than -17\r\n                # By default, return_value is a mock object\r\n                mock_obj.return_value.machep = -20 # by default\r\n            # Optplus (Michael Hoffman specific optparse add-on) overrides\r\n            if name == \"parse_args\":\r\n                mock_obj.return_value = (None, [\"--help\"])\r\n\r\n            return mock_obj\r\n\r\n    MOCK_MODULES = [\r\n        \"numpy\", \"numpy.random\", \"optbuild\", \"path\", \"tabdelim\",\r\n        \"colorbrewer\", \"tables\", \"genomedata\", \"genomedata._util\",\r\n        \"optplus\"\r\n    ]\r\n    sys.modules.update(\r\n        (module_name, CustomMock()) for module_name in MOCK_MODULES\r\n    )\r\n\r\n```\r\n\r\n* Creating a custom sphinx extension. See http://sphinx-doc.org/extdev/index.html#dev-extensions . A potentially simpler solution would to create an extension/directive where if the include fails, default text is placed in its stead. There's currently no equivalent functionality with current directives in restructured text so an extension would need to be developed. The idea would be if the command line help file is fails to be \"include\"d, then at least some default provided text is inserted which would be better than nothing.", "markup": "markdown", "html": "<p>This issue is targeted at build machines that do not allow for c modules to be built or other external non-python software to be installed. Currently the command line help files are generated using:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>python gethelp.py segway <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/ATTR VALUE/&lt;ATTR VALUE&gt;/g&#39;</span> &gt; _build/cmdline-help/segway.help.txt\npython gethelp.py segway-layer <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/ATTR VALUE/&lt;ATTR VALUE&gt;/g&#39;</span> &gt; _build/cmdline-help/segway-layer.help.txt\npython gethelp.py segway-winner <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/ATTR VALUE/&lt;ATTR VALUE&gt;/g&#39;</span> &gt; _build/cmdline-help/segway-winner.help.txt\n</pre></div>\n\n\n<p>The python script itself attempts to run segway (from its subdirectory) but if the software has not been installed properly (on a failed pip install for example) none of the imports will work. A failed \"pip install segway\" does not install <em>any</em> of segway's dependencies.</p>\n<p>For generating documentation it should not be necessary to have a full install happen. However extracting the command-line help text is currently non-trivial without having a proper install first.</p>\n<p>There are two possible solutions that I'm aware of:</p>\n<ul>\n<li>Mocking out all failed external imports (making them empty imports and implementing the few necessary functions). See <a href=\"http://docs.readthedocs.org/en/latest/faq.html#i-get-import-errors-on-libraries-that-depend-on-c-modules\" rel=\"nofollow\" class=\"ap-connect-link\">http://docs.readthedocs.org/en/latest/faq.html#i-get-import-errors-on-libraries-that-depend-on-c-modules</a> . The only issue with this comes to mocking out the optplus module. This module adds functionality to optparse that is non-trivial though technically possible to mock out. It may or may not affect the generated help files depending on the mocked out implementation. Non-committed sample in doc/conf.py  (up to optplus not working is shown below): </li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"c1\"># Custom segway configuration</span>\n<span class=\"c1\"># When not using &#39;make&#39; to build, the &#39;help&#39; text included in the documentation is</span>\n<span class=\"c1\"># not generated. This guarentees generation of the command line help files.</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"c1\"># Read the docs custom build logic</span>\n<span class=\"n\">on_rtd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;READTHEDOCS&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;True&#39;</span>\n<span class=\"c1\"># If we&#39;re building on readthedocs.org</span>\n<span class=\"k\">if</span> <span class=\"n\">on_rtd</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do not rely on additional C-based python modules (e.g. genomedata)</span>\n    <span class=\"c1\"># On a public build system we cannot necessarily control what software is</span>\n    <span class=\"c1\"># installed.</span>\n\n    <span class=\"c1\"># Add mock imports to simply get the necessary information for</span>\n    <span class=\"c1\"># documenation to build</span>\n    <span class=\"c1\"># From http://docs.readthedocs.org/en/latest/faq.html</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">mock</span> <span class=\"kn\">import</span> <span class=\"n\">MagicMock</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">optparse</span>\n    <span class=\"k\">class</span> <span class=\"nc\">CustomMock</span><span class=\"p\">(</span><span class=\"n\">MagicMock</span><span class=\"p\">):</span>\n        <span class=\"nd\">@classmethod</span>\n        <span class=\"c1\"># This magic method is not implemented by default</span>\n        <span class=\"k\">def</span> <span class=\"fm\">__getattr__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"n\">mock_obj</span> <span class=\"o\">=</span> <span class=\"n\">CustomMock</span><span class=\"p\">()</span>\n            <span class=\"c1\"># Numpy specific logic to override the assert in run.py</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;finfo&quot;</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Return a callable mock object with a return value of an</span>\n                <span class=\"c1\"># object with .machep set to less than -17</span>\n                <span class=\"c1\"># By default, return_value is a mock object</span>\n                <span class=\"n\">mock_obj</span><span class=\"o\">.</span><span class=\"n\">return_value</span><span class=\"o\">.</span><span class=\"n\">machep</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">20</span> <span class=\"c1\"># by default</span>\n            <span class=\"c1\"># Optplus (Michael Hoffman specific optparse add-on) overrides</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;parse_args&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">mock_obj</span><span class=\"o\">.</span><span class=\"n\">return_value</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;--help&quot;</span><span class=\"p\">])</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">mock_obj</span>\n\n    <span class=\"n\">MOCK_MODULES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;numpy.random&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;optbuild&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;path&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tabdelim&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;colorbrewer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tables&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;genomedata&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;genomedata._util&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;optplus&quot;</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"n\">module_name</span><span class=\"p\">,</span> <span class=\"n\">CustomMock</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">module_name</span> <span class=\"ow\">in</span> <span class=\"n\">MOCK_MODULES</span>\n    <span class=\"p\">)</span>\n</pre></div>\n\n\n<ul>\n<li>Creating a custom sphinx extension. See <a href=\"http://sphinx-doc.org/extdev/index.html#dev-extensions\" rel=\"nofollow\" class=\"ap-connect-link\">http://sphinx-doc.org/extdev/index.html#dev-extensions</a> . A potentially simpler solution would to create an extension/directive where if the include fails, default text is placed in its stead. There's currently no equivalent functionality with current directives in restructured text so an extension would need to be developed. The idea would be if the command line help file is fails to be \"include\"d, then at least some default provided text is inserted which would be better than nothing.</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-03-24T15:59:19.346814+00:00", "milestone": null, "updated_on": "2015-03-24T16:23:38.876887+00:00", "type": "issue", "id": 30}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/31/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/31/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/31/better-warning-message-when-include-coords"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/31/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Better warning message when --include-coords includes a region not in the genomedata assembly", "component": null, "votes": 0, "watches": 3, "content": {"raw": "/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/genomedata/__init__.py:722: UserWarning: slice of chromosome data does not overlap any supercontig (filling with 'NaN')\r\n  warn(\"slice of chromosome data does not overlap any supercontig\"\r\n\r\nThe wording of this warning is not clear enough. Its referring to that some part of training region lies completely inside gap.", "markup": "markdown", "html": "<p>/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/genomedata/<strong>init</strong>.py:722: UserWarning: slice of chromosome data does not overlap any supercontig (filling with 'NaN')\n  warn(\"slice of chromosome data does not overlap any supercontig\"</p>\n<p>The wording of this warning is not clear enough. Its referring to that some part of training region lies completely inside gap.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-05-27T15:19:03.877198+00:00", "milestone": null, "updated_on": "2015-06-15T16:18:18.158415+00:00", "type": "issue", "id": 31}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/32/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/32.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/32/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/32/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/32/error-traindir-likelihood-likelihood0ll"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/32/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Error: `traindir/likelihood/likelihood.0.ll` and `traindir/likelihood/likelihood.0.ll` are the same file", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Update 2:\r\nThe root cause of this issue has been found.\r\n\r\nDestination likelihood file is always ```'traindir/likelihood/likelihood.0.ll'``` which is the default since ```save_observation_params``` performs the following:\r\n```\r\n#!python\r\n        if self.train:\r\n            self.set_log_likelihood_filenames()\r\n```\r\n\r\nWhere the ```set_log_likelihood_filenames``` will give ```likelihood.0.ll``` when called without parameters. And ```save_observations_params``` is always called by ```run``` on the main thread.\r\n\r\nIn the mean time, when running with multiple instances, instance 0 will have this file name as generated by another call to  ```set_log_likelihood_filenames```  in ```run_train_instances```, generate another ```likelihood.0.ll```. If instance 0 is the selected winning process, the segway will try to copy the winning log likelihood file to the main thread's saved log likelihood file, which are the same file.\r\n\r\n--------------------------------------------------------------------\r\n\r\nUpdate:\r\nThe error only seems to occur when instance 0 is the winning instance.\r\n\r\n\r\n--------------------------------------------------------------------\r\n\r\nOriginal Post:\r\n*It seems like as long as number of instance is equal to 2* (not true, look for the discussion below), segway will mess up with the source and the destination of the likelihood file at the end of the training when it was trying to manage the result of the training.\r\n\r\nTo reproduce the error, you can modified the run.sh file in test/simpleseg folder in the segway source code, modified the line 28 that call segway train into:\r\n\r\n\r\n```\r\n#!shell\r\n\r\nSEGWAY_RAND_SEED=1498730685 segway \"$cluster_arg\" \\\r\n    --include-coords=\"../include-coords.bed\" --num-instances=2 \\\r\n    --tracks-from=\"../tracks.txt\" --num-labels=2 --max-train-rounds=3 \\\r\n    train \"../simpleseg.genomedata\" traindir \r\n```\r\n\r\n\r\nFull Error Log:\r\n\r\n```\r\n#!\r\n traindir/observations/chr1.0000.float32 (0, 8000)\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Tuesday June 02 2015, 15:29:25 EDT ____\r\nqueued 1: emt0.0.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 2: emt0.0.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 3: emt0.1.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 4: emt0.1.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 5: emt0.2.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 6: emt0.2.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 7: emt1.0.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 8: emt1.0.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 9: emt1.1.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 10: emt1.1.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 11: emt1.2.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nqueued 12: emt1.2.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/xzeng/.local/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway==1.2.2.dev0', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 2580, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 2392, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 2358, in run\r\n    self.run_train()\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 1947, in run_train\r\n    self.finish_train(instance_params, dst_filenames)\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 1929, in finish_train\r\n    self.proc_train_results(instance_params, dst_filenames)\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 2052, in proc_train_results\r\n    self.copy_results(name, src_filename, dst_filename)\r\n  File \"/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py\", line 1488, in copy_results\r\n    copy2(src_filename, dst_filename)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 128, in copy2\r\n    copyfile(src, dst)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 69, in copyfile\r\n    raise Error(\"`%s` and `%s` are the same file\" % (src, dst))\r\nshutil.Error: `traindir/likelihood/likelihood.0.ll` and `traindir/likelihood/likelihood.0.ll` are the same file\r\n```\r\n", "markup": "markdown", "html": "<p>Update 2:\nThe root cause of this issue has been found.</p>\n<p>Destination likelihood file is always <code>'traindir/likelihood/likelihood.0.ll'</code> which is the default since <code>save_observation_params</code> performs the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_log_likelihood_filenames</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>Where the <code>set_log_likelihood_filenames</code> will give <code>likelihood.0.ll</code> when called without parameters. And <code>save_observations_params</code> is always called by <code>run</code> on the main thread.</p>\n<p>In the mean time, when running with multiple instances, instance 0 will have this file name as generated by another call to  <code>set_log_likelihood_filenames</code>  in <code>run_train_instances</code>, generate another <code>likelihood.0.ll</code>. If instance 0 is the selected winning process, the segway will try to copy the winning log likelihood file to the main thread's saved log likelihood file, which are the same file.</p>\n<hr />\n<p>Update:\nThe error only seems to occur when instance 0 is the winning instance.</p>\n<hr />\n<p>Original Post:\n<em>It seems like as long as number of instance is equal to 2</em> (not true, look for the discussion below), segway will mess up with the source and the destination of the likelihood file at the end of the training when it was trying to manage the result of the training.</p>\n<p>To reproduce the error, you can modified the run.sh file in test/simpleseg folder in the segway source code, modified the line 28 that call segway train into:</p>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"nv\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"m\">1498730685</span> segway <span class=\"s2\">&quot;</span><span class=\"nv\">$cluster_arg</span><span class=\"s2\">&quot;</span> <span class=\"se\">\\</span>\n    --include-coords<span class=\"o\">=</span><span class=\"s2\">&quot;../include-coords.bed&quot;</span> --num-instances<span class=\"o\">=</span><span class=\"m\">2</span> <span class=\"se\">\\</span>\n    --tracks-from<span class=\"o\">=</span><span class=\"s2\">&quot;../tracks.txt&quot;</span> --num-labels<span class=\"o\">=</span><span class=\"m\">2</span> --max-train-rounds<span class=\"o\">=</span><span class=\"m\">3</span> <span class=\"se\">\\</span>\n    train <span class=\"s2\">&quot;../simpleseg.genomedata&quot;</span> traindir \n</pre></div>\n\n\n<p>Full Error Log:</p>\n<div class=\"codehilite\"><pre><span></span> traindir/observations/chr1.0000.float32 (0, 8000)\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Tuesday June 02 2015, 15:29:25 EDT ____\nqueued 1: emt0.0.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 2: emt0.0.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 3: emt0.1.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 4: emt0.1.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 5: emt0.2.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 6: emt0.2.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 7: emt1.0.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 8: emt1.0.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 9: emt1.1.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 10: emt1.1.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 11: emt1.2.0.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nqueued 12: emt1.2.bundle.traindir.acaf88c8095d11e58ccb5254004fdc17 ()\nTraceback (most recent call last):\n  File &quot;/mnt/work1/users/home2/xzeng/.local/bin/segway&quot;, line 9, in &lt;module&gt;\n    load_entry_point(&#39;segway==1.2.2.dev0&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 2580, in main\n    return runner()\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 2392, in __call__\n    self.run(*args, **kwargs)\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 2358, in run\n    self.run_train()\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 1947, in run_train\n    self.finish_train(instance_params, dst_filenames)\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 1929, in finish_train\n    self.proc_train_results(instance_params, dst_filenames)\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 2052, in proc_train_results\n    self.copy_results(name, src_filename, dst_filename)\n  File &quot;/mnt/work1/users/home2/xzeng/.local/lib/python2.7/site-packages/segway-1.2.2.dev0-py2.7.egg/segway/run.py&quot;, line 1488, in copy_results\n    copy2(src_filename, dst_filename)\n  File &quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;, line 128, in copy2\n    copyfile(src, dst)\n  File &quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;, line 69, in copyfile\n    raise Error(&quot;`%s` and `%s` are the same file&quot; % (src, dst))\nshutil.Error: `traindir/likelihood/likelihood.0.ll` and `traindir/likelihood/likelihood.0.ll` are the same file\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-06-02T19:39:04.057362+00:00", "milestone": null, "updated_on": "2015-06-16T19:45:36.607592+00:00", "type": "issue", "id": 32}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/33/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/33.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/33/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/33/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/33/change-gmtk-output-from-text-to-hdf5"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/33/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Change GMTK output from text to HDF5 format", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This a feature request to change the text output format from GMTK that segway currently uses to the HDF5 format GMTK now supports.", "markup": "markdown", "html": "<p>This a feature request to change the text output format from GMTK that segway currently uses to the HDF5 format GMTK now supports.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-06-15T16:21:35.822849+00:00", "milestone": null, "updated_on": "2015-06-15T16:21:35.822849+00:00", "type": "issue", "id": 33}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/34/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/34.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/34/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/34/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/34/explicitly-limit-the-number-of-current"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/34/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Explicitly limit the number of current running segway jobs.", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently, Segway will directly submit job to the cluster system as long as all the prerequisite of the job has finished. This is a reasonable behaviour with the assumption that segway should take all the available resources on a cluster.\r\n\r\nHowever, on most cluster system, computational resources used by segway is also shared by other people, where others might want to run a single job that may take a significant portion of the cluster's resources. Since each individual segway jobs is small, it is very easy to become the case that the agile segway take over all the resources in the cluster for a considerable period, making the jobs of others always on hold and not have the enough resources to run.\r\n\r\nOthers ways to solve this problem without changing segway code include specifying a resource quota per user on some cluster system, which would not be agile enough as it is normally only open to cluster administrator. Force all job sent by segway to be not run instantaneously and use a job monitor script to start part of them manually to leave enough resource for reserved is also a common solution (and is currently used in our lab), but without polling the cluster status too frequently by the script (which should not be done because it will consume too much resources) it is very hard to make it efficient.My test shown it to be ~50% slower.\r\n\r\nSo, what I am hoping segway could do is that segway can explicitly limit the number of current jobs running by limit the amount of job it sent to the cluster. It will not directly send jobs to the cluster as long as the number of job already sent to the cluster minus the number of job finished is greater than a specific amount. I am also hoping that this quota is changeable throughout the period of segway runs, perhaps through a shell environment variable.", "markup": "markdown", "html": "<p>Currently, Segway will directly submit job to the cluster system as long as all the prerequisite of the job has finished. This is a reasonable behaviour with the assumption that segway should take all the available resources on a cluster.</p>\n<p>However, on most cluster system, computational resources used by segway is also shared by other people, where others might want to run a single job that may take a significant portion of the cluster's resources. Since each individual segway jobs is small, it is very easy to become the case that the agile segway take over all the resources in the cluster for a considerable period, making the jobs of others always on hold and not have the enough resources to run.</p>\n<p>Others ways to solve this problem without changing segway code include specifying a resource quota per user on some cluster system, which would not be agile enough as it is normally only open to cluster administrator. Force all job sent by segway to be not run instantaneously and use a job monitor script to start part of them manually to leave enough resource for reserved is also a common solution (and is currently used in our lab), but without polling the cluster status too frequently by the script (which should not be done because it will consume too much resources) it is very hard to make it efficient.My test shown it to be ~50% slower.</p>\n<p>So, what I am hoping segway could do is that segway can explicitly limit the number of current jobs running by limit the amount of job it sent to the cluster. It will not directly send jobs to the cluster as long as the number of job already sent to the cluster minus the number of job finished is greater than a specific amount. I am also hoping that this quota is changeable throughout the period of segway runs, perhaps through a shell environment variable.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-06-16T15:39:59.999534+00:00", "milestone": null, "updated_on": "2015-06-16T23:28:49.610072+00:00", "type": "issue", "id": 34}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/35/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/35.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/35/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/35/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/35/track-spec-name-checking"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/35/vote"}}, "reporter": {"display_name": "Elijah Christensen", "uuid": "{339bcdc6-8ddd-43f6-ab36-6c38a4cba8ea}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B339bcdc6-8ddd-43f6-ab36-6c38a4cba8ea%7D"}, "html": {"href": "https://bitbucket.org/%7B339bcdc6-8ddd-43f6-ab36-6c38a4cba8ea%7D/"}, "avatar": {"href": "https://bitbucket.org/account/elijahc/avatar/"}}, "nickname": "elijahc", "type": "user", "account_id": null}, "title": "track spec name checking", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Greetings experimentalist humans, I hail from the lab of Jay Hesselberth.\r\n\r\nI tried to run reverse-world with tied tracks and discovered track names can't start with digits.\r\nIt would be nice if this was checked and failed gracefully with an error message.\r\n\r\nPR coming.", "markup": "markdown", "html": "<p>Greetings experimentalist humans, I hail from the lab of Jay Hesselberth.</p>\n<p>I tried to run reverse-world with tied tracks and discovered track names can't start with digits.\nIt would be nice if this was checked and failed gracefully with an error message.</p>\n<p>PR coming.</p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2015-06-22T22:17:21.950587+00:00", "milestone": null, "updated_on": "2015-09-11T14:39:14.389656+00:00", "type": "issue", "id": 35}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/36/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/36.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/36/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/36/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/36/retrive-observation-from-the-recovery"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/36/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Retrive Observation from the Recovery Directory in Recovery Mode", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently when running at Recovery mode with ```--recover``` without specifying ```--observation```, the Segway will generate the observation on its own. However in most of the time the observation is either in the Recovery directory or can be retrieved from the log/segway.sh file in the Recovery directory. \r\n\r\nIt's seems better if we could add the functionality so that segway will automatically find the observation from the recovery directory.", "markup": "markdown", "html": "<p>Currently when running at Recovery mode with <code>--recover</code> without specifying <code>--observation</code>, the Segway will generate the observation on its own. However in most of the time the observation is either in the Recovery directory or can be retrieved from the log/segway.sh file in the Recovery directory. </p>\n<p>It's seems better if we could add the functionality so that segway will automatically find the observation from the recovery directory.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-07-27T18:25:45.304544+00:00", "milestone": null, "updated_on": "2015-08-04T20:20:03.553761+00:00", "type": "issue", "id": 36}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/37/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/37.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/37/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/37/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/37/semisupervised-mean-generate-from-track"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/37/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Semisupervised Mean Generate from Track data in supervision region.", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently in Semi-supervised mode the initial Gaussian mean is generated in the same way as unsupervised mode i.e. based on the mean of the whole track data plus a random noise.\r\n\r\nIt might be useful to change it, or, at least, add a parameter, such that when initialized the Gaussian Mean in the first step of Expectation Maximization, for each track and each supervision label, the mean will come from the mean from the track data inside all the supervision label regions with that supervision label, instead of the whole track mean.", "markup": "markdown", "html": "<p>Currently in Semi-supervised mode the initial Gaussian mean is generated in the same way as unsupervised mode i.e. based on the mean of the whole track data plus a random noise.</p>\n<p>It might be useful to change it, or, at least, add a parameter, such that when initialized the Gaussian Mean in the first step of Expectation Maximization, for each track and each supervision label, the mean will come from the mean from the track data inside all the supervision label regions with that supervision label, instead of the whole track mean.</p>", "type": "rendered"}, "assignee": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "state": "on hold", "version": null, "edited_on": null, "created_on": "2015-08-04T16:27:56.301383+00:00", "milestone": null, "updated_on": "2015-08-07T15:51:31.171660+00:00", "type": "issue", "id": 37}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/38/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/38.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/38/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/38/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/38/soft-labeling-for-semi-supervised-mode"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/38/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "Soft labeling for Semi-supervised mode", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently the Segway's semi-supervised work in the way such that during training, for a point with semi-supervised label, the whole probability will vanish unless the segments label at that point is equal to the semi-supervised label. \r\n\r\nWe should add a parameter such that when enabled, the probability will vanish unless the segments label at that point is \"close\" to the semi-supervised label. \r\n\r\nFor instance, if the semi-supervised label is 0 at chr1:20000, in training we will allow chr1:20000 have either label 0,1,2,3,4 to have the same positive probability.", "markup": "markdown", "html": "<p>Currently the Segway's semi-supervised work in the way such that during training, for a point with semi-supervised label, the whole probability will vanish unless the segments label at that point is equal to the semi-supervised label. </p>\n<p>We should add a parameter such that when enabled, the probability will vanish unless the segments label at that point is \"close\" to the semi-supervised label. </p>\n<p>For instance, if the semi-supervised label is 0 at chr1:20000, in training we will allow chr1:20000 have either label 0,1,2,3,4 to have the same positive probability.</p>", "type": "rendered"}, "assignee": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-04T17:26:01.526485+00:00", "milestone": null, "updated_on": "2015-08-31T22:11:48.983739+00:00", "type": "issue", "id": 38}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/39/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/39.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/39/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/39/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/39/pip-install-segway-doesnt-work-without"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/39/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "\"pip install segway\" doesn't work without installing other python packages manually", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Special case dependencies need to be installed first. Historically, the two biggest offenders in terms of dependencies have been PyTables and Numpy. PyTables, until only recently could you install through pip reliably but still fails to install if you try to install it as a python package dependency (which is admittedly doesn't make much sense and I've found and reported the bug). Numpy simply will not install with older versions of pip and, as I've been told, historically didn't play well with python packaging until somewhat recently as well.\r\n\r\nSpecifically this issue is the main hangup at the moment:\r\nhttps://github.com/pydata/numexpr/issues/176\r\n\r\nPyTables requires numexpr to be installed. Numexpr itself cannot be installed as a dependency and PyTables by extension either.\r\n\r\nIt might be possible to simply have numpy installed first before running `pip install segway`", "markup": "markdown", "html": "<p>Special case dependencies need to be installed first. Historically, the two biggest offenders in terms of dependencies have been PyTables and Numpy. PyTables, until only recently could you install through pip reliably but still fails to install if you try to install it as a python package dependency (which is admittedly doesn't make much sense and I've found and reported the bug). Numpy simply will not install with older versions of pip and, as I've been told, historically didn't play well with python packaging until somewhat recently as well.</p>\n<p>Specifically this issue is the main hangup at the moment:\n<a href=\"https://github.com/pydata/numexpr/issues/176\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/pydata/numexpr/issues/176</a></p>\n<p>PyTables requires numexpr to be installed. Numexpr itself cannot be installed as a dependency and PyTables by extension either.</p>\n<p>It might be possible to simply have numpy installed first before running <code>pip install segway</code></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-17T16:03:57.293377+00:00", "milestone": null, "updated_on": "2016-02-23T19:39:30.460570+00:00", "type": "issue", "id": 39}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/40/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/40/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/40/default-ruler-should-be-10x-resolution-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/40/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Default ruler should be 10x resolution if a seg table is not specified", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Right now segway errors if a resolution is set but not a ruler. If a resolution is set the default ruler should be 10x the resolution.", "markup": "markdown", "html": "<p>Right now segway errors if a resolution is set but not a ruler. If a resolution is set the default ruler should be 10x the resolution.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-17T18:31:32.285842+00:00", "milestone": null, "updated_on": "2015-10-02T13:51:20.197569+00:00", "type": "issue", "id": 40}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/41/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/41.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/41/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/41/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/41/local-segway-should-limit-number-of-jobs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/41/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Local Segway should limit number of jobs to the actual amount of processors", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently when Segway runs locally it has no \"smart\" mechanism for detecting the number of actual cores on a system before attempting to run jobs.\r\n\r\nCurrently the default max is 32.\r\n\r\nIdeally this number should be based on a detected number of cores on the system and also stop jobs from consuming too much memory as well.", "markup": "markdown", "html": "<p>Currently when Segway runs locally it has no \"smart\" mechanism for detecting the number of actual cores on a system before attempting to run jobs.</p>\n<p>Currently the default max is 32.</p>\n<p>Ideally this number should be based on a detected number of cores on the system and also stop jobs from consuming too much memory as well.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-08-17T19:21:40.810283+00:00", "milestone": null, "updated_on": "2015-08-17T20:27:57.072685+00:00", "type": "issue", "id": 41}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/42/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/42.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/42/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/42/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/42/too-many-log-files-in-single-directory"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/42/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "Too many log files in single directory", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Running `segway identify` for the whole human genome with default limits gives you thousands of jobs. This means that for log files that are generated once per file, we will get thousands in one directory. This causes performance problems for some filesystems and utilities.\r\n\r\nWe should split into multiple subdirectories when there are more than 1000 files. Maybe with subdirectories named `0`, `1`, `2`, etc. I think it would be inconvenient to have this splitting when there are fewer than 1000 files. This would unfortunately introduce an inconsistent behavior depending on the number of jobs.", "markup": "markdown", "html": "<p>Running <code>segway identify</code> for the whole human genome with default limits gives you thousands of jobs. This means that for log files that are generated once per file, we will get thousands in one directory. This causes performance problems for some filesystems and utilities.</p>\n<p>We should split into multiple subdirectories when there are more than 1000 files. Maybe with subdirectories named <code>0</code>, <code>1</code>, <code>2</code>, etc. I think it would be inconvenient to have this splitting when there are fewer than 1000 files. This would unfortunately introduce an inconsistent behavior depending on the number of jobs.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-08-19T00:02:52.270567+00:00", "milestone": null, "updated_on": "2015-08-19T00:02:52.270567+00:00", "type": "issue", "id": 42}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/43/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/43.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/43/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/43/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/43/allow-manual-weighting-of-different-tracks"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/43/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Allow manual weighting of different tracks", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This a feature request to allow users to weigh tracks differently by multiplying the weight by scale factor in the segway structure file. Ideally the weights would be specified in the command line.", "markup": "markdown", "html": "<p>This a feature request to allow users to weigh tracks differently by multiplying the weight by scale factor in the segway structure file. Ideally the weights would be specified in the command line.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-08-21T19:14:30.419227+00:00", "milestone": null, "updated_on": "2015-08-21T19:14:30.419227+00:00", "type": "issue", "id": 43}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/44/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/44/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/44/better-default-for-num-labels"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/44/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better default for --num-labels", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently the default for num-lables is 2. This number is significantly low for running on large datasets where the cardinality of the frameIndex becomes an issue:\r\n\r\nSpecifically this can arise from GMTK:\r\n\r\n`ERROR: RV 'frameIndex(2000000)' has cardinality 2000000, but current frame value 2000000 too large to store in RV with this cardinality (in segment 3 of frame length 29755200).`\r\n\r\nIn the segway model:\r\n```c\r\n% maximum number of frames\r\n#ifndef CARD_FRAMEINDEX\r\n#define CARD_FRAMEINDEX 2000000\r\n#endif\r\n```\r\n\r\nA recommended default is 25 since that seems to be a popularly cited number and the the original number used in the \"Unsupervised pattern discovery\" paper here:\r\nhttp://www.nature.com/nmeth/journal/v9/n5/full/nmeth.1937.html", "markup": "markdown", "html": "<p>Currently the default for num-lables is 2. This number is significantly low for running on large datasets where the cardinality of the frameIndex becomes an issue:</p>\n<p>Specifically this can arise from GMTK:</p>\n<p><code>ERROR: RV 'frameIndex(2000000)' has cardinality 2000000, but current frame value 2000000 too large to store in RV with this cardinality (in segment 3 of frame length 29755200).</code></p>\n<p>In the segway model:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"o\">%</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">frames</span>\n<span class=\"cp\">#ifndef CARD_FRAMEINDEX</span>\n<span class=\"cp\">#define CARD_FRAMEINDEX 2000000</span>\n<span class=\"cp\">#endif</span>\n</pre></div>\n\n\n<p>A recommended default is 25 since that seems to be a popularly cited number and the the original number used in the \"Unsupervised pattern discovery\" paper here:\n<a href=\"http://www.nature.com/nmeth/journal/v9/n5/full/nmeth.1937.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.nature.com/nmeth/journal/v9/n5/full/nmeth.1937.html</a></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "invalid", "version": null, "edited_on": null, "created_on": "2015-08-27T15:11:39.991207+00:00", "milestone": null, "updated_on": "2015-08-28T14:49:44.632577+00:00", "type": "issue", "id": 44}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/45/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/45/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/45/better-checks-for-valid-genomedata"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/45/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better checks for valid genomedata archives", "component": null, "votes": 0, "watches": 2, "content": {"raw": "More than once users have tried to open the HDF5 files contained within a genomedata archive (folder) and not specifying the archive (or folder) itself.\r\n\r\nThis results in the following error:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/storage/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway===1.2.0.dev-r0', 'console_scripts', 'segway')()\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 2971, in main\r\n    return runner()\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 2735, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 2697, in run\r\n    self.save_observations_params()\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 1749, in save_observations_params\r\n    self.subset_metadata(genome) # XXX: does this need to be done before save()?\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 1548, in subset_metadata\r\n    subset_metadata_attr(genome, \"mins\", min)\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 1526, in subset_metadata_attr\r\n    attr = getattr(genome, name)\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py\", line 441, in mins\r\n    return self._accum_extrema(\"mins\", partial(amin, axis=0))\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py\", line 303, in _accum_extrema\r\n    extrema = [getattr(chromosome, name) for chromosome in self]\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py\", line 176, in __iter__\r\n    yield self[groupname]\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py\", line 210, in __getitem__\r\n    res = Chromosome(self.h5file, where=\"/\" + name)\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py\", line 565, in __init__\r\n    if attrs.dirty:\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/tables-3.2.1-py2.7-linux-x86_64.egg/tables/attributeset.py\", line 288, in __getattr__\r\n    \"'%s'\" % (name, self._v__nodepath))\r\nAttributeError: Attribute 'dirty' does not exist in node: '/supercontig_0'\r\n```\r\n\r\nThis error needs to be reported better and a simple check of valid genomedata archives needs to occur before any processing (creating the observations).", "markup": "markdown", "html": "<p>More than once users have tried to open the HDF5 files contained within a genomedata archive (folder) and not specifying the archive (or folder) itself.</p>\n<p>This results in the following error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/storage/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/bin/segway&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">load_entry_point</span><span class=\"p\">(</span><span class=\"s1\">&#39;segway===1.2.0.dev-r0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;console_scripts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;segway&#39;</span><span class=\"p\">)()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2971</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">main</span>\n    <span class=\"k\">return</span> <span class=\"n\">runner</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2735</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2697</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_observations_params</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1749</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">save_observations_params</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">subset_metadata</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">)</span> <span class=\"c1\"># XXX: does this need to be done before save()?</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1548</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">subset_metadata</span>\n    <span class=\"n\">subset_metadata_attr</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mins&quot;</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1526</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">subset_metadata_attr</span>\n    <span class=\"n\">attr</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">441</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">mins</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_accum_extrema</span><span class=\"p\">(</span><span class=\"s2\">&quot;mins&quot;</span><span class=\"p\">,</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">amin</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">303</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_accum_extrema</span>\n    <span class=\"n\">extrema</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">chromosome</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">chromosome</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">176</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__iter__</span>\n    <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">groupname</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__getitem__</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">Chromosome</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">h5file</span><span class=\"p\">,</span> <span class=\"n\">where</span><span class=\"o\">=</span><span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/genomedata-1.3.5-py2.7.egg/genomedata/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">565</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"k\">if</span> <span class=\"n\">attrs</span><span class=\"o\">.</span><span class=\"n\">dirty</span><span class=\"p\">:</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/tables-3.2.1-py2.7-linux-x86_64.egg/tables/attributeset.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">288</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__getattr__</span>\n    <span class=\"s2\">&quot;&#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_v__nodepath</span><span class=\"p\">))</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"n\">Attribute</span> <span class=\"s1\">&#39;dirty&#39;</span> <span class=\"n\">does</span> <span class=\"ow\">not</span> <span class=\"n\">exist</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/supercontig_0&#39;</span>\n</pre></div>\n\n\n<p>This error needs to be reported better and a simple check of valid genomedata archives needs to occur before any processing (creating the observations).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-08-27T15:15:44.787851+00:00", "milestone": null, "updated_on": "2015-08-27T17:32:53.912378+00:00", "type": "issue", "id": 45}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/46/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/46.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/46/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/46/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/46/enforce-coords-results-in-error-rv"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/46/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "`--enforce-coords` results in ERROR: RV 'frameIndex...' has cardinality ..., but current frame value ... too large to store in RV with this cardinality", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Using `--enforce-coords` can sometimes result in sequences bigger than the `--split-sequences` value, which means `CARD_FRAMEINDEX` is not set big enough.\r\n\r\nSee http://mailman13.u.washington.edu/pipermail/segway-users/2015-August/000249.html for an example.\r\n\r\nSolution is to set `CARD_FRAMEINDEX` to the max of either `--split-sequences` or the largest coord range (when `--enforce-coords` is used only).", "markup": "markdown", "html": "<p>Using <code>--enforce-coords</code> can sometimes result in sequences bigger than the <code>--split-sequences</code> value, which means <code>CARD_FRAMEINDEX</code> is not set big enough.</p>\n<p>See <a href=\"http://mailman13.u.washington.edu/pipermail/segway-users/2015-August/000249.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://mailman13.u.washington.edu/pipermail/segway-users/2015-August/000249.html</a> for an example.</p>\n<p>Solution is to set <code>CARD_FRAMEINDEX</code> to the max of either <code>--split-sequences</code> or the largest coord range (when <code>--enforce-coords</code> is used only).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "invalid", "version": null, "edited_on": null, "created_on": "2015-08-28T14:56:06.357307+00:00", "milestone": null, "updated_on": "2015-08-28T16:41:47.280643+00:00", "type": "issue", "id": 46}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/47/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/47.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/47/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/47/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/47/better-handling-when-ruler-is-set-and-no"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/47/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better handling when --ruler is set and no segment table is specified", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Currently when a --ruler option is set to non-default values and no seg-table/segment table is specified it assumes a 10bp ruler (from data/seg_table.tab) and errors.\r\n\r\nIf a --ruler is set to something other than the default there should be better handling in terms of error messages or assuming that the segment table has a ruler of the set value in the options for all labels.\r\n\r\nThe error looks like this:\r\n```\r\n  File \"/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py\", line 883, in seg_table\r\n    assert len_slice.step == ruler_scale\r\nAssertionError\r\n```\r\n\r\n", "markup": "markdown", "html": "<p>Currently when a --ruler option is set to non-default values and no seg-table/segment table is specified it assumes a 10bp ruler (from data/seg_table.tab) and errors.</p>\n<p>If a --ruler is set to something other than the default there should be better handling in terms of error messages or assuming that the segment table has a ruler of the set value in the options for all labels.</p>\n<p>The error looks like this:</p>\n<div class=\"codehilite\"><pre><span></span>  File &quot;/gpfs/home/lua137/arch/Linux-x86_64/opt/python-2.7.10/lib/python2.7/site-packages/segway-1.2.0.dev_r0-py2.7.egg/segway/run.py&quot;, line 883, in seg_table\n    assert len_slice.step == ruler_scale\nAssertionError\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-09-09T13:40:14.626305+00:00", "milestone": null, "updated_on": "2015-10-02T13:47:10.719673+00:00", "type": "issue", "id": 47}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/48/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/48/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/48/posterior-not-supported-with-multiple"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/48/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Posterior not supported with multiple genomedata archives", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Posterior output is currently not supported with mulitple genomedata archives.", "markup": "markdown", "html": "<p>Posterior output is currently not supported with mulitple genomedata archives.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-09-14T16:03:14.287729+00:00", "milestone": null, "updated_on": "2015-09-14T16:03:14.287729+00:00", "type": "issue", "id": 48}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/49/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/49/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/49/a-track-can-be-specified-that-exists-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/49/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "A track can be specified that exists in more than one genomedata", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently it's possible to specify a track on the command line that may exist in more than 1 genomedata archive. Currently it selects the first genomedata archive found.\r\n\r\nIt would be better if an error was reported about the number of occurances found.", "markup": "markdown", "html": "<p>Currently it's possible to specify a track on the command line that may exist in more than 1 genomedata archive. Currently it selects the first genomedata archive found.</p>\n<p>It would be better if an error was reported about the number of occurances found.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-09-30T19:05:34.222171+00:00", "milestone": null, "updated_on": "2015-10-02T13:45:46.677177+00:00", "type": "issue", "id": 49}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/50/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/50.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/50/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/50/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/50/segway-no-longer-output-help"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/50/vote"}}, "reporter": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "title": "segway no longer output help", "component": null, "votes": 0, "watches": 2, "content": {"raw": "```\r\nxzeng[^_^]mhoffman7:/scratch/install/segway/default/segway$ segway\r\nTraceback (most recent call last):\r\n  File \"/users/xzeng/.local/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway==1.3.2.dev0', 'console_scripts', 'segway')()\r\n  File \"/users/xzeng/.local/lib/python2.7/site-packages/segway-1.3.2.dev0-py2.7.egg/segway/run.py\", line 2834, in main\r\n    options, args = parse_options(args)\r\n  File \"/users/xzeng/.local/lib/python2.7/site-packages/segway-1.3.2.dev0-py2.7.egg/segway/run.py\", line 2823, in parse_options\r\n    if args[0] == \"train\":\r\nIndexError: list index out of range\r\n```\r\n\r\nIt should output segway usage message, however. \r\n\r\nI would expect something like:\r\n```\r\nif len(args) < 1:\r\n        parser.error(\"Specify Training or Testing.\")\r\n```", "markup": "markdown", "html": "<div class=\"codehilite\"><pre><span></span>xzeng[^_^]mhoffman7:/scratch/install/segway/default/segway$ segway\nTraceback (most recent call last):\n  File &quot;/users/xzeng/.local/bin/segway&quot;, line 9, in &lt;module&gt;\n    load_entry_point(&#39;segway==1.3.2.dev0&#39;, &#39;console_scripts&#39;, &#39;segway&#39;)()\n  File &quot;/users/xzeng/.local/lib/python2.7/site-packages/segway-1.3.2.dev0-py2.7.egg/segway/run.py&quot;, line 2834, in main\n    options, args = parse_options(args)\n  File &quot;/users/xzeng/.local/lib/python2.7/site-packages/segway-1.3.2.dev0-py2.7.egg/segway/run.py&quot;, line 2823, in parse_options\n    if args[0] == &quot;train&quot;:\nIndexError: list index out of range\n</pre></div>\n\n\n<p>It should output segway usage message, however. </p>\n<p>I would expect something like:</p>\n<div class=\"codehilite\"><pre><span></span>if len(args) &lt; 1:\n        parser.error(&quot;Specify Training or Testing.&quot;)\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-10-30T20:57:20.745579+00:00", "milestone": null, "updated_on": "2015-11-12T19:48:46.924607+00:00", "type": "issue", "id": 50}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/51/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/51.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/51/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/51/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/51/when-setting-a-mem-usage-smaller-than-10mb"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/51/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "When setting a mem-usage smaller than 10MB, segway will fail to run regardless of input", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When trying to run segway with a small memory progression, the `ulimit` running in segway-wrapper.sh is given a negative value and will produce an \"invalid argument\" error.\r\n\r\nThis is because in `calc_mem_limit` inside segway/cluster/common.py, the given memory is subtracted by `MEM_GUARD` without a bounds check. `MEM_GUARD` is preset to 10 MB.", "markup": "markdown", "html": "<p>When trying to run segway with a small memory progression, the <code>ulimit</code> running in segway-wrapper.sh is given a negative value and will produce an \"invalid argument\" error.</p>\n<p>This is because in <code>calc_mem_limit</code> inside segway/cluster/common.py, the given memory is subtracted by <code>MEM_GUARD</code> without a bounds check. <code>MEM_GUARD</code> is preset to 10 MB.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2015-11-18T20:27:31.631370+00:00", "milestone": null, "updated_on": "2016-03-07T17:01:08.749717+00:00", "type": "issue", "id": 51}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/52/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/52.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/52/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/52/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/52/segway-silently-ignores-drmaa-if-installed"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/52/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway silently ignores DRMAA if installed incorrectly", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In segway/cluster/__init__.py line 16:\r\n\r\n```python\r\nif DRIVER_NAME_OVERRIDE == \"local\":\r\n    from .local import ExitTimeoutException, JobState, Session\r\nelse:\r\n    try:\r\n        from drmaa import ExitTimeoutException, JobState, Session\r\n    except (ImportError, RuntimeError):\r\n        DRIVER_NAME_OVERRIDE = \"local\"  # no DRMAA available\r\n        from .local import ExitTimeoutException, JobState, Session\r\n```\r\n\r\nIf drmaa is at all configured or installed incorrectly, segway will run on the cluster locally without any mention of this happening. There needs to be a more informative output in how segway is running or if a RuntimeError it should state the problem with the drmaa installation.\r\n ", "markup": "markdown", "html": "<p>In segway/cluster/<strong>init</strong>.py line 16:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">DRIVER_NAME_OVERRIDE</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;local&quot;</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.local</span> <span class=\"kn\">import</span> <span class=\"n\">ExitTimeoutException</span><span class=\"p\">,</span> <span class=\"n\">JobState</span><span class=\"p\">,</span> <span class=\"n\">Session</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">drmaa</span> <span class=\"kn\">import</span> <span class=\"n\">ExitTimeoutException</span><span class=\"p\">,</span> <span class=\"n\">JobState</span><span class=\"p\">,</span> <span class=\"n\">Session</span>\n    <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">ImportError</span><span class=\"p\">,</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">):</span>\n        <span class=\"n\">DRIVER_NAME_OVERRIDE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;local&quot;</span>  <span class=\"c1\"># no DRMAA available</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">.local</span> <span class=\"kn\">import</span> <span class=\"n\">ExitTimeoutException</span><span class=\"p\">,</span> <span class=\"n\">JobState</span><span class=\"p\">,</span> <span class=\"n\">Session</span>\n</pre></div>\n\n\n<p>If drmaa is at all configured or installed incorrectly, segway will run on the cluster locally without any mention of this happening. There needs to be a more informative output in how segway is running or if a RuntimeError it should state the problem with the drmaa installation.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-01-20T18:51:15.010548+00:00", "milestone": null, "updated_on": "2016-08-02T19:43:45.771775+00:00", "type": "issue", "id": 52}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/53/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/53.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/53/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/53/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/53/segtable-default-minimum-length-doesnt"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/53/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segtable default minimum length doesn't adjust for changes in ruler", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently Segway doesn't attempt to have a different minimum segment table length when the ruler is larger than the minimum. This seems to be a common problem since most don't know that the default is a minimum of 100 bp for all labels.\r\n\r\nThere should be better reporting of this minimum (in help) or perhaps a sensible default minimum segment length (such as 1 ruler length).", "markup": "markdown", "html": "<p>Currently Segway doesn't attempt to have a different minimum segment table length when the ruler is larger than the minimum. This seems to be a common problem since most don't know that the default is a minimum of 100 bp for all labels.</p>\n<p>There should be better reporting of this minimum (in help) or perhaps a sensible default minimum segment length (such as 1 ruler length).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-01-29T15:05:04.195534+00:00", "milestone": null, "updated_on": "2016-03-07T15:41:02.489119+00:00", "type": "issue", "id": 53}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/54/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/54/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/54/tests-assume-undefined-tmpdir-to-run"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/54/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Tests assume undefined $TMPDIR to run correctly", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This error can be reproduced by simply running the following in simpleseg:\r\n```shell\r\n$ TMPDIR=/scratch/tmp ./run.sh\r\n```\r\n\r\nThe issue comes from the `mktemp` command used in both `run.sh` and in `segway-wrapper.sh`.\r\n\r\nThe following line in segway-wrapper.sh causes problems when $TMPDIR is already defined:\r\n```shell\r\nexport TMPDIR=\"$(mktemp -dt segway.XXXXXXXXXX)\"\r\n```\r\n\r\n`mktemp` makes the temporary directory based on the template relative to `$TMPDIR`.\r\n\r\nIn `run.sh` (for simpleseg), `TMPDIR` is set but not exported on the following line:\r\n\r\n```shell\r\nTMPDIR=\"$(mktemp -dp . \"test-$(date +%Y%m%d).XXXXXX\")\"\r\n```\r\n\r\n\r\nHowever if `TMPDIR` is already in the environment or exported before `run.sh` is run, then the `TMPDIR` set in run.sh propagates to `segway-wrapper.sh` resulting an unexpected location for the `segway-wrapper.sh` temporary directory.\r\n\r\n\r\nI would propose that in all `run.sh` that before `TMPDIR` is set, the current value of `TMPDIR` is saved and then restored before segway is called.\r\n\r\n\r\n", "markup": "markdown", "html": "<p>This error can be reproduced by simply running the following in simpleseg:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>$ <span class=\"nv\">TMPDIR</span><span class=\"o\">=</span>/scratch/tmp ./run.sh\n</pre></div>\n\n\n<p>The issue comes from the <code>mktemp</code> command used in both <code>run.sh</code> and in <code>segway-wrapper.sh</code>.</p>\n<p>The following line in segway-wrapper.sh causes problems when $TMPDIR is already defined:</p>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"nb\">export</span> <span class=\"nv\">TMPDIR</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"k\">$(</span>mktemp -dt segway.XXXXXXXXXX<span class=\"k\">)</span><span class=\"s2\">&quot;</span>\n</pre></div>\n\n\n<p><code>mktemp</code> makes the temporary directory based on the template relative to <code>$TMPDIR</code>.</p>\n<p>In <code>run.sh</code> (for simpleseg), <code>TMPDIR</code> is set but not exported on the following line:</p>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"nv\">TMPDIR</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"k\">$(</span>mktemp -dp . <span class=\"s2\">&quot;test-</span><span class=\"k\">$(</span>date +%Y%m%d<span class=\"k\">)</span><span class=\"s2\">.XXXXXX&quot;</span><span class=\"k\">)</span><span class=\"s2\">&quot;</span>\n</pre></div>\n\n\n<p>However if <code>TMPDIR</code> is already in the environment or exported before <code>run.sh</code> is run, then the <code>TMPDIR</code> set in run.sh propagates to <code>segway-wrapper.sh</code> resulting an unexpected location for the <code>segway-wrapper.sh</code> temporary directory.</p>\n<p>I would propose that in all <code>run.sh</code> that before <code>TMPDIR</code> is set, the current value of <code>TMPDIR</code> is saved and then restored before segway is called.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-02-05T15:45:33.447058+00:00", "milestone": null, "updated_on": "2016-03-07T15:40:21.705437+00:00", "type": "issue", "id": 54}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/55/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/55/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/55/bug-in-exit_status-from"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/55/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Bug in exit_status from get_job_info_exit_status", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently `get_job_info_exit_status` returns a number *or* a string. This currently causes a bug downstream specifically in the one corner case where it does return a string:\r\n\r\n```python\r\n    def get_job_info_exit_status(self, job_info):\r\n        if job_info.hasSignal:\r\n            res = job_info.terminatedSignal\r\n            # just in case this edge case ever happens\r\n            if res == 0:\r\n                return \"hasSignal\"\r\n\r\n            return res\r\n        elif job_info.wasAborted:\r\n            return \"wasAborted\"\r\n        elif job_info.hasExited:\r\n            return job_info.exitStatus\r\n\r\n        # this happens when the exit status is unknown\r\n        return \"noExit\"\r\n```\r\n\r\nin `process_job`:\r\n```python\r\n        if (exit_status == EX_TEMPFAIL or\r\n           exit_status % 128 == SIGKILL):\r\n            self.queue(restartable_job)\r\n```\r\n\r\nIf there is ever a `job_info.wasAborted` status, this code will crash as it tries to use the modulo operator on a string. The question becomes what to do in the case that `job_info.wasAborted` case? Specifically in the case where \"Returns true if the job ended before entering the running state.\" Is this sufficient to consider this case for out-of-memory issues and resubmit?\r\n\r\nThe DRMAA reference of interest for documentation is here:\r\nhttps://www.ogf.org/documents/GFD.130.pdf\r\n\r\nSpecifically on pages 14 and 15.\r\n\r\nIt is worth noting about hasSignal:\r\n\"A value of false MAY also indicate that although the job has terminated due to the receipt of a signal, the signal is not available, or that it is not known whether the job terminated due to the receipt of a signal.\". I'd wager that SIGKILL signals are not available to DRMAA (since they cannot be caught by the process that gets the signal in the first place).\r\n\r\n", "markup": "markdown", "html": "<p>Currently <code>get_job_info_exit_status</code> returns a number <em>or</em> a string. This currently causes a bug downstream specifically in the one corner case where it does return a string:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_job_info_exit_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">job_info</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">hasSignal</span><span class=\"p\">:</span>\n            <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">terminatedSignal</span>\n            <span class=\"c1\"># just in case this edge case ever happens</span>\n            <span class=\"k\">if</span> <span class=\"n\">res</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"s2\">&quot;hasSignal&quot;</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">res</span>\n        <span class=\"k\">elif</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">wasAborted</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;wasAborted&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">hasExited</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">exitStatus</span>\n\n        <span class=\"c1\"># this happens when the exit status is unknown</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;noExit&quot;</span>\n</pre></div>\n\n\n<p>in <code>process_job</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">exit_status</span> <span class=\"o\">==</span> <span class=\"n\">EX_TEMPFAIL</span> <span class=\"ow\">or</span>\n           <span class=\"n\">exit_status</span> <span class=\"o\">%</span> <span class=\"mi\">128</span> <span class=\"o\">==</span> <span class=\"n\">SIGKILL</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">(</span><span class=\"n\">restartable_job</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>If there is ever a <code>job_info.wasAborted</code> status, this code will crash as it tries to use the modulo operator on a string. The question becomes what to do in the case that <code>job_info.wasAborted</code> case? Specifically in the case where \"Returns true if the job ended before entering the running state.\" Is this sufficient to consider this case for out-of-memory issues and resubmit?</p>\n<p>The DRMAA reference of interest for documentation is here:\n<a href=\"https://www.ogf.org/documents/GFD.130.pdf\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.ogf.org/documents/GFD.130.pdf</a></p>\n<p>Specifically on pages 14 and 15.</p>\n<p>It is worth noting about hasSignal:\n\"A value of false MAY also indicate that although the job has terminated due to the receipt of a signal, the signal is not available, or that it is not known whether the job terminated due to the receipt of a signal.\". I'd wager that SIGKILL signals are not available to DRMAA (since they cannot be caught by the process that gets the signal in the first place).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "invalid", "version": null, "edited_on": null, "created_on": "2016-02-29T16:59:52.313360+00:00", "milestone": null, "updated_on": "2016-03-02T20:25:30.063976+00:00", "type": "issue", "id": 55}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/56/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/56.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/56/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/56/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/56/split-sequences-specifies-number-of-gmtk"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/56/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "--split-sequences specifies number of GMTK frames and not number of base pairs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently in the --help, --split-sequences is defined as follows:\r\n\r\n```shell\r\n    -S SIZE, --split-sequences=SIZE\r\n                        split up sequences that are larger than SIZE bp\r\n                        (default 2000000)\r\n```\r\nWhere \"bp\" stands for \"base pair\". However currently in the code `--split-sequences` clearly specifies the number of GMTK frames instead which are not equivalent for cases where the resolution is larger than 1:\r\n\r\nIn segway/run.py line 656 where the options are copied over to python attributes:\r\n```python\r\n                        (\"split_sequences\", \"max_frames\"),\r\n```\r\n\r\nand in segway/run.py line 1231:\r\n```python\r\n        directives[\"CARD_FRAMEINDEX\"] = self.max_frames\r\n```", "markup": "markdown", "html": "<p>Currently in the --help, --split-sequences is defined as follows:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>    -S SIZE, --split-sequences<span class=\"o\">=</span>SIZE\n                        split up sequences that are larger than SIZE bp\n                        <span class=\"o\">(</span>default <span class=\"m\">2000000</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Where \"bp\" stands for \"base pair\". However currently in the code <code>--split-sequences</code> clearly specifies the number of GMTK frames instead which are not equivalent for cases where the resolution is larger than 1:</p>\n<p>In segway/run.py line 656 where the options are copied over to python attributes:</p>\n<div class=\"codehilite language-python\"><pre><span></span>                        <span class=\"p\">(</span><span class=\"s2\">&quot;split_sequences&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;max_frames&quot;</span><span class=\"p\">),</span>\n</pre></div>\n\n\n<p>and in segway/run.py line 1231:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"n\">directives</span><span class=\"p\">[</span><span class=\"s2\">&quot;CARD_FRAMEINDEX&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_frames</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-03-07T17:07:46.570324+00:00", "milestone": null, "updated_on": "2016-05-17T13:28:00.176979+00:00", "type": "issue", "id": 56}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/57/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/57.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/57/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/57/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/57/default-queue-submitting-along-side"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/57/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Default queue submitting along side specified queue from native specification (--cluster-opt)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently on an SGE (only?) system jobs are submitted to a default queue alongside the specified queue when using `--cluster-opt`.\r\n\r\nSpecifically when specifying a queue with:\r\n`--cluster-opt=\"-q labqueue\"`\r\n\r\nWhen inspecting the job itself you see it submitted to the following queues:\r\n\"default,labqueue\"", "markup": "markdown", "html": "<p>Currently on an SGE (only?) system jobs are submitted to a default queue alongside the specified queue when using <code>--cluster-opt</code>.</p>\n<p>Specifically when specifying a queue with:\n<code>--cluster-opt=\"-q labqueue\"</code></p>\n<p>When inspecting the job itself you see it submitted to the following queues:\n\"default,labqueue\"</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-03-07T18:36:01.951991+00:00", "milestone": null, "updated_on": "2016-03-10T20:33:41.421666+00:00", "type": "issue", "id": 57}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/58/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/58.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/58/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/58/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/58/how-do-i-make-segments-longer-faq-page"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/58/vote"}}, "reporter": {"display_name": "mlibbrecht", "uuid": "{5386772a-11f2-40a6-922a-1557e4210ce0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D"}, "html": {"href": "https://bitbucket.org/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4f04fb35d1668084963524c0e908eac9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-5.png"}}, "nickname": "mlibbrecht", "type": "user", "account_id": "557058:1c71e8bb-defa-4b90-b75b-f9517c35ceb8"}, "title": "\"How do I make segments longer?\" FAQ page", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The FAQ page on segment length should mention --prior-strength:\r\nhttps://www.pmgenomics.ca/hoffmanlab/proj/segway/doc/1.4.0/faq.html?how-do-i-make-segments-longer\r\n\r\nMax\r\n\r\n", "markup": "markdown", "html": "<p>The FAQ page on segment length should mention --prior-strength:\n<a href=\"https://www.pmgenomics.ca/hoffmanlab/proj/segway/doc/1.4.0/faq.html?how-do-i-make-segments-longer\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.pmgenomics.ca/hoffmanlab/proj/segway/doc/1.4.0/faq.html?how-do-i-make-segments-longer</a></p>\n<p>Max</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-04-15T21:55:52.787779+00:00", "milestone": null, "updated_on": "2016-04-16T17:22:12.315532+00:00", "type": "issue", "id": 58}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/59/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/59.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/59/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/59/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/59/warn-when-a-track-contains-no-zero-values"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/59/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "Warn when a track contains no zero values", "component": null, "votes": 0, "watches": 2, "content": {"raw": "People sometimes load tracks for use in Segway that only have positive values and no zero values. The generator of the track did not distinguish between locations of no signal (which should be zero) and location where no signal can be generated (for example, uninterrogated regions or repeat regions).\r\n\r\n1. Segway should generate a warning for any track in use where the minimum (as determined from genomedata `mins` attribute) is >0. This should be a new class called something like `NeverZeroDataWarning`, a child of a new `DataWarning` class, which is a `warnings.UserWarning`.\r\n2. When discussing data preparation, we should mention this issue, and include this warning and its meaning, and also how to turn it off using the [`PYTHONWARNINGS`](https://docs.python.org/2/using/cmdline.html#envvar-PYTHONWARNINGS) environment variable.\r\n3. If possible, this warning should include a link to the page on readthedocs.io that describes what to do.\r\n4. There should be a very simple test that tests this and disabling it with `PYTHONWARNINGS`.", "markup": "markdown", "html": "<p>People sometimes load tracks for use in Segway that only have positive values and no zero values. The generator of the track did not distinguish between locations of no signal (which should be zero) and location where no signal can be generated (for example, uninterrogated regions or repeat regions).</p>\n<ol>\n<li>Segway should generate a warning for any track in use where the minimum (as determined from genomedata <code>mins</code> attribute) is &gt;0. This should be a new class called something like <code>NeverZeroDataWarning</code>, a child of a new <code>DataWarning</code> class, which is a <code>warnings.UserWarning</code>.</li>\n<li>When discussing data preparation, we should mention this issue, and include this warning and its meaning, and also how to turn it off using the <a data-is-external-link=\"true\" href=\"https://docs.python.org/2/using/cmdline.html#envvar-PYTHONWARNINGS\" rel=\"nofollow\"><code>PYTHONWARNINGS</code></a> environment variable.</li>\n<li>If possible, this warning should include a link to the page on readthedocs.io that describes what to do.</li>\n<li>There should be a very simple test that tests this and disabling it with <code>PYTHONWARNINGS</code>.</li>\n</ol>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-09T20:24:05.076009+00:00", "milestone": null, "updated_on": "2016-05-09T20:24:34.736085+00:00", "type": "issue", "id": 59}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/60/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/60.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/60/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/60/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/60/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway process uses too much memory", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The segway process (and not the jobs it spawns) is taking up a significant amount of memory for longer running jobs. The memory usage increases the longer segway is running and submitting jobs.\r\n\r\nHere is an example of memory usage from top on an SGE Cluster:\r\n```shell\r\n21824 rachelc   20   0 47.3g  45g 9948 S  1.0 36.5  88:02.21 segway\r\n```\r\nWhere 47.3 gigs is the virtual memory given to the process and 45g is the resident set size of the process.\r\n\r\nMemory (python) profiling information was injected into the process to find out the following using guppy and pyringe:\r\n\r\n```shell\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap()')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 747222 objects. Total size = 113102584 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Kind (class / dict of class)\r\n\r\n     0 387984  52 48701888  43  48701888  43 unicode\r\n\r\n     1   8273   1  8670104   8  57371992  51 dict of segway.cluster.RestartableJob\r\n\r\n     2   8273   1  8670104   8  66042096  58 dict of segway.cluster.sge.JobTemplateFactory\r\n\r\n     3  79033  11  7895136   7  73937232  65 str\r\n\r\n     4  13812   2  5983520   5  79920752  71 list\r\n\r\n     5  17297   2  5808536   5  85729288  76 dict (no owner)\r\n\r\n     6  69421   9  5518848   5  91248136  81 tuple\r\n\r\n     7  20018   3  5167344   5  96415480  85 path.path\r\n\r\n     8  16546   2  2382624   2  98798104  87 0x312e480\r\n\r\n     9   8273   1  2316440   2 101114544  89 dict of drmaa.session.JobTemplate\r\n\r\n<349 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap()[0].byvia')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 387939 objects. Total size = 48696176 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Referred Via:\r\n\r\n     0   8280   2  4566200   9   4566200   9 '[6]'\r\n\r\n     1   8280   2  2845808   6   7412008  15 '[54]'\r\n\r\n     2   8280   2  2708536   6  10120544  21 '[50]'\r\n\r\n     3   8280   2  2647320   5  12767864  26 '[46]'\r\n\r\n     4   8279   2  2647256   5  15415120  32 '[42]'\r\n\r\n     5   8280   2  2581136   5  17996256  37 '[48]'\r\n\r\n     6   8278   2  2581040   5  20577296  42 '[18]'\r\n\r\n     7   8280   2  2515000   5  23092296  47 '[26]'\r\n\r\n     8   8280   2  2448824   5  25541120  52 '[52]'\r\n\r\n     9   8289   2  1324488   3  26865608  55 '[0]'\r\n\r\n<3663 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap()[0].byrcs')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 387622 objects. Total size = 48655880 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind (class / dict of class)\r\n\r\n     0 374216  97 47173576  97  47173576  97 list\r\n\r\n     1   8265   2   925680   2  48099256  99 dict of segway.cluster.sge.JobTemplateFactory\r\n\r\n     2    786   0   255264   1  48354520  99 dict (no owner)\r\n\r\n     3   2577   1   164928   0  48519448 100 list, segway.cluster.RestartableJobDict\r\n\r\n     4   1649   0   105536   0  48624984 100 segway.cluster.RestartableJobDict\r\n\r\n     5     21   0    21264   0  48646248 100 function, tuple\r\n\r\n     6     37   0     2152   0  48648400 100 tuple\r\n\r\n     7     11   0     1848   0  48650248 100 dict of type\r\n\r\n     8     20   0     1520   0  48651768 100 drmaa.session.JobInfo\r\n\r\n     9      7   0     1368   0  48653136 100 dict of module\r\n\r\n<9 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap()[0].byrcs[0].byvia')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 374039 objects. Total size = 47151000 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Referred Via:\r\n\r\n     0   8268   2  4560568  10   4560568  10 '[6]'\r\n\r\n     1   8270   2  2842368   6   7402936  16 '[54]'\r\n\r\n     2   8270   2  2705248   6  10108184  21 '[50]'\r\n\r\n     3   8270   2  2644120   6  12752304  27 '[46]'\r\n\r\n     4   8269   2  2644056   6  15396360  33 '[42]'\r\n\r\n     5   8270   2  2578016   5  17974376  38 '[48]'\r\n\r\n     6   8268   2  2577920   5  20552296  44 '[18]'\r\n\r\n     7   8270   2  2511960   5  23064256  49 '[26]'\r\n\r\n     8   8270   2  2445864   5  25510120  54 '[52]'\r\n\r\n     9   8268   2  1322208   3  26832328  57 '[0]'\r\n\r\n<517 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap()[0].byrcs[0].byrcs')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 373686 objects. Total size = 47105912 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind (class / dict of class)\r\n\r\n     0 373686 100 47105912 100  47105912 100 list\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heapu()')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nData from unreachable objects.\r\n\r\nPartition of a set of 905 objects. Total size = 317792 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Class\r\n\r\n     0    108  12   215328  68    215328  68 dict\r\n\r\n     1     40   4    34880  11    250208  79 type\r\n\r\n     2    104  11    14656   5    264864  83 list\r\n\r\n     3    155  17    12920   4    277784  87 str\r\n\r\n     4    125  14    12528   4    290312  91 tuple\r\n\r\n     5    144  16    11520   4    301832  95 __builtin__.wrapper_descriptor\r\n\r\n     6     53   6     3816   1    305648  96 types.MemberDescriptorType\r\n\r\n     7     51   6     3672   1    309320  97 __builtin__.method_descriptor\r\n\r\n     8     35   4     2520   1    311840  98 types.BuiltinFunctionType\r\n\r\n     9     19   2     1368   0    313208  99 types.GetSetDescriptorType\r\n\r\n<42 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap().byclodo')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 746177 objects. Total size = 112935584 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Kind (class / dict of class)\r\n\r\n     0 387171  52 48598408  43  48598408  43 unicode\r\n\r\n     1   8255   1  8651240   8  57249648  51 dict of segway.cluster.RestartableJob\r\n\r\n     2   8255   1  8651240   8  65900888  58 dict of segway.cluster.sge.JobTemplateFactory\r\n\r\n     3  79035  11  7895784   7  73796672  65 str\r\n\r\n     4  13790   2  5972464   5  79769136  71 list\r\n\r\n     5  17279   2  5805800   5  85574936  76 dict (no owner)\r\n\r\n     6  69375   9  5515384   5  91090320  81 tuple\r\n\r\n     7  19982   3  5157728   5  96248048  85 path.path\r\n\r\n     8  16510   2  2377440   2  98625488  87 0x312e480\r\n\r\n     9   8255   1  2311400   2 100936888  89 dict of drmaa.session.JobTemplate\r\n\r\n<355 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap().byid')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nSet of 745706 <mixed> objects. Total size = 112859584 bytes.\r\n\r\nIndex     Size   %   Cumulative  %   Brief\r\n\r\n     0    98600   0.1     98600   0.1 segway.cluster.RestartableJobDict: 0x7ef57e1f0bc0\r\n\r\n     1    98600   0.1    197200   0.2 segway.cluster.RestartableJobDict: 0x7efa7a9a2bc0\r\n\r\n     2    98584   0.1    295784   0.3 dict (no owner): 0x2f3aba0*843\r\n\r\n     3    49448   0.0    345232   0.3 segway.cluster.RestartableJobDict: 0x7ef552d98fc0\r\n\r\n     4    49448   0.0    394680   0.3 segway.cluster.RestartableJobDict: 0x7ef55b9b13c0\r\n\r\n     5    49448   0.0    444128   0.4 segway.cluster.RestartableJobDict: 0x7ef562907ba0\r\n\r\n     6    49448   0.0    493576   0.4 segway.cluster.RestartableJobDict: 0x7ef571e837c0\r\n\r\n     7    49448   0.0    543024   0.5 segway.cluster.RestartableJobDict: 0x7ef5749199b0\r\n\r\n     8    49448   0.0    592472   0.5 segway.cluster.RestartableJobDict: 0x7ef578db32f0\r\n\r\n     9    49448   0.0    641920   0.6 segway.cluster.RestartableJobDict: 0x7ef595e1a400\r\n\r\n<745696 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap().byrcs')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 745653 objects. Total size = 112849664 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind (class / dict of class)\r\n\r\n     0 423460  57 51153360  45  51153360  45 list\r\n\r\n     1  57946   8 11533632  10  62686992  56 dict of segway.cluster.sge.JobTemplateFactory\r\n\r\n     2   8247   1  8642856   8  71329848  63 segway.cluster.RestartableJob\r\n\r\n     3   8247   1  8642856   8  79972704  71 segway.cluster.sge.JobTemplateFactory\r\n\r\n     4  45260   6  4468840   4  84441544  75 types.CodeType\r\n\r\n     5   8247   1  2309160   2  86750704  77 0x312e480, dict (no owner)\r\n\r\n     6   8247   1  2309160   2  89059864  79 0x312eb10\r\n\r\n     7   8247   1  2309160   2  91369024  81 drmaa.session.JobTemplate\r\n\r\n     8  51241   7  1960096   2  93329120  83 tuple\r\n\r\n     9  16544   2  1899344   2  95228464  84 dict (no owner)\r\n\r\n<1372 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap().byrcs[0].byid')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nSet of 422945 <mixed> objects. Total size = 51089632 bytes.\r\n\r\nIndex     Size   %   Cumulative  %   Brief\r\n\r\n     0     3352   0.0      3352   0.0 dict (no owner): 0x2cee9f0*24\r\n\r\n     1     3352   0.0      6704   0.0 dict (no owner): 0x2cef1e0*24\r\n\r\n     2     3352   0.0     10056   0.0 dict (no owner): 0x2cef300*24\r\n\r\n     3     3352   0.0     13408   0.0 dict (no owner): 0x2cef550*24\r\n\r\n     4     3352   0.0     16760   0.0 dict (no owner): 0x2cf4be0*24\r\n\r\n     5     3352   0.0     20112   0.0 dict (no owner): 0x2cf5b90*24\r\n\r\n     6     3352   0.0     23464   0.0 dict (no owner): 0x2cf6b40*24\r\n\r\n     7     3352   0.0     26816   0.1 dict (no owner): 0x2cf7af0*24\r\n\r\n     8     3352   0.0     30168   0.1 dict (no owner): 0x2cf7e90*24\r\n\r\n     9     3352   0.0     33520   0.1 dict (no owner): 0x2cf8230*24\r\n\r\n<422935 more rows. Type e.g. '_.more' to view.>\r\n\r\n \r\n\r\n>>> inject('print >>sys.stderr, guppy_hpy.heap().byrcs[0].theone')\r\n\r\n==> pid:[21824] #threads:[11] current thread:[139643938924288]\r\n\r\nPartition of a set of 747342 objects. Total size = 113121328 bytes.\r\n\r\nIndex  Count   %     Size   % Cumulative  % Kind (class / dict of class)\r\n\r\n     0 388073  52 48713320  43  48713320  43 unicode\r\n\r\n     1   8275   1  8672200   8  57385520  51 dict of segway.cluster.RestartableJob\r\n\r\n     2   8275   1  8672200   8  66057720  58 dict of segway.cluster.sge.JobTemplateFactory\r\n\r\n     3  79031  11  7895000   7  73952720  65 str\r\n\r\n     4  13814   2  5984752   5  79937472  71 list\r\n\r\n     5  17295   2  5807976   5  85745448  76 dict (no owner)\r\n\r\n     6  69428   9  5519344   5  91264792  81 tuple\r\n\r\n     7  20022   3  5168432   5  96433224  85 path.path\r\n\r\n     8  16550   2  2383200   2  98816424  87 0x312e480\r\n\r\n     9   8275   1  2317000   2 101133424  89 dict of drmaa.session.JobTemplate\r\n\r\n<349 more rows. Type e.g. '_.more' to view.>\r\n\r\nTraceback (most recent call last):\r\n\r\n \r\n\r\n  File \"<string>\", line 1, in <module>\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/guppy/heapy/UniSet.py\", line 602, in <lambda>\r\n\r\n    theone = property(lambda self: self.fam.get_theone(self), doc=\"\"\"\\\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/guppy/heapy/UniSet.py\", line 1784, in get_theone\r\n\r\n    raise ValueError, 'theone requires a singleton set'\r\n\r\nValueError: theone requires a singleton set\r\n```\r\n\r\nGuppy documentation is incredibly difficult to come by especially with the syntax used. It is essentially a declarative domain specific language to select information about the python memory of a given program. Notably `.heap()` returns a selection of the entire Python heap reachable by python objects and `.heapu()` return the heap of unreachable python objects (that should be garbage collected). It is the heap itself that shows there is an unreasonable amount of unicode objects taking up a significant amount of memory. `byrcs` selects on the heap or part of the heap and organizes by \"referrers by kind (class)\". `byvia` does the something similar except it shows where the objects are being referred via.\r\n\r\nFrom the preliminary data it looks like there is a massive list (of a list?) of unicode objects. Presumably this list grows the longer segway runs.\r\n", "markup": "markdown", "html": "<p>The segway process (and not the jobs it spawns) is taking up a significant amount of memory for longer running jobs. The memory usage increases the longer segway is running and submitting jobs.</p>\n<p>Here is an example of memory usage from top on an SGE Cluster:</p>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"m\">21824</span> rachelc   <span class=\"m\">20</span>   <span class=\"m\">0</span> <span class=\"m\">47</span>.3g  45g <span class=\"m\">9948</span> S  <span class=\"m\">1</span>.0 <span class=\"m\">36</span>.5  <span class=\"m\">88</span>:02.21 segway\n</pre></div>\n\n\n<p>Where 47.3 gigs is the virtual memory given to the process and 45g is the resident set size of the process.</p>\n<p>Memory (python) profiling information was injected into the process to find out the following using guppy and pyringe:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap()&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">747222</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">113102584</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">387984</span>  <span class=\"m\">52</span> <span class=\"m\">48701888</span>  <span class=\"m\">43</span>  <span class=\"m\">48701888</span>  <span class=\"m\">43</span> unicode\n\n     <span class=\"m\">1</span>   <span class=\"m\">8273</span>   <span class=\"m\">1</span>  <span class=\"m\">8670104</span>   <span class=\"m\">8</span>  <span class=\"m\">57371992</span>  <span class=\"m\">51</span> dict of segway.cluster.RestartableJob\n\n     <span class=\"m\">2</span>   <span class=\"m\">8273</span>   <span class=\"m\">1</span>  <span class=\"m\">8670104</span>   <span class=\"m\">8</span>  <span class=\"m\">66042096</span>  <span class=\"m\">58</span> dict of segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">3</span>  <span class=\"m\">79033</span>  <span class=\"m\">11</span>  <span class=\"m\">7895136</span>   <span class=\"m\">7</span>  <span class=\"m\">73937232</span>  <span class=\"m\">65</span> str\n\n     <span class=\"m\">4</span>  <span class=\"m\">13812</span>   <span class=\"m\">2</span>  <span class=\"m\">5983520</span>   <span class=\"m\">5</span>  <span class=\"m\">79920752</span>  <span class=\"m\">71</span> list\n\n     <span class=\"m\">5</span>  <span class=\"m\">17297</span>   <span class=\"m\">2</span>  <span class=\"m\">5808536</span>   <span class=\"m\">5</span>  <span class=\"m\">85729288</span>  <span class=\"m\">76</span> dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n     <span class=\"m\">6</span>  <span class=\"m\">69421</span>   <span class=\"m\">9</span>  <span class=\"m\">5518848</span>   <span class=\"m\">5</span>  <span class=\"m\">91248136</span>  <span class=\"m\">81</span> tuple\n\n     <span class=\"m\">7</span>  <span class=\"m\">20018</span>   <span class=\"m\">3</span>  <span class=\"m\">5167344</span>   <span class=\"m\">5</span>  <span class=\"m\">96415480</span>  <span class=\"m\">85</span> path.path\n\n     <span class=\"m\">8</span>  <span class=\"m\">16546</span>   <span class=\"m\">2</span>  <span class=\"m\">2382624</span>   <span class=\"m\">2</span>  <span class=\"m\">98798104</span>  <span class=\"m\">87</span> 0x312e480\n\n     <span class=\"m\">9</span>   <span class=\"m\">8273</span>   <span class=\"m\">1</span>  <span class=\"m\">2316440</span>   <span class=\"m\">2</span> <span class=\"m\">101114544</span>  <span class=\"m\">89</span> dict of drmaa.session.JobTemplate\n\n&lt;<span class=\"m\">349</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap()[0].byvia&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">387939</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">48696176</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Referred Via:\n\n     <span class=\"m\">0</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">4566200</span>   <span class=\"m\">9</span>   <span class=\"m\">4566200</span>   <span class=\"m\">9</span> <span class=\"s1\">&#39;[6]&#39;</span>\n\n     <span class=\"m\">1</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2845808</span>   <span class=\"m\">6</span>   <span class=\"m\">7412008</span>  <span class=\"m\">15</span> <span class=\"s1\">&#39;[54]&#39;</span>\n\n     <span class=\"m\">2</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2708536</span>   <span class=\"m\">6</span>  <span class=\"m\">10120544</span>  <span class=\"m\">21</span> <span class=\"s1\">&#39;[50]&#39;</span>\n\n     <span class=\"m\">3</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2647320</span>   <span class=\"m\">5</span>  <span class=\"m\">12767864</span>  <span class=\"m\">26</span> <span class=\"s1\">&#39;[46]&#39;</span>\n\n     <span class=\"m\">4</span>   <span class=\"m\">8279</span>   <span class=\"m\">2</span>  <span class=\"m\">2647256</span>   <span class=\"m\">5</span>  <span class=\"m\">15415120</span>  <span class=\"m\">32</span> <span class=\"s1\">&#39;[42]&#39;</span>\n\n     <span class=\"m\">5</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2581136</span>   <span class=\"m\">5</span>  <span class=\"m\">17996256</span>  <span class=\"m\">37</span> <span class=\"s1\">&#39;[48]&#39;</span>\n\n     <span class=\"m\">6</span>   <span class=\"m\">8278</span>   <span class=\"m\">2</span>  <span class=\"m\">2581040</span>   <span class=\"m\">5</span>  <span class=\"m\">20577296</span>  <span class=\"m\">42</span> <span class=\"s1\">&#39;[18]&#39;</span>\n\n     <span class=\"m\">7</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2515000</span>   <span class=\"m\">5</span>  <span class=\"m\">23092296</span>  <span class=\"m\">47</span> <span class=\"s1\">&#39;[26]&#39;</span>\n\n     <span class=\"m\">8</span>   <span class=\"m\">8280</span>   <span class=\"m\">2</span>  <span class=\"m\">2448824</span>   <span class=\"m\">5</span>  <span class=\"m\">25541120</span>  <span class=\"m\">52</span> <span class=\"s1\">&#39;[52]&#39;</span>\n\n     <span class=\"m\">9</span>   <span class=\"m\">8289</span>   <span class=\"m\">2</span>  <span class=\"m\">1324488</span>   <span class=\"m\">3</span>  <span class=\"m\">26865608</span>  <span class=\"m\">55</span> <span class=\"s1\">&#39;[0]&#39;</span>\n\n&lt;<span class=\"m\">3663</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap()[0].byrcs&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">387622</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">48655880</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">374216</span>  <span class=\"m\">97</span> <span class=\"m\">47173576</span>  <span class=\"m\">97</span>  <span class=\"m\">47173576</span>  <span class=\"m\">97</span> list\n\n     <span class=\"m\">1</span>   <span class=\"m\">8265</span>   <span class=\"m\">2</span>   <span class=\"m\">925680</span>   <span class=\"m\">2</span>  <span class=\"m\">48099256</span>  <span class=\"m\">99</span> dict of segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">2</span>    <span class=\"m\">786</span>   <span class=\"m\">0</span>   <span class=\"m\">255264</span>   <span class=\"m\">1</span>  <span class=\"m\">48354520</span>  <span class=\"m\">99</span> dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n     <span class=\"m\">3</span>   <span class=\"m\">2577</span>   <span class=\"m\">1</span>   <span class=\"m\">164928</span>   <span class=\"m\">0</span>  <span class=\"m\">48519448</span> <span class=\"m\">100</span> list, segway.cluster.RestartableJobDict\n\n     <span class=\"m\">4</span>   <span class=\"m\">1649</span>   <span class=\"m\">0</span>   <span class=\"m\">105536</span>   <span class=\"m\">0</span>  <span class=\"m\">48624984</span> <span class=\"m\">100</span> segway.cluster.RestartableJobDict\n\n     <span class=\"m\">5</span>     <span class=\"m\">21</span>   <span class=\"m\">0</span>    <span class=\"m\">21264</span>   <span class=\"m\">0</span>  <span class=\"m\">48646248</span> <span class=\"m\">100</span> <span class=\"k\">function</span>, tuple\n\n     <span class=\"m\">6</span>     <span class=\"m\">37</span>   <span class=\"m\">0</span>     <span class=\"m\">2152</span>   <span class=\"m\">0</span>  <span class=\"m\">48648400</span> <span class=\"m\">100</span> tuple\n\n     <span class=\"m\">7</span>     <span class=\"m\">11</span>   <span class=\"m\">0</span>     <span class=\"m\">1848</span>   <span class=\"m\">0</span>  <span class=\"m\">48650248</span> <span class=\"m\">100</span> dict of <span class=\"nb\">type</span>\n\n     <span class=\"m\">8</span>     <span class=\"m\">20</span>   <span class=\"m\">0</span>     <span class=\"m\">1520</span>   <span class=\"m\">0</span>  <span class=\"m\">48651768</span> <span class=\"m\">100</span> drmaa.session.JobInfo\n\n     <span class=\"m\">9</span>      <span class=\"m\">7</span>   <span class=\"m\">0</span>     <span class=\"m\">1368</span>   <span class=\"m\">0</span>  <span class=\"m\">48653136</span> <span class=\"m\">100</span> dict of module\n\n&lt;<span class=\"m\">9</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap()[0].byrcs[0].byvia&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">374039</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">47151000</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Referred Via:\n\n     <span class=\"m\">0</span>   <span class=\"m\">8268</span>   <span class=\"m\">2</span>  <span class=\"m\">4560568</span>  <span class=\"m\">10</span>   <span class=\"m\">4560568</span>  <span class=\"m\">10</span> <span class=\"s1\">&#39;[6]&#39;</span>\n\n     <span class=\"m\">1</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2842368</span>   <span class=\"m\">6</span>   <span class=\"m\">7402936</span>  <span class=\"m\">16</span> <span class=\"s1\">&#39;[54]&#39;</span>\n\n     <span class=\"m\">2</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2705248</span>   <span class=\"m\">6</span>  <span class=\"m\">10108184</span>  <span class=\"m\">21</span> <span class=\"s1\">&#39;[50]&#39;</span>\n\n     <span class=\"m\">3</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2644120</span>   <span class=\"m\">6</span>  <span class=\"m\">12752304</span>  <span class=\"m\">27</span> <span class=\"s1\">&#39;[46]&#39;</span>\n\n     <span class=\"m\">4</span>   <span class=\"m\">8269</span>   <span class=\"m\">2</span>  <span class=\"m\">2644056</span>   <span class=\"m\">6</span>  <span class=\"m\">15396360</span>  <span class=\"m\">33</span> <span class=\"s1\">&#39;[42]&#39;</span>\n\n     <span class=\"m\">5</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2578016</span>   <span class=\"m\">5</span>  <span class=\"m\">17974376</span>  <span class=\"m\">38</span> <span class=\"s1\">&#39;[48]&#39;</span>\n\n     <span class=\"m\">6</span>   <span class=\"m\">8268</span>   <span class=\"m\">2</span>  <span class=\"m\">2577920</span>   <span class=\"m\">5</span>  <span class=\"m\">20552296</span>  <span class=\"m\">44</span> <span class=\"s1\">&#39;[18]&#39;</span>\n\n     <span class=\"m\">7</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2511960</span>   <span class=\"m\">5</span>  <span class=\"m\">23064256</span>  <span class=\"m\">49</span> <span class=\"s1\">&#39;[26]&#39;</span>\n\n     <span class=\"m\">8</span>   <span class=\"m\">8270</span>   <span class=\"m\">2</span>  <span class=\"m\">2445864</span>   <span class=\"m\">5</span>  <span class=\"m\">25510120</span>  <span class=\"m\">54</span> <span class=\"s1\">&#39;[52]&#39;</span>\n\n     <span class=\"m\">9</span>   <span class=\"m\">8268</span>   <span class=\"m\">2</span>  <span class=\"m\">1322208</span>   <span class=\"m\">3</span>  <span class=\"m\">26832328</span>  <span class=\"m\">57</span> <span class=\"s1\">&#39;[0]&#39;</span>\n\n&lt;<span class=\"m\">517</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap()[0].byrcs[0].byrcs&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">373686</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">47105912</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">373686</span> <span class=\"m\">100</span> <span class=\"m\">47105912</span> <span class=\"m\">100</span>  <span class=\"m\">47105912</span> <span class=\"m\">100</span> list\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heapu()&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nData from unreachable objects.\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">905</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">317792</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Class\n\n     <span class=\"m\">0</span>    <span class=\"m\">108</span>  <span class=\"m\">12</span>   <span class=\"m\">215328</span>  <span class=\"m\">68</span>    <span class=\"m\">215328</span>  <span class=\"m\">68</span> dict\n\n     <span class=\"m\">1</span>     <span class=\"m\">40</span>   <span class=\"m\">4</span>    <span class=\"m\">34880</span>  <span class=\"m\">11</span>    <span class=\"m\">250208</span>  <span class=\"m\">79</span> <span class=\"nb\">type</span>\n\n     <span class=\"m\">2</span>    <span class=\"m\">104</span>  <span class=\"m\">11</span>    <span class=\"m\">14656</span>   <span class=\"m\">5</span>    <span class=\"m\">264864</span>  <span class=\"m\">83</span> list\n\n     <span class=\"m\">3</span>    <span class=\"m\">155</span>  <span class=\"m\">17</span>    <span class=\"m\">12920</span>   <span class=\"m\">4</span>    <span class=\"m\">277784</span>  <span class=\"m\">87</span> str\n\n     <span class=\"m\">4</span>    <span class=\"m\">125</span>  <span class=\"m\">14</span>    <span class=\"m\">12528</span>   <span class=\"m\">4</span>    <span class=\"m\">290312</span>  <span class=\"m\">91</span> tuple\n\n     <span class=\"m\">5</span>    <span class=\"m\">144</span>  <span class=\"m\">16</span>    <span class=\"m\">11520</span>   <span class=\"m\">4</span>    <span class=\"m\">301832</span>  <span class=\"m\">95</span> __builtin__.wrapper_descriptor\n\n     <span class=\"m\">6</span>     <span class=\"m\">53</span>   <span class=\"m\">6</span>     <span class=\"m\">3816</span>   <span class=\"m\">1</span>    <span class=\"m\">305648</span>  <span class=\"m\">96</span> types.MemberDescriptorType\n\n     <span class=\"m\">7</span>     <span class=\"m\">51</span>   <span class=\"m\">6</span>     <span class=\"m\">3672</span>   <span class=\"m\">1</span>    <span class=\"m\">309320</span>  <span class=\"m\">97</span> __builtin__.method_descriptor\n\n     <span class=\"m\">8</span>     <span class=\"m\">35</span>   <span class=\"m\">4</span>     <span class=\"m\">2520</span>   <span class=\"m\">1</span>    <span class=\"m\">311840</span>  <span class=\"m\">98</span> types.BuiltinFunctionType\n\n     <span class=\"m\">9</span>     <span class=\"m\">19</span>   <span class=\"m\">2</span>     <span class=\"m\">1368</span>   <span class=\"m\">0</span>    <span class=\"m\">313208</span>  <span class=\"m\">99</span> types.GetSetDescriptorType\n\n&lt;<span class=\"m\">42</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap().byclodo&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">746177</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">112935584</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">387171</span>  <span class=\"m\">52</span> <span class=\"m\">48598408</span>  <span class=\"m\">43</span>  <span class=\"m\">48598408</span>  <span class=\"m\">43</span> unicode\n\n     <span class=\"m\">1</span>   <span class=\"m\">8255</span>   <span class=\"m\">1</span>  <span class=\"m\">8651240</span>   <span class=\"m\">8</span>  <span class=\"m\">57249648</span>  <span class=\"m\">51</span> dict of segway.cluster.RestartableJob\n\n     <span class=\"m\">2</span>   <span class=\"m\">8255</span>   <span class=\"m\">1</span>  <span class=\"m\">8651240</span>   <span class=\"m\">8</span>  <span class=\"m\">65900888</span>  <span class=\"m\">58</span> dict of segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">3</span>  <span class=\"m\">79035</span>  <span class=\"m\">11</span>  <span class=\"m\">7895784</span>   <span class=\"m\">7</span>  <span class=\"m\">73796672</span>  <span class=\"m\">65</span> str\n\n     <span class=\"m\">4</span>  <span class=\"m\">13790</span>   <span class=\"m\">2</span>  <span class=\"m\">5972464</span>   <span class=\"m\">5</span>  <span class=\"m\">79769136</span>  <span class=\"m\">71</span> list\n\n     <span class=\"m\">5</span>  <span class=\"m\">17279</span>   <span class=\"m\">2</span>  <span class=\"m\">5805800</span>   <span class=\"m\">5</span>  <span class=\"m\">85574936</span>  <span class=\"m\">76</span> dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n     <span class=\"m\">6</span>  <span class=\"m\">69375</span>   <span class=\"m\">9</span>  <span class=\"m\">5515384</span>   <span class=\"m\">5</span>  <span class=\"m\">91090320</span>  <span class=\"m\">81</span> tuple\n\n     <span class=\"m\">7</span>  <span class=\"m\">19982</span>   <span class=\"m\">3</span>  <span class=\"m\">5157728</span>   <span class=\"m\">5</span>  <span class=\"m\">96248048</span>  <span class=\"m\">85</span> path.path\n\n     <span class=\"m\">8</span>  <span class=\"m\">16510</span>   <span class=\"m\">2</span>  <span class=\"m\">2377440</span>   <span class=\"m\">2</span>  <span class=\"m\">98625488</span>  <span class=\"m\">87</span> 0x312e480\n\n     <span class=\"m\">9</span>   <span class=\"m\">8255</span>   <span class=\"m\">1</span>  <span class=\"m\">2311400</span>   <span class=\"m\">2</span> <span class=\"m\">100936888</span>  <span class=\"m\">89</span> dict of drmaa.session.JobTemplate\n\n&lt;<span class=\"m\">355</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap().byid&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nSet of <span class=\"m\">745706</span> &lt;mixed&gt; objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">112859584</span> bytes.\n\nIndex     Size   %   Cumulative  %   Brief\n\n     <span class=\"m\">0</span>    <span class=\"m\">98600</span>   <span class=\"m\">0</span>.1     <span class=\"m\">98600</span>   <span class=\"m\">0</span>.1 segway.cluster.RestartableJobDict: 0x7ef57e1f0bc0\n\n     <span class=\"m\">1</span>    <span class=\"m\">98600</span>   <span class=\"m\">0</span>.1    <span class=\"m\">197200</span>   <span class=\"m\">0</span>.2 segway.cluster.RestartableJobDict: 0x7efa7a9a2bc0\n\n     <span class=\"m\">2</span>    <span class=\"m\">98584</span>   <span class=\"m\">0</span>.1    <span class=\"m\">295784</span>   <span class=\"m\">0</span>.3 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2f3aba0*843\n\n     <span class=\"m\">3</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">345232</span>   <span class=\"m\">0</span>.3 segway.cluster.RestartableJobDict: 0x7ef552d98fc0\n\n     <span class=\"m\">4</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">394680</span>   <span class=\"m\">0</span>.3 segway.cluster.RestartableJobDict: 0x7ef55b9b13c0\n\n     <span class=\"m\">5</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">444128</span>   <span class=\"m\">0</span>.4 segway.cluster.RestartableJobDict: 0x7ef562907ba0\n\n     <span class=\"m\">6</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">493576</span>   <span class=\"m\">0</span>.4 segway.cluster.RestartableJobDict: 0x7ef571e837c0\n\n     <span class=\"m\">7</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">543024</span>   <span class=\"m\">0</span>.5 segway.cluster.RestartableJobDict: 0x7ef5749199b0\n\n     <span class=\"m\">8</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">592472</span>   <span class=\"m\">0</span>.5 segway.cluster.RestartableJobDict: 0x7ef578db32f0\n\n     <span class=\"m\">9</span>    <span class=\"m\">49448</span>   <span class=\"m\">0</span>.0    <span class=\"m\">641920</span>   <span class=\"m\">0</span>.6 segway.cluster.RestartableJobDict: 0x7ef595e1a400\n\n&lt;<span class=\"m\">745696</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap().byrcs&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">745653</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">112849664</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Referrers by Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">423460</span>  <span class=\"m\">57</span> <span class=\"m\">51153360</span>  <span class=\"m\">45</span>  <span class=\"m\">51153360</span>  <span class=\"m\">45</span> list\n\n     <span class=\"m\">1</span>  <span class=\"m\">57946</span>   <span class=\"m\">8</span> <span class=\"m\">11533632</span>  <span class=\"m\">10</span>  <span class=\"m\">62686992</span>  <span class=\"m\">56</span> dict of segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">2</span>   <span class=\"m\">8247</span>   <span class=\"m\">1</span>  <span class=\"m\">8642856</span>   <span class=\"m\">8</span>  <span class=\"m\">71329848</span>  <span class=\"m\">63</span> segway.cluster.RestartableJob\n\n     <span class=\"m\">3</span>   <span class=\"m\">8247</span>   <span class=\"m\">1</span>  <span class=\"m\">8642856</span>   <span class=\"m\">8</span>  <span class=\"m\">79972704</span>  <span class=\"m\">71</span> segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">4</span>  <span class=\"m\">45260</span>   <span class=\"m\">6</span>  <span class=\"m\">4468840</span>   <span class=\"m\">4</span>  <span class=\"m\">84441544</span>  <span class=\"m\">75</span> types.CodeType\n\n     <span class=\"m\">5</span>   <span class=\"m\">8247</span>   <span class=\"m\">1</span>  <span class=\"m\">2309160</span>   <span class=\"m\">2</span>  <span class=\"m\">86750704</span>  <span class=\"m\">77</span> 0x312e480, dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n     <span class=\"m\">6</span>   <span class=\"m\">8247</span>   <span class=\"m\">1</span>  <span class=\"m\">2309160</span>   <span class=\"m\">2</span>  <span class=\"m\">89059864</span>  <span class=\"m\">79</span> 0x312eb10\n\n     <span class=\"m\">7</span>   <span class=\"m\">8247</span>   <span class=\"m\">1</span>  <span class=\"m\">2309160</span>   <span class=\"m\">2</span>  <span class=\"m\">91369024</span>  <span class=\"m\">81</span> drmaa.session.JobTemplate\n\n     <span class=\"m\">8</span>  <span class=\"m\">51241</span>   <span class=\"m\">7</span>  <span class=\"m\">1960096</span>   <span class=\"m\">2</span>  <span class=\"m\">93329120</span>  <span class=\"m\">83</span> tuple\n\n     <span class=\"m\">9</span>  <span class=\"m\">16544</span>   <span class=\"m\">2</span>  <span class=\"m\">1899344</span>   <span class=\"m\">2</span>  <span class=\"m\">95228464</span>  <span class=\"m\">84</span> dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n&lt;<span class=\"m\">1372</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap().byrcs[0].byid&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nSet of <span class=\"m\">422945</span> &lt;mixed&gt; objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">51089632</span> bytes.\n\nIndex     Size   %   Cumulative  %   Brief\n\n     <span class=\"m\">0</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0      <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cee9f0*24\n\n     <span class=\"m\">1</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0      <span class=\"m\">6704</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cef1e0*24\n\n     <span class=\"m\">2</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">10056</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cef300*24\n\n     <span class=\"m\">3</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">13408</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cef550*24\n\n     <span class=\"m\">4</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">16760</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf4be0*24\n\n     <span class=\"m\">5</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">20112</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf5b90*24\n\n     <span class=\"m\">6</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">23464</span>   <span class=\"m\">0</span>.0 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf6b40*24\n\n     <span class=\"m\">7</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">26816</span>   <span class=\"m\">0</span>.1 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf7af0*24\n\n     <span class=\"m\">8</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">30168</span>   <span class=\"m\">0</span>.1 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf7e90*24\n\n     <span class=\"m\">9</span>     <span class=\"m\">3352</span>   <span class=\"m\">0</span>.0     <span class=\"m\">33520</span>   <span class=\"m\">0</span>.1 dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>: 0x2cf8230*24\n\n&lt;<span class=\"m\">422935</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\n\n\n&gt;&gt;&gt; inject<span class=\"o\">(</span><span class=\"s1\">&#39;print &gt;&gt;sys.stderr, guppy_hpy.heap().byrcs[0].theone&#39;</span><span class=\"o\">)</span>\n\n<span class=\"o\">==</span>&gt; pid:<span class=\"o\">[</span><span class=\"m\">21824</span><span class=\"o\">]</span> <span class=\"c1\">#threads:[11] current thread:[139643938924288]</span>\n\nPartition of a <span class=\"nb\">set</span> of <span class=\"m\">747342</span> objects. Total <span class=\"nv\">size</span> <span class=\"o\">=</span> <span class=\"m\">113121328</span> bytes.\n\nIndex  Count   %     Size   % Cumulative  % Kind <span class=\"o\">(</span>class / dict of class<span class=\"o\">)</span>\n\n     <span class=\"m\">0</span> <span class=\"m\">388073</span>  <span class=\"m\">52</span> <span class=\"m\">48713320</span>  <span class=\"m\">43</span>  <span class=\"m\">48713320</span>  <span class=\"m\">43</span> unicode\n\n     <span class=\"m\">1</span>   <span class=\"m\">8275</span>   <span class=\"m\">1</span>  <span class=\"m\">8672200</span>   <span class=\"m\">8</span>  <span class=\"m\">57385520</span>  <span class=\"m\">51</span> dict of segway.cluster.RestartableJob\n\n     <span class=\"m\">2</span>   <span class=\"m\">8275</span>   <span class=\"m\">1</span>  <span class=\"m\">8672200</span>   <span class=\"m\">8</span>  <span class=\"m\">66057720</span>  <span class=\"m\">58</span> dict of segway.cluster.sge.JobTemplateFactory\n\n     <span class=\"m\">3</span>  <span class=\"m\">79031</span>  <span class=\"m\">11</span>  <span class=\"m\">7895000</span>   <span class=\"m\">7</span>  <span class=\"m\">73952720</span>  <span class=\"m\">65</span> str\n\n     <span class=\"m\">4</span>  <span class=\"m\">13814</span>   <span class=\"m\">2</span>  <span class=\"m\">5984752</span>   <span class=\"m\">5</span>  <span class=\"m\">79937472</span>  <span class=\"m\">71</span> list\n\n     <span class=\"m\">5</span>  <span class=\"m\">17295</span>   <span class=\"m\">2</span>  <span class=\"m\">5807976</span>   <span class=\"m\">5</span>  <span class=\"m\">85745448</span>  <span class=\"m\">76</span> dict <span class=\"o\">(</span>no owner<span class=\"o\">)</span>\n\n     <span class=\"m\">6</span>  <span class=\"m\">69428</span>   <span class=\"m\">9</span>  <span class=\"m\">5519344</span>   <span class=\"m\">5</span>  <span class=\"m\">91264792</span>  <span class=\"m\">81</span> tuple\n\n     <span class=\"m\">7</span>  <span class=\"m\">20022</span>   <span class=\"m\">3</span>  <span class=\"m\">5168432</span>   <span class=\"m\">5</span>  <span class=\"m\">96433224</span>  <span class=\"m\">85</span> path.path\n\n     <span class=\"m\">8</span>  <span class=\"m\">16550</span>   <span class=\"m\">2</span>  <span class=\"m\">2383200</span>   <span class=\"m\">2</span>  <span class=\"m\">98816424</span>  <span class=\"m\">87</span> 0x312e480\n\n     <span class=\"m\">9</span>   <span class=\"m\">8275</span>   <span class=\"m\">1</span>  <span class=\"m\">2317000</span>   <span class=\"m\">2</span> <span class=\"m\">101133424</span>  <span class=\"m\">89</span> dict of drmaa.session.JobTemplate\n\n&lt;<span class=\"m\">349</span> more rows. Type e.g. <span class=\"s1\">&#39;_.more&#39;</span> to view.&gt;\n\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n\n\n\n  File <span class=\"s2\">&quot;&lt;string&gt;&quot;</span>, line <span class=\"m\">1</span>, in &lt;module&gt;\n\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/guppy/heapy/UniSet.py&quot;</span>, line <span class=\"m\">602</span>, in &lt;lambda&gt;\n\n    <span class=\"nv\">theone</span> <span class=\"o\">=</span> property<span class=\"o\">(</span>lambda self: self.fam.get_theone<span class=\"o\">(</span>self<span class=\"o\">)</span>, <span class=\"nv\">doc</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;&quot;\\</span>\n\n<span class=\"s2\">  File &quot;</span>/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/guppy/heapy/UniSet.py<span class=\"s2\">&quot;, line 1784, in get_theone</span>\n\n<span class=\"s2\">    raise ValueError, &#39;theone requires a singleton set&#39;</span>\n\n<span class=\"s2\">ValueError: theone requires a singleton set</span>\n</pre></div>\n\n\n<p>Guppy documentation is incredibly difficult to come by especially with the syntax used. It is essentially a declarative domain specific language to select information about the python memory of a given program. Notably <code>.heap()</code> returns a selection of the entire Python heap reachable by python objects and <code>.heapu()</code> return the heap of unreachable python objects (that should be garbage collected). It is the heap itself that shows there is an unreasonable amount of unicode objects taking up a significant amount of memory. <code>byrcs</code> selects on the heap or part of the heap and organizes by \"referrers by kind (class)\". <code>byvia</code> does the something similar except it shows where the objects are being referred via.</p>\n<p>From the preliminary data it looks like there is a massive list (of a list?) of unicode objects. Presumably this list grows the longer segway runs.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-05-10T15:06:38.321863+00:00", "milestone": null, "updated_on": "2016-07-22T16:58:53.639839+00:00", "type": "issue", "id": 60}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/61/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/61.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/61/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/61/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/61/setting-resolution-1-fails-for-semi"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/61/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Setting resolution>1 fails for semi-supervised mode", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Setting resolution>1 (ie, resolution=10) fails while in semi-supervised mode. \r\n\r\nThis is because of the assertion test that resolution==1. It seems that setting resolution>1 is not implemented yet for semisupervised mode. \r\n\r\nOn line 335 in segway/observations.py:\r\n\r\n```python\r\n    if supervision_data is not None:\r\n        assert resolution == 1  # not implemented yet\r\n        int_blocks.append(supervision_data)\r\n```\r\n\r\nThe rest of the function is downsampling/processing track data, which seems to work fine for unsupervised mode. There doesn't seem to be any other code related to semisupervised mode wrt downsampling data in particular (ie, labels etc).\r\n\r\n@hoffman , would you happen to have any information about this and/or why the supervision labels aren't downsampled as well, for example?\r\n\r\nThanks!", "markup": "markdown", "html": "<p>Setting resolution&gt;1 (ie, resolution=10) fails while in semi-supervised mode. </p>\n<p>This is because of the assertion test that resolution==1. It seems that setting resolution&gt;1 is not implemented yet for semisupervised mode. </p>\n<p>On line 335 in segway/observations.py:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">if</span> <span class=\"n\">supervision_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">resolution</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>  <span class=\"c1\"># not implemented yet</span>\n        <span class=\"n\">int_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">supervision_data</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The rest of the function is downsampling/processing track data, which seems to work fine for unsupervised mode. There doesn't seem to be any other code related to semisupervised mode wrt downsampling data in particular (ie, labels etc).</p>\n<p>@hoffman , would you happen to have any information about this and/or why the supervision labels aren't downsampled as well, for example?</p>\n<p>Thanks!</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-05-10T15:23:57.767386+00:00", "milestone": null, "updated_on": "2016-06-03T19:23:49.180742+00:00", "type": "issue", "id": 61}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/62/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/62.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/62/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/62/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/62/segway-should-put-its-parent-pid-job-id-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/62/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should put it's parent PID/Job ID in the job names it submits", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be useful when running multiple Segway instances to have the submitted jobs have some sort of reference to the parent job that submitted it. This way you can easily track which jobs are coming from which instance of segway.", "markup": "markdown", "html": "<p>It would be useful when running multiple Segway instances to have the submitted jobs have some sort of reference to the parent job that submitted it. This way you can easily track which jobs are coming from which instance of segway.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-17T13:27:01.779249+00:00", "milestone": null, "updated_on": "2016-05-26T14:26:59.565534+00:00", "type": "issue", "id": 62}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/63/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/63.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/63/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/63/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/63/segway-should-get-the-resolution-used-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/63/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should get the resolution used for training for identification", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Resolution should only be specified for training and identify should not depend on it being specified. The parameters need to match and this should be found out somehow from the training directory.", "markup": "markdown", "html": "<p>Resolution should only be specified for training and identify should not depend on it being specified. The parameters need to match and this should be found out somehow from the training directory.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-17T13:30:14.549591+00:00", "milestone": null, "updated_on": "2016-07-18T19:52:21.442042+00:00", "type": "issue", "id": 63}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/64/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/64.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/64/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/64/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/64/default-track-descriptions-in-are-too-long"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/64/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Default track descriptions in are too long", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As per discussed on the mailing list,\r\n\r\nThe default track descriptions, which contain a list of the name of every dataset used in a segmentation, are too long, especially when there are more than a couple of tracks. The full name of the track spills out to the left and write.\r\n\r\ndescription=\"segway ${NUM_LABELS}-label segmentation of ${LIST_OF_TRACKS}\" [this goes above the track]\r\nname=\"segway.$UUID\" [this is to the left of the track and I believe needs to be unique or there will be difficulties loading multiple tracks]\r\n\r\nMaybe we should change the default description to:\r\n- not have the list of tracks\r\n- have \"annotation\" instead of \"segmentation\"\r\n- include $IDENTIFYDIR or ($IDENTIFYDIR and $TRAINDIR) as identifiers (as they are specified on the command-line, with relative paths).\r\n\r\nPsuedo-template choices:\r\n\r\n1) Segway ${NUM_LABELS}-label annotation ($IDENTIFYDIR)\r\n2) Segway model $TRAINDIR annotation $IDENTIFYDIR\r\n3) Segway model $TRAINDIR ($NUM_LABELS labels, $NUM_TRACKS datasets) annotation $IDENTIFYDIR\r\n4) other\r\n\r\nWe could make the description a Python template that is fed a dictionary with all those options. Would prefer a command line argument to an environment variable though.", "markup": "markdown", "html": "<p>As per discussed on the mailing list,</p>\n<p>The default track descriptions, which contain a list of the name of every dataset used in a segmentation, are too long, especially when there are more than a couple of tracks. The full name of the track spills out to the left and write.</p>\n<p>description=\"segway ${NUM_LABELS}-label segmentation of ${LIST_OF_TRACKS}\" [this goes above the track]\nname=\"segway.$UUID\" [this is to the left of the track and I believe needs to be unique or there will be difficulties loading multiple tracks]</p>\n<p>Maybe we should change the default description to:\n- not have the list of tracks\n- have \"annotation\" instead of \"segmentation\"\n- include $IDENTIFYDIR or ($IDENTIFYDIR and $TRAINDIR) as identifiers (as they are specified on the command-line, with relative paths).</p>\n<p>Psuedo-template choices:</p>\n<p>1) Segway ${NUM_LABELS}-label annotation ($IDENTIFYDIR)\n2) Segway model $TRAINDIR annotation $IDENTIFYDIR\n3) Segway model $TRAINDIR ($NUM_LABELS labels, $NUM_TRACKS datasets) annotation $IDENTIFYDIR\n4) other</p>\n<p>We could make the description a Python template that is fed a dictionary with all those options. Would prefer a command line argument to an environment variable though.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-19T18:22:25.575571+00:00", "milestone": null, "updated_on": "2016-05-19T21:54:41.090667+00:00", "type": "issue", "id": 64}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/65/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/65.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/65/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/65/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/65/no-active-drmaa-session-in-segway"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/65/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "No active DRMAA session in segway", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I received the following error while trying to run segway on recover (note: this happened in every thread):\r\n\r\n\r\n```\r\n#!python\r\n\r\nException in thread Thread-5:\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/threading.py\", line 551, in __bootstrap_inner\r\n    self.run()\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 440, in run\r\n    self.result = self.runner.run_train_instance()\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2111, in run_train_instance\r\n    round_index, kwargs)\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2118, in progress_train_instance\r\n    self.run_train_round(self.instance_index, round_index, **kwargs)\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2070, in run_train_round\r\n    restartable_jobs.wait()\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py\", line 284, in wait\r\n    job_info = session.wait(jobid, session.TIMEOUT_NO_WAIT)\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/session.py\", line 471, in wait\r\n    rusage)\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/helpers.py\", line 299, in c\r\n    return f(*(args + (error_buffer, sizeof(error_buffer))))\r\n\r\n  File \"/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/errors.py\", line 151, in error_check\r\n    raise _ERRORS[code - 1](error_string)\r\n\r\nNoActiveSessionException: code 5: No active session\r\n```\r\n\r\nAlso received this error:\r\n```\r\n#!python\r\n\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/threading.py\", line 551, in __bootstrap_inner\r\n    self.run()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 440, in run\r\n    self.result = self.runner.run_train_instance()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2093, in run_train_instance\r\n    self.make_instance_initial_results()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2415, in make_instance_initial_results\r\n    log_likelihood)\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2396, in recover_train_instance\r\n    path(old_curr_params_filename).copy2(new_curr_params_filename)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 128, in copy2\r\n    copyfile(src, dst)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 82, in copyfile\r\n    with open(src, 'rb') as fsrc:\r\nIOError: [Errno 2] No such file or directory: path('/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160505_1409/results/20160513-1706/K562_5_Track.partial.traindir/params/params.0.params.79')\r\n```\r\n\r\nI checked, and ```params.0.params.79``` did not originally exist in partial.traindir/. The initial job was killed using qdel (since it was qsub'd) and was probably in the midst of round 79 or so at the time.", "markup": "markdown", "html": "<p>I received the following error while trying to run segway on recover (note: this happened in every thread):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">Exception</span> <span class=\"ow\">in</span> <span class=\"n\">thread</span> <span class=\"n\">Thread</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/threading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">551</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">__bootstrap_inner</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">440</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run_train_instance</span><span class=\"p\">()</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2111</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run_train_instance</span>\n    <span class=\"n\">round_index</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2118</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">progress_train_instance</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_train_round</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_index</span><span class=\"p\">,</span> <span class=\"n\">round_index</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2070</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run_train_round</span>\n    <span class=\"n\">restartable_jobs</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">284</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">wait</span>\n    <span class=\"n\">job_info</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"n\">jobid</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">TIMEOUT_NO_WAIT</span><span class=\"p\">)</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/session.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">471</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">wait</span>\n    <span class=\"n\">rusage</span><span class=\"p\">)</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/helpers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">299</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">c</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">args</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">error_buffer</span><span class=\"p\">,</span> <span class=\"n\">sizeof</span><span class=\"p\">(</span><span class=\"n\">error_buffer</span><span class=\"p\">))))</span>\n\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/.local/lib/python2.7/site-packages/drmaa/errors.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">151</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">error_check</span>\n    <span class=\"k\">raise</span> <span class=\"n\">_ERRORS</span><span class=\"p\">[</span><span class=\"n\">code</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">](</span><span class=\"n\">error_string</span><span class=\"p\">)</span>\n\n<span class=\"n\">NoActiveSessionException</span><span class=\"p\">:</span> <span class=\"n\">code</span> <span class=\"mi\">5</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">active</span> <span class=\"n\">session</span>\n</pre></div>\n\n\n<p>Also received this error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">Exception</span> <span class=\"ow\">in</span> <span class=\"n\">thread</span> <span class=\"n\">Thread</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/threading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">551</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">__bootstrap_inner</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">440</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run_train_instance</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2093</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run_train_instance</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_instance_initial_results</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2415</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">make_instance_initial_results</span>\n    <span class=\"n\">log_likelihood</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2396</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">recover_train_instance</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"n\">old_curr_params_filename</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">copy2</span><span class=\"p\">(</span><span class=\"n\">new_curr_params_filename</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">copy2</span>\n    <span class=\"n\">copyfile</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">82</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">copyfile</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fsrc</span><span class=\"p\">:</span>\n<span class=\"ne\">IOError</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Errno</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"nb\">file</span> <span class=\"ow\">or</span> <span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">&#39;/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160505_1409/results/20160513-1706/K562_5_Track.partial.traindir/params/params.0.params.79&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>I checked, and <code>params.0.params.79</code> did not originally exist in partial.traindir/. The initial job was killed using qdel (since it was qsub'd) and was probably in the midst of round 79 or so at the time.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-20T14:15:23.481355+00:00", "milestone": null, "updated_on": "2016-05-20T15:28:11.457890+00:00", "type": "issue", "id": 65}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/66/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/66.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/66/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/66/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/66/new-versions-of-bedtobigbed-fail-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/66/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "new versions of bedToBigBed fail to convert layered BED files", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I haven't had a lot of time to track down the issue here, and to fix we currently just use the old version specifically for converting layered BED files created by segway. AFAICT the bigBed files created with the old version are rendered fine in the current browser.\r\n\r\n``` bash\r\n# using ucsc v308\r\njhessel@amc-tesla ~/tmp/segway-identify\r\n$ bedToBigBed segway.layered.bed ~/ref/genomes/hg19/hg19.chrom.sizes segway.layered.bb\r\npass1 - making usageList (25 chroms): 921 millis\r\nError line 20 of segway.layered.bed: BED blocks must be in ascending order without overlap. Blocks 0 and 1 overlap.\r\n```\r\n\r\n``` bash\r\n# using ucsc v130\r\njhessel@amc-tesla ~/tmp/segway-identify\r\n$ bedToBigBed segway.layered.bed ~/ref/genomes/hg19/hg19.chrom.sizes segway.layered.bb\r\npass1 - making usageList (25 chroms): 406 millis\r\npass2 - checking and writing primary data (1070 records, 12 fields): 43990 millis\r\nindex write: 0 millis\r\npass3 - writeReducedOnceReturnReducedTwice: 380 millis\r\nfurther reductions: 0 millis\r\n```", "markup": "markdown", "html": "<p>I haven't had a lot of time to track down the issue here, and to fix we currently just use the old version specifically for converting layered BED files created by segway. AFAICT the bigBed files created with the old version are rendered fine in the current browser.</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"c1\"># using ucsc v308</span>\njhessel@amc-tesla ~/tmp/segway-identify\n$ bedToBigBed segway.layered.bed ~/ref/genomes/hg19/hg19.chrom.sizes segway.layered.bb\npass1 - making usageList <span class=\"o\">(</span><span class=\"m\">25</span> chroms<span class=\"o\">)</span>: <span class=\"m\">921</span> millis\nError line <span class=\"m\">20</span> of segway.layered.bed: BED blocks must be in ascending order without overlap. Blocks <span class=\"m\">0</span> and <span class=\"m\">1</span> overlap.\n</pre></div>\n\n\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"c1\"># using ucsc v130</span>\njhessel@amc-tesla ~/tmp/segway-identify\n$ bedToBigBed segway.layered.bed ~/ref/genomes/hg19/hg19.chrom.sizes segway.layered.bb\npass1 - making usageList <span class=\"o\">(</span><span class=\"m\">25</span> chroms<span class=\"o\">)</span>: <span class=\"m\">406</span> millis\npass2 - checking and writing primary data <span class=\"o\">(</span><span class=\"m\">1070</span> records, <span class=\"m\">12</span> fields<span class=\"o\">)</span>: <span class=\"m\">43990</span> millis\nindex write: <span class=\"m\">0</span> millis\npass3 - writeReducedOnceReturnReducedTwice: <span class=\"m\">380</span> millis\nfurther reductions: <span class=\"m\">0</span> millis\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-05-25T16:47:51.061931+00:00", "milestone": null, "updated_on": "2016-08-08T19:39:51.193517+00:00", "type": "issue", "id": 66}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/67/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/67.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/67/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/67/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/67/segway-recovery-training-mode-fails-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/67/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "segway recovery (training mode) fails to copy over likelihood files", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While running segway on recovery (training mode), I received this error:\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n   File \"/mnt/work1/users/home2/rachelc/.local/bin/segway\", line 9, in <module>\r\n     load_entry_point('segway==1.4.1.dev0', 'console_scripts', 'segway')()\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2919, in main\r\n     return runner()\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2712, in __call__\r\n     self.run(*args, **kwargs)\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2679, in run\r\n     self.run_train()\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2225, in run_train\r\n     self.finish_train(instance_params, dst_filenames)\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2207, in finish_train\r\n     self.proc_train_results(instance_params, dst_filenames)\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2332, in proc_train_results\r\n     self.copy_results(name, src_filename, dst_filename)\r\n   File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 1743, in copy_results\r\n     copy2(src_filename, dst_filename)\r\n   File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 128, in copy2\r\n     copyfile(src, dst)\r\n   File \"/mnt/work1/software/python/2.7/lib/python2.7/shutil.py\", line 82, in copyfile\r\n     with open(src, 'rb') as fsrc:\r\n IOError: [Errno 2] No such file or directory: path('/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160513_1347/results/20160513-1717/K562_5_Track.traindir/likelihood/likelihood.1.ll')\r\n```\r\n\r\n\r\nUpon further investigation, I discovered that in every previous recovery directory, the number of likelihood files declined with recency. For instance, in the earliest recovery directory for this run, there were 10 files (this run was recovered several times). In the second recovery directory, there were again 10, in the next, 8, then 5, then 3, then 0, and 0 again (arriving at the most recent recovery directory). \r\n\r\nMy theory is that the likelihood files are written-to and updated so long as the particular instance (10 instances in this case) is still active. So for the first two runs, instance 0 was still running and so its likelihood file was written to and appeared in the first two runs. Then after that, it did not appear again. Then in the final recovery run, when segway attempts to pick a winner (or do a cumulative analysis or something at the end), it can't find the likelihood files because they were not run during that recovery instance, and errors out. Looking at the files present and missing in each recovery attempt's directory, this seems to be the case.", "markup": "markdown", "html": "<p>While running segway on recovery (training mode), I received this error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/.local/bin/segway&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n     <span class=\"n\">load_entry_point</span><span class=\"p\">(</span><span class=\"s1\">&#39;segway==1.4.1.dev0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;console_scripts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;segway&#39;</span><span class=\"p\">)()</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2919</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">main</span>\n     <span class=\"k\">return</span> <span class=\"n\">runner</span><span class=\"p\">()</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2712</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n     <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2679</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n     <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_train</span><span class=\"p\">()</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2225</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run_train</span>\n     <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">finish_train</span><span class=\"p\">(</span><span class=\"n\">instance_params</span><span class=\"p\">,</span> <span class=\"n\">dst_filenames</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2207</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">finish_train</span>\n     <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proc_train_results</span><span class=\"p\">(</span><span class=\"n\">instance_params</span><span class=\"p\">,</span> <span class=\"n\">dst_filenames</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2332</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">proc_train_results</span>\n     <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy_results</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">src_filename</span><span class=\"p\">,</span> <span class=\"n\">dst_filename</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1743</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">copy_results</span>\n     <span class=\"n\">copy2</span><span class=\"p\">(</span><span class=\"n\">src_filename</span><span class=\"p\">,</span> <span class=\"n\">dst_filename</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">copy2</span>\n     <span class=\"n\">copyfile</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n   <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/shutil.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">82</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">copyfile</span>\n     <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fsrc</span><span class=\"p\">:</span>\n <span class=\"ne\">IOError</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Errno</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"nb\">file</span> <span class=\"ow\">or</span> <span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">&#39;/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160513_1347/results/20160513-1717/K562_5_Track.traindir/likelihood/likelihood.1.ll&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Upon further investigation, I discovered that in every previous recovery directory, the number of likelihood files declined with recency. For instance, in the earliest recovery directory for this run, there were 10 files (this run was recovered several times). In the second recovery directory, there were again 10, in the next, 8, then 5, then 3, then 0, and 0 again (arriving at the most recent recovery directory). </p>\n<p>My theory is that the likelihood files are written-to and updated so long as the particular instance (10 instances in this case) is still active. So for the first two runs, instance 0 was still running and so its likelihood file was written to and appeared in the first two runs. Then after that, it did not appear again. Then in the final recovery run, when segway attempts to pick a winner (or do a cumulative analysis or something at the end), it can't find the likelihood files because they were not run during that recovery instance, and errors out. Looking at the files present and missing in each recovery attempt's directory, this seems to be the case.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-27T17:09:37.745347+00:00", "milestone": null, "updated_on": "2016-05-30T17:00:53.087805+00:00", "type": "issue", "id": 67}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/68/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/68.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/68/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/68/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/68/segway-attempts-to-recover-from-last-round"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/68/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Segway attempts to recover from last round run, rather than the one previous", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After qdeling a segway job, and then recovering it, I found that segway attempted to recover from the last round run, rather than the one previous. This resulted in issues where it was looking for certain params files that did not yet exist. For instance, my job was qdel'd at round 79, and segway attempted to recover directly from round 79 (but should have recovered from round 78). It was looking for params.0.params.79 but that had not been written yet before the qdel, in the train directory it was recovering from.\r\n\r\nI experimentally changed ```final_round_index``` in ```recover_train_instance``` in run.py to be ```len(log_likelihoods)-1``` and tried again, and it recovered fine after that.", "markup": "markdown", "html": "<p>After qdeling a segway job, and then recovering it, I found that segway attempted to recover from the last round run, rather than the one previous. This resulted in issues where it was looking for certain params files that did not yet exist. For instance, my job was qdel'd at round 79, and segway attempted to recover directly from round 79 (but should have recovered from round 78). It was looking for params.0.params.79 but that had not been written yet before the qdel, in the train directory it was recovering from.</p>\n<p>I experimentally changed <code>final_round_index</code> in <code>recover_train_instance</code> in run.py to be <code>len(log_likelihoods)-1</code> and tried again, and it recovered fine after that.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-30T16:15:31.219703+00:00", "milestone": null, "updated_on": "2016-05-31T18:43:51.247529+00:00", "type": "issue", "id": 68}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/69/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/69.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/69/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/69/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/69/segway-does-not-detect-overlapping-regions"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/69/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Segway does not detect overlapping regions in --include-coords/--exclude-coords bedfile", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Ideally, segway should detect that there are overlapping regions in --include-coords or --exclude-coords bedfile and raise a warning or error.", "markup": "markdown", "html": "<p>Ideally, segway should detect that there are overlapping regions in --include-coords or --exclude-coords bedfile and raise a warning or error.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-01T14:03:23.806574+00:00", "milestone": null, "updated_on": "2016-06-02T13:20:29.941210+00:00", "type": "issue", "id": 69}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/70/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/70.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/70/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/70/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/70/upon-bundling-segway-tries-to-reference-an"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/70/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Upon bundling, segway tries to reference an accumulator file for a run that was never queued in minibatch", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Upon bundling, segway tries to reference an accumulator file for a run that was never queued, in minibatch. I have reproduced this twice now. In both instances, segway attempted to look for an accumulator file that did not exist, and then errored out with the following:\r\n\r\n\r\n```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/threading.py\", line 551, in __bootstrap_inner\r\n    self.run()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 442, in run\r\n    self.result = self.runner.run_train_instance()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2113, in run_train_instance\r\n    round_index, kwargs)\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2120, in progress_train_instance\r\n    self.run_train_round(self.instance_index, round_index, **kwargs)\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/run.py\", line 2079, in run_train_round\r\n    restartable_jobs.wait()\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py\", line 289, in wait\r\n    self.process_job(jobid, job_info)\r\n  File \"/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py\", line 244, in process_job\r\n    (jobid, job_name, error_filename))\r\nRuntimeError: \r\nSubmitted Job (5700692) failed. Failed Job: emt0.0.bundle.K562_5_Track.traindir.d112e1a6280111e6b7f15254004fdc09.\r\nFor details, check error messages in /mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/output/e/0/emt0.0.bundle.K562_5_Track.traindir.d112e1a6280111e6b7f15254004fdc09.\r\nSee the Troubleshooting section of the Segway documentation.\r\n```\r\n\r\n\r\n\r\n```\r\nError: Can't open file (/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/accumulators/acc.0.755.bin) for reading.\r\nError: Can't open file (/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/accumulators/acc.0.755.bin) for reading.\r\n```\r\n\r\nacc.0.755.bin does not exist in the accumulators folder. According to the jobs.tab, the job for the 755 window was never run, and according to the train log, it was never queued (which means minibatch did not choose it).\r\n\r\nCurrent theory is that minibatch does not choose this window, but for some reason, it gets chosen when the bundling job is run, and then segway cannot find it, so errors out.", "markup": "markdown", "html": "<p>Upon bundling, segway tries to reference an accumulator file for a run that was never queued, in minibatch. I have reproduced this twice now. In both instances, segway attempted to look for an accumulator file that did not exist, and then errored out with the following:</p>\n<div class=\"codehilite\"><pre><span></span>Exception in thread Thread-1:\nTraceback (most recent call last):\n  File &quot;/mnt/work1/software/python/2.7/lib/python2.7/threading.py&quot;, line 551, in __bootstrap_inner\n    self.run()\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;, line 442, in run\n    self.result = self.runner.run_train_instance()\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;, line 2113, in run_train_instance\n    round_index, kwargs)\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;, line 2120, in progress_train_instance\n    self.run_train_round(self.instance_index, round_index, **kwargs)\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/run.py&quot;, line 2079, in run_train_round\n    restartable_jobs.wait()\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py&quot;, line 289, in wait\n    self.process_job(jobid, job_info)\n  File &quot;/mnt/work1/users/home2/rachelc/segway/segway/cluster/__init__.py&quot;, line 244, in process_job\n    (jobid, job_name, error_filename))\nRuntimeError: \nSubmitted Job (5700692) failed. Failed Job: emt0.0.bundle.K562_5_Track.traindir.d112e1a6280111e6b7f15254004fdc09.\nFor details, check error messages in /mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/output/e/0/emt0.0.bundle.K562_5_Track.traindir.d112e1a6280111e6b7f15254004fdc09.\nSee the Troubleshooting section of the Segway documentation.\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Can</span><span class=\"s1\">&#39;t open file (/mnt/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/accumulators/acc.0.755.bin) for reading.</span>\n<span class=\"s1\">Error: Can&#39;</span><span class=\"n\">t</span> <span class=\"n\">open</span> <span class=\"n\">file</span> <span class=\"o\">(/</span><span class=\"n\">mnt</span><span class=\"sr\">/work1/users/hoffmangroup/rachelc/2016/semisupervised_tests/20160530_1458/results/20160601-1004/K562_5_Track.traindir/accumulators/</span><span class=\"n\">acc</span><span class=\"o\">.</span><span class=\"mf\">0.755</span><span class=\"o\">.</span><span class=\"na\">bin</span><span class=\"o\">)</span> <span class=\"k\">for</span> <span class=\"n\">reading</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>acc.0.755.bin does not exist in the accumulators folder. According to the jobs.tab, the job for the 755 window was never run, and according to the train log, it was never queued (which means minibatch did not choose it).</p>\n<p>Current theory is that minibatch does not choose this window, but for some reason, it gets chosen when the bundling job is run, and then segway cannot find it, so errors out.</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-06-01T15:37:26.708562+00:00", "milestone": null, "updated_on": "2016-07-26T18:59:35.658258+00:00", "type": "issue", "id": 70}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/71/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/71.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/71/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/71/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/71/minibatch-windows-are-not-seeded"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/71/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Minibatch windows are not seeded", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The seed for random is not set, so minibatch windows are completely random every time, regardless of the seed segway is given.", "markup": "markdown", "html": "<p>The seed for random is not set, so minibatch windows are completely random every time, regardless of the seed segway is given.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-06-01T17:24:50.034007+00:00", "milestone": null, "updated_on": "2016-06-02T20:28:26.232150+00:00", "type": "issue", "id": 71}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/72/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/72.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/72/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/72/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/72/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "segway on SGE does not submit job arguments longer than 1024 chars", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This is a DRMAA issue that segway is impacted by. Upon calling\r\n\r\n\r\n```\r\n#!python\r\n\r\n> /mnt/work1/users/home2/rachelc/segway/segway/run.py(1874)queue_gmtk()\r\n(Pdb) l\r\n1869             job_tmpl.jobName = job_name\r\n1870             job_tmpl.remoteCommand = ENV_CMD\r\n1871 ->         job_tmpl.args = map(str, args)\r\n```\r\n\r\n\r\n```__set__``` from ```drmaa/helpers.py``` is called, and does the following:\r\n\r\n\r\n```\r\n#!python\r\n\r\n181          def __set__(self, instance, value):\r\n182              c(drmaa_set_vector_attribute, instance,\r\n183  ->              self.name, string_vector(value))\r\n```\r\n\r\n```string_vector(value)``` has no truncating effect on the passed arguments. It is ```drmaa_set_vector_attribute``` that appears to have a buffer overflow of some sort and caps all arguments at 1024 chars. \r\n\r\nThis seems like a pre-existing issue that was only more easily isolated with minibatch (presumably because the list of windows was random in length, and you were unlikely (rather than likely) to hit a partial window that already existed (for example: cutting the window number '1000' in half, without minibatch, 10 would likely be a valid window, and so ending the argument there would throw no error, but with minibatch, 10 is unlikely to be a valid window due to its random nature).\r\n\r\nThe bug can be easily recreated and shown with pdb with the following simple test:\r\n\r\n\r\n```\r\n#!python\r\n\r\nimport drmaa\r\n\r\ndef main():\r\n    session = drmaa.Session()\r\n    session.initialize()\r\n    job_template = session.createJobTemplate()\r\n    args = [\"\", '5,7,9,14,17,22,31,32,36,37,38,48,50,55,60,63,65,68,70,72,78,79,82,85,86,88,89,90,91,92,95,96,99,100,105,106,111,114,118,119,120,123,126,127,128,131,132,135,136,138,145,148,150,151,154,155,156,164,168,172,174,182,183,184,187,192,193,195,197,198,199,202,203,207,208,212,216,218,220,222,225,226,230,233,239,242,245,251,257,258,259,260,261,265,266,268,279,280,283,284,286,287,288,289,294,298,301,303,304,306,314,318,325,329,330,332,334,337,344,346,352,364,366,369,370,373,379,381,382,384,390,391,392,394,402,403,407,408,414,419,425,431,433,434,439,440,444,445,446,459,460,461,466,468,469,470,473,476,480,486,487,494,495,497,501,515,516,517,522,528,529,533,535,536,538,539,543,546,547,550,551,552,553,562,565,568,569,570,572,575,578,580,582,583,587,588,590,592,598,601,603,606,607,608,613,620,623,626,627,628,629,630,631,634,639,647,650,654,655,658,669,672,673,675,676,681,683,694,697,698,703,706,709,710,712,716,719,725,733,736,741,743,745,748,752,754,756,757,761,765,766,770,771,772,773,774,776,778,779,780,786,788,792,793,796,803,805,808,809,811,812,813,814,817,820,823,829,831,834,840,842,845,850,851,854,856,857,858,864,867,870,871,875,876,878,879,881,885,890,894,895,897,901,902,903,904,905,912,915,921,924,925,927,932,934,936,937,939,941,942,948,951,952,954,955,960,961,965,971,973,977,978,979,980,984,985,995,996,998,1000,1001,1004,1007,1009,1011,1012,1015,1016,1017,1018,1021,1025,1026,1027,1031,1035,1040,1046,1047,1048,1051,1052,1053,1056,1057,1058,1061,1065,1066,1071,1072,1085,1087,1088,1089,1092,1093,1094,1095,1098,1102,1103,1106,1108,1111,1112,1117,1118,1123,1127,1133,1135,1136,1143,1146,1147,1151,1153,1154,1156,1160,1161,1163,1164,1165,1172,1176,1179,1180,1181,1183,1184,1185,1188,1189,1190,1191,1192,1193,1194,1200,1201,1204,1206,1207,1209,1210,1211,1212,1216,1219,1222,1226,1237,1240,1243,1244,1245,1248,1250,1253,1255,1256,1257,1261,1268,1269,1276,1281,1283,1286,1290,1292,1295,1296,1299,1301,1302,1303,1307,1310,1321,1322,1329,1332,1335,1337,1342,1343,1344,1348,1350,1353,1354,1357,1358,1359,1360,1372,1373,1376,1377,1384,1385,1390,1391,1393,1394,1398,1399,1401,1408,1409,1413,1414,1417,1419,1425,1431,1435,1436,1439,1440,1443,1444,1446,1447,1451,1452,1459,1460,1461,1465,1466,1469,1470,1471,1475,1476,1477,1479,1481,1485,1486,1487,1489,1491,1492,1495,1499,1500,1503,1505,1508,1513,1516,1528,1531,1532,1538,1547,1549,1550,1552,1554,1556,1561,1564,1566,1569,1573,1584,1585,1586,1590,1591,1593,1595,1596,1597,1599,1601,1606,1610,1611,1613,1614,1617,1621,1623,1626,1628,1630,1639,1640,1644,1647,1648,1651,1652,1655,1659,1660,1664,1668,1674,1679,1681,1684,1691']\r\n    job_template.args = map(str, args)\r\n    print job_template.args\r\n    session.exit()\r\n\r\nif __name__=='__main__':\r\n    main()\r\n```\r\n\r\nshows clearly that ```job_template.args``` is truncated by ```set_vector_attribute```. It can also be speculated that the unicode memory issue in [issue 60](#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory) could be caused by this buffer overflow as well.", "markup": "markdown", "html": "<p>This is a DRMAA issue that segway is impacted by. Upon calling</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;</span> <span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">work1</span><span class=\"o\">/</span><span class=\"n\">users</span><span class=\"o\">/</span><span class=\"n\">home2</span><span class=\"o\">/</span><span class=\"n\">rachelc</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">(</span><span class=\"mi\">1874</span><span class=\"p\">)</span><span class=\"n\">queue_gmtk</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"n\">Pdb</span><span class=\"p\">)</span> <span class=\"n\">l</span>\n<span class=\"mi\">1869</span>             <span class=\"n\">job_tmpl</span><span class=\"o\">.</span><span class=\"n\">jobName</span> <span class=\"o\">=</span> <span class=\"n\">job_name</span>\n<span class=\"mi\">1870</span>             <span class=\"n\">job_tmpl</span><span class=\"o\">.</span><span class=\"n\">remoteCommand</span> <span class=\"o\">=</span> <span class=\"n\">ENV_CMD</span>\n<span class=\"mi\">1871</span> <span class=\"o\">-&gt;</span>         <span class=\"n\">job_tmpl</span><span class=\"o\">.</span><span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p><code>__set__</code> from <code>drmaa/helpers.py</code> is called, and does the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">181</span>          <span class=\"k\">def</span> <span class=\"fm\">__set__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n<span class=\"mi\">182</span>              <span class=\"n\">c</span><span class=\"p\">(</span><span class=\"n\">drmaa_set_vector_attribute</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span>\n<span class=\"mi\">183</span>  <span class=\"o\">-&gt;</span>              <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">string_vector</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p><code>string_vector(value)</code> has no truncating effect on the passed arguments. It is <code>drmaa_set_vector_attribute</code> that appears to have a buffer overflow of some sort and caps all arguments at 1024 chars. </p>\n<p>This seems like a pre-existing issue that was only more easily isolated with minibatch (presumably because the list of windows was random in length, and you were unlikely (rather than likely) to hit a partial window that already existed (for example: cutting the window number '1000' in half, without minibatch, 10 would likely be a valid window, and so ending the argument there would throw no error, but with minibatch, 10 is unlikely to be a valid window due to its random nature).</p>\n<p>The bug can be easily recreated and shown with pdb with the following simple test:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">drmaa</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">drmaa</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n    <span class=\"n\">job_template</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">createJobTemplate</span><span class=\"p\">()</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;5,7,9,14,17,22,31,32,36,37,38,48,50,55,60,63,65,68,70,72,78,79,82,85,86,88,89,90,91,92,95,96,99,100,105,106,111,114,118,119,120,123,126,127,128,131,132,135,136,138,145,148,150,151,154,155,156,164,168,172,174,182,183,184,187,192,193,195,197,198,199,202,203,207,208,212,216,218,220,222,225,226,230,233,239,242,245,251,257,258,259,260,261,265,266,268,279,280,283,284,286,287,288,289,294,298,301,303,304,306,314,318,325,329,330,332,334,337,344,346,352,364,366,369,370,373,379,381,382,384,390,391,392,394,402,403,407,408,414,419,425,431,433,434,439,440,444,445,446,459,460,461,466,468,469,470,473,476,480,486,487,494,495,497,501,515,516,517,522,528,529,533,535,536,538,539,543,546,547,550,551,552,553,562,565,568,569,570,572,575,578,580,582,583,587,588,590,592,598,601,603,606,607,608,613,620,623,626,627,628,629,630,631,634,639,647,650,654,655,658,669,672,673,675,676,681,683,694,697,698,703,706,709,710,712,716,719,725,733,736,741,743,745,748,752,754,756,757,761,765,766,770,771,772,773,774,776,778,779,780,786,788,792,793,796,803,805,808,809,811,812,813,814,817,820,823,829,831,834,840,842,845,850,851,854,856,857,858,864,867,870,871,875,876,878,879,881,885,890,894,895,897,901,902,903,904,905,912,915,921,924,925,927,932,934,936,937,939,941,942,948,951,952,954,955,960,961,965,971,973,977,978,979,980,984,985,995,996,998,1000,1001,1004,1007,1009,1011,1012,1015,1016,1017,1018,1021,1025,1026,1027,1031,1035,1040,1046,1047,1048,1051,1052,1053,1056,1057,1058,1061,1065,1066,1071,1072,1085,1087,1088,1089,1092,1093,1094,1095,1098,1102,1103,1106,1108,1111,1112,1117,1118,1123,1127,1133,1135,1136,1143,1146,1147,1151,1153,1154,1156,1160,1161,1163,1164,1165,1172,1176,1179,1180,1181,1183,1184,1185,1188,1189,1190,1191,1192,1193,1194,1200,1201,1204,1206,1207,1209,1210,1211,1212,1216,1219,1222,1226,1237,1240,1243,1244,1245,1248,1250,1253,1255,1256,1257,1261,1268,1269,1276,1281,1283,1286,1290,1292,1295,1296,1299,1301,1302,1303,1307,1310,1321,1322,1329,1332,1335,1337,1342,1343,1344,1348,1350,1353,1354,1357,1358,1359,1360,1372,1373,1376,1377,1384,1385,1390,1391,1393,1394,1398,1399,1401,1408,1409,1413,1414,1417,1419,1425,1431,1435,1436,1439,1440,1443,1444,1446,1447,1451,1452,1459,1460,1461,1465,1466,1469,1470,1471,1475,1476,1477,1479,1481,1485,1486,1487,1489,1491,1492,1495,1499,1500,1503,1505,1508,1513,1516,1528,1531,1532,1538,1547,1549,1550,1552,1554,1556,1561,1564,1566,1569,1573,1584,1585,1586,1590,1591,1593,1595,1596,1597,1599,1601,1606,1610,1611,1613,1614,1617,1621,1623,1626,1628,1630,1639,1640,1644,1647,1648,1651,1652,1655,1659,1660,1664,1668,1674,1679,1681,1684,1691&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">args</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span><span class=\"o\">==</span><span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>shows clearly that <code>job_template.args</code> is truncated by <code>set_vector_attribute</code>. It can also be speculated that the unicode memory issue in <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory\" rel=\"nofollow\">issue 60</a> could be caused by this buffer overflow as well.</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-06-06T21:36:04.582907+00:00", "milestone": null, "updated_on": "2016-07-26T18:45:50.813928+00:00", "type": "issue", "id": 72}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/73/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/73.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/73/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/73/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/73/segway-does-not-delete-job-templates"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/73/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "segway does not delete job templates", "component": null, "votes": 0, "watches": 1, "content": {"raw": "segway creates job templates (in run.py) using the createJobTemplate method, but does not delete them after use. As noted in DRMAA's documentation for [createJobTemplate](http://drmaa-python.readthedocs.io/en/latest/drmaa.html), failure to delete job templates after use may result in a memory leak. This may be related to [issue 60](#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory).", "markup": "markdown", "html": "<p>segway creates job templates (in run.py) using the createJobTemplate method, but does not delete them after use. As noted in DRMAA's documentation for <a data-is-external-link=\"true\" href=\"http://drmaa-python.readthedocs.io/en/latest/drmaa.html\" rel=\"nofollow\">createJobTemplate</a>, failure to delete job templates after use may result in a memory leak. This may be related to <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory\" rel=\"nofollow\">issue 60</a>.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-06-08T17:55:09.706159+00:00", "milestone": null, "updated_on": "2016-07-22T15:39:02.148167+00:00", "type": "issue", "id": 73}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/74/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/74.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/74/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/74/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/74/segway-readthedocs-cuts-off-wide-table"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/74/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway readthedocs cuts off wide table columns in documentation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This is readily apparent under \"Techincal matters\" under the subheading \"Workdir files\".", "markup": "markdown", "html": "<p>This is readily apparent under \"Techincal matters\" under the subheading \"Workdir files\".</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-08T19:43:21.059269+00:00", "milestone": null, "updated_on": "2016-06-08T19:43:21.059269+00:00", "type": "issue", "id": 74}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/75/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/75.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/75/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/75/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/75/gmtk-does-not-allow-last-number-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/75/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "GMTK does not allow last number of loadAccRange to be greater than 9999", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Upon bundling, I received an error in which GMTK says maximum possible range specification is 9999 (but my segway run has 11942 possible windows):\r\n\r\n\r\n```\r\n#!python\r\n\r\nERROR: Last value of range specification '1860,2698,57,7640,7973,9823,5738,2101,5563,10260,3660,2594,2238,1845,3800,10453,10567,1691,7554,11724,11025,1038,8150,6245,233,5176,5027,8653,1983,11936,7035,11568,6455,8955,1542,10065,7115,11872,5931,3063,3770,4453,6431,480,8282,5534,2841,8277,8753,6218,2103,9126,5082,7436,7032,9241,2494,6662,6442,7405,4017,1465,7895,7656,4409,6473,9231,8655,8516,2577,7062,546,5498,9403,1791,10983,4737,5929,1809,8279,9371,8559,3671,7587,11424,5935,9205,2843,6202,11776,6107,5996,756,7658,1320,86,70,7394,2215,11507,803,5805,6024,11375,7738,857,9024,11019,11148,3850,5029,1032,9320,9402,4156,6621,5972,8455,5462,787,3673,7713,7262,2332,3137,5692,8427,8534,10925,5599,7308,7855,5034,6533,4163,8340,7246,1434,7958,330,3126,8444,4985,1993,7609,1785,5283,7818,9294,6903,7941,10109,1422,9528,4283,557,11320,1532,3081,831,605,4477,10073,7337,898,10105,4147,2596,4642,293,5885,8014,9349,3497,8412,7808,8779,3870,6918,5371,4470,3961,3779,153,805,11603,8035,10621,3540,7227,469,8018,3478,3866,11331,5458,9353,8526,2889,10230,2373,10137,10921,3675,5592,9069,10975,9810,7724,9631,6060,9264,9929,4198,9722,10536,9411,500,5736,11302,3896,3341,285,8658,9552,10262,3858,723,5388,6485,11353,3479,367,935,10842,2414,1365,11555,7532,3187,6021,6854,7853,116,10235,317,6525,3508,8421,3913,9464,2454,888,2042,1050,8090,2191,2138,876,3689,11648,4913,3358,2972,2750,2422,5764,9728,11363,7432,11719,11638,1180,731,11178,3148,9498,6213,4481,6220,5794,8291,5406,9811,779,8581,4866,4182,635,4730,1330,10475,2342,8161,9821,976,8631,10244,4761,20,7711,2906,8520,9548,4399,4547,8317,9532,2140,9218,1187,8332,1967,9991,4055,4450,11891,1245,1229,3635,7862,7235,5389,8088,11129,8625,5258,11335,7160,5468,10438,310,802,11751,11283,6075,11571,1881,10232,7070,5701,6249,9607,10683,11741,3876,11850,7986,9595,5302,7749,9008,881,5411,3147,6120,4764,4554,11397,9968,5769,1760,3202,5417,9491,9951,3374,10027,10181,1930,4996,4318,7261,5602,6044,5579,11494,1051,10710,3593,394,11930,7141,11738,11862,7641,3253,10690,2262,11633,1488,2440,1156,7581,6260,10953,10447,9432,8867,7435,10973,11828,5683,11827,3920,272,4237,10533,9828,5347,10994,6586,3789,4875,5632,9901,2087,7696,6966,3310,5116,9694,10809,4276,2139,7771,9252,5032,9770,9750,5559,3906,1158,3254,10014,7714,4164,4734,3998,722,9139,9541,3872,2902,9628,4098,5711,10801,1414,1747,11522,4582,7458,1137,9232,1275,10543,1565,7400,9173,2663,50,3451,7439,10704,11265,7117,9522,11116,5681,9104,6769,9590,2149,9237,3349,58,4842,9376,3751,6037,8069,5094,2431,112,3788,1665,11043,9333,11840,4685,5431,2232,1578,157,1285,4036,10026,8781,3176,3188,5861,4869,10943,7283,3812,9690,10427,11119,9798,8646,3371,9185,3015,1325,6263,7384,3878,9159,4071,11722,3435,2496,10041,10247,6812,8699,9246,687,5547,6910,4490,10431,10635,8336,5858,947,261,4769,10135,1999,7020,4955,3044,6324,6513,9752,9245,7659,11336,10369,6340,5493,7189,9351,1902,1956,5334,10177,867,5279,1562,11419,8884,4927,5477,9399,7887,9572,9893,8521,11190,6241,6418,2731,6469,3994,4510,3526,2765,4188,6420,11333', which is 11333, is greater than the maximum possible value '9999' \r\n```\r\n\r\nIt seems that GMTK expects a sorted list (ie in the format 1:9999), and has an internal length limit of 9999 windows. So if the last number is greater than 9999, it thinks the list has length greater than 9999 (when in our case, it is actually a random list of numbers, the length of which is much less than 9999).\r\n\r\nBy comparing the params files output, I have confirmed that GMTK does not silently ignore numbers greater than 9999 (for example, the output for loadAccRange=10453,10567,11724,11025,...,50 vs loadAccRange=50 is different).\r\n\r\nGMTK does not raise this error for loadAccRanges that do not end in a number greater than 9999, but contain numbers greater than 9999 (ie, 1,2,3,11000,5).", "markup": "markdown", "html": "<p>Upon bundling, I received an error in which GMTK says maximum possible range specification is 9999 (but my segway run has 11942 possible windows):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">ERROR</span><span class=\"p\">:</span> <span class=\"n\">Last</span> <span class=\"n\">value</span> <span class=\"n\">of</span> <span class=\"nb\">range</span> <span class=\"n\">specification</span> <span class=\"s1\">&#39;1860,2698,57,7640,7973,9823,5738,2101,5563,10260,3660,2594,2238,1845,3800,10453,10567,1691,7554,11724,11025,1038,8150,6245,233,5176,5027,8653,1983,11936,7035,11568,6455,8955,1542,10065,7115,11872,5931,3063,3770,4453,6431,480,8282,5534,2841,8277,8753,6218,2103,9126,5082,7436,7032,9241,2494,6662,6442,7405,4017,1465,7895,7656,4409,6473,9231,8655,8516,2577,7062,546,5498,9403,1791,10983,4737,5929,1809,8279,9371,8559,3671,7587,11424,5935,9205,2843,6202,11776,6107,5996,756,7658,1320,86,70,7394,2215,11507,803,5805,6024,11375,7738,857,9024,11019,11148,3850,5029,1032,9320,9402,4156,6621,5972,8455,5462,787,3673,7713,7262,2332,3137,5692,8427,8534,10925,5599,7308,7855,5034,6533,4163,8340,7246,1434,7958,330,3126,8444,4985,1993,7609,1785,5283,7818,9294,6903,7941,10109,1422,9528,4283,557,11320,1532,3081,831,605,4477,10073,7337,898,10105,4147,2596,4642,293,5885,8014,9349,3497,8412,7808,8779,3870,6918,5371,4470,3961,3779,153,805,11603,8035,10621,3540,7227,469,8018,3478,3866,11331,5458,9353,8526,2889,10230,2373,10137,10921,3675,5592,9069,10975,9810,7724,9631,6060,9264,9929,4198,9722,10536,9411,500,5736,11302,3896,3341,285,8658,9552,10262,3858,723,5388,6485,11353,3479,367,935,10842,2414,1365,11555,7532,3187,6021,6854,7853,116,10235,317,6525,3508,8421,3913,9464,2454,888,2042,1050,8090,2191,2138,876,3689,11648,4913,3358,2972,2750,2422,5764,9728,11363,7432,11719,11638,1180,731,11178,3148,9498,6213,4481,6220,5794,8291,5406,9811,779,8581,4866,4182,635,4730,1330,10475,2342,8161,9821,976,8631,10244,4761,20,7711,2906,8520,9548,4399,4547,8317,9532,2140,9218,1187,8332,1967,9991,4055,4450,11891,1245,1229,3635,7862,7235,5389,8088,11129,8625,5258,11335,7160,5468,10438,310,802,11751,11283,6075,11571,1881,10232,7070,5701,6249,9607,10683,11741,3876,11850,7986,9595,5302,7749,9008,881,5411,3147,6120,4764,4554,11397,9968,5769,1760,3202,5417,9491,9951,3374,10027,10181,1930,4996,4318,7261,5602,6044,5579,11494,1051,10710,3593,394,11930,7141,11738,11862,7641,3253,10690,2262,11633,1488,2440,1156,7581,6260,10953,10447,9432,8867,7435,10973,11828,5683,11827,3920,272,4237,10533,9828,5347,10994,6586,3789,4875,5632,9901,2087,7696,6966,3310,5116,9694,10809,4276,2139,7771,9252,5032,9770,9750,5559,3906,1158,3254,10014,7714,4164,4734,3998,722,9139,9541,3872,2902,9628,4098,5711,10801,1414,1747,11522,4582,7458,1137,9232,1275,10543,1565,7400,9173,2663,50,3451,7439,10704,11265,7117,9522,11116,5681,9104,6769,9590,2149,9237,3349,58,4842,9376,3751,6037,8069,5094,2431,112,3788,1665,11043,9333,11840,4685,5431,2232,1578,157,1285,4036,10026,8781,3176,3188,5861,4869,10943,7283,3812,9690,10427,11119,9798,8646,3371,9185,3015,1325,6263,7384,3878,9159,4071,11722,3435,2496,10041,10247,6812,8699,9246,687,5547,6910,4490,10431,10635,8336,5858,947,261,4769,10135,1999,7020,4955,3044,6324,6513,9752,9245,7659,11336,10369,6340,5493,7189,9351,1902,1956,5334,10177,867,5279,1562,11419,8884,4927,5477,9399,7887,9572,9893,8521,11190,6241,6418,2731,6469,3994,4510,3526,2765,4188,6420,11333&#39;</span><span class=\"p\">,</span> <span class=\"n\">which</span> <span class=\"ow\">is</span> <span class=\"mi\">11333</span><span class=\"p\">,</span> <span class=\"ow\">is</span> <span class=\"n\">greater</span> <span class=\"n\">than</span> <span class=\"n\">the</span> <span class=\"n\">maximum</span> <span class=\"n\">possible</span> <span class=\"n\">value</span> <span class=\"s1\">&#39;9999&#39;</span> \n</pre></div>\n\n\n<p>It seems that GMTK expects a sorted list (ie in the format 1:9999), and has an internal length limit of 9999 windows. So if the last number is greater than 9999, it thinks the list has length greater than 9999 (when in our case, it is actually a random list of numbers, the length of which is much less than 9999).</p>\n<p>By comparing the params files output, I have confirmed that GMTK does not silently ignore numbers greater than 9999 (for example, the output for loadAccRange=10453,10567,11724,11025,...,50 vs loadAccRange=50 is different).</p>\n<p>GMTK does not raise this error for loadAccRanges that do not end in a number greater than 9999, but contain numbers greater than 9999 (ie, 1,2,3,11000,5).</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-13T14:54:24.201329+00:00", "milestone": null, "updated_on": "2016-06-13T15:18:08.416120+00:00", "type": "issue", "id": 75}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/76/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/76.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/76/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/76/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/76/change-identify-to-annotate"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/76/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Change `identify` to `annotate`", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Preserving the same functions/functionality, such that calling 'segway annotate' performs the same functions as 'segway identify'.", "markup": "markdown", "html": "<p>Preserving the same functions/functionality, such that calling 'segway annotate' performs the same functions as 'segway identify'.</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-13T18:00:26.524955+00:00", "milestone": null, "updated_on": "2016-08-09T18:26:52.960728+00:00", "type": "issue", "id": 76}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/77/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/77.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/77/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/77/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/77/gmtk-jobs-report-bad-interpreter-text-file"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/77/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "GMTK jobs report \"bad interpreter: Text file busy\"", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Sometime after commit 1ccc56e, I have been consistently getting the error \"bad interpreter: Text file busy\"\r\n\r\nSpecifically it will read:\r\n\"/usr/bin/env: ... segway-wrapper.sh: ... gmtk-job-uuid.sh: bad interpreter: Text file busy\" outputted as error from the submitted job.\r\n\r\nNotably all the jobs were running on the same machine. It seems a little difficult to reproduce.\r\n\r\nIt has been noted on the mailing list that supposedly someone has managed to reproduce it locally on a non NFS drive. I cannot reproduce it on a non-nfs drive.", "markup": "markdown", "html": "<p>Sometime after commit <a href=\"#!/hoffmanlab/segway/commits/1ccc56e\" rel=\"nofollow\" class=\"ap-connect-link\">1ccc56e</a>, I have been consistently getting the error \"bad interpreter: Text file busy\"</p>\n<p>Specifically it will read:\n\"/usr/bin/env: ... segway-wrapper.sh: ... gmtk-job-uuid.sh: bad interpreter: Text file busy\" outputted as error from the submitted job.</p>\n<p>Notably all the jobs were running on the same machine. It seems a little difficult to reproduce.</p>\n<p>It has been noted on the mailing list that supposedly someone has managed to reproduce it locally on a non NFS drive. I cannot reproduce it on a non-nfs drive.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-07-28T20:31:11.002609+00:00", "milestone": null, "updated_on": "2017-02-06T18:24:36.674730+00:00", "type": "issue", "id": 77}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/78/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/78.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/78/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/78/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/78/minibatch-sorts-windows-by-size-but-then"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/78/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "minibatch sorts windows by size, but then randomly selects from them", "component": null, "votes": 0, "watches": 1, "content": {"raw": "minibatch sorts windows by size, but then randomly selects from them (making this redundant).\r\n\r\n```\r\n#!python\r\n\r\n1834     def window_lens_sorted(self, reverse=True):\r\n1835         \"\"\"\r\n1836         yields (window_index, window_mem_usage)\r\n1837 \r\n1838         if reverse: sort windows by decreasing size, so the most\r\n1839         difficult windows are dropped in the queue first\r\n1840         \"\"\"\r\n1841         window_lens = self.window_lens\r\n1842 \r\n1843         # XXX: use key=itemgetter(2) and enumerate instead of this silliness\r\n1844         zipper = sorted(izip(window_lens, count()), reverse=reverse)\r\n1845 \r\n1846         # XXX: use itertools instead of a generator\r\n1847         for window_len, window_index in zipper:\r\n1848             yield window_index, window_len\r\n\r\n```\r\n\r\nand\r\n\r\n\r\n```\r\n#!python\r\n\r\n2080             train_windows_all = list(self.window_lens_sorted())\r\n...\r\n2122             train_window_indices_shuffled = choice(range(num_train_windows),\r\n2123                                                    num_train_windows,\r\n2124                                                    replace=False)\r\n```\r\n\r\nAnother question is, what was the original reasoning behind sorting the windows in the first place (in incr/decr size)?", "markup": "markdown", "html": "<p>minibatch sorts windows by size, but then randomly selects from them (making this redundant).</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">1834</span>     <span class=\"k\">def</span> <span class=\"nf\">window_lens_sorted</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span>\n<span class=\"mi\">1835</span>         <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">1836         yields (window_index, window_mem_usage)</span>\n<span class=\"s2\">1837 </span>\n<span class=\"s2\">1838         if reverse: sort windows by decreasing size, so the most</span>\n<span class=\"s2\">1839         difficult windows are dropped in the queue first</span>\n<span class=\"s2\">1840         &quot;&quot;&quot;</span>\n<span class=\"mi\">1841</span>         <span class=\"n\">window_lens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_lens</span>\n<span class=\"mi\">1842</span> \n<span class=\"mi\">1843</span>         <span class=\"c1\"># XXX: use key=itemgetter(2) and enumerate instead of this silliness</span>\n<span class=\"mi\">1844</span>         <span class=\"n\">zipper</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">izip</span><span class=\"p\">(</span><span class=\"n\">window_lens</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">()),</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"n\">reverse</span><span class=\"p\">)</span>\n<span class=\"mi\">1845</span> \n<span class=\"mi\">1846</span>         <span class=\"c1\"># XXX: use itertools instead of a generator</span>\n<span class=\"mi\">1847</span>         <span class=\"k\">for</span> <span class=\"n\">window_len</span><span class=\"p\">,</span> <span class=\"n\">window_index</span> <span class=\"ow\">in</span> <span class=\"n\">zipper</span><span class=\"p\">:</span>\n<span class=\"mi\">1848</span>             <span class=\"k\">yield</span> <span class=\"n\">window_index</span><span class=\"p\">,</span> <span class=\"n\">window_len</span>\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">2080</span>             <span class=\"n\">train_windows_all</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_lens_sorted</span><span class=\"p\">())</span>\n<span class=\"o\">...</span>\n<span class=\"mi\">2122</span>             <span class=\"n\">train_window_indices_shuffled</span> <span class=\"o\">=</span> <span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_train_windows</span><span class=\"p\">),</span>\n<span class=\"mi\">2123</span>                                                    <span class=\"n\">num_train_windows</span><span class=\"p\">,</span>\n<span class=\"mi\">2124</span>                                                    <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Another question is, what was the original reasoning behind sorting the windows in the first place (in incr/decr size)?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-02T15:30:52.357681+00:00", "milestone": null, "updated_on": "2016-08-02T15:31:36.316430+00:00", "type": "issue", "id": 78}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/79/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/79.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/79/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/79/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/79/improper-specification-of-training"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/79/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Improper specification of training directory (while identifying) results in nonsensical error message", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The following error occurs when a typo is made on the specified train directory.\r\n\r\n```python\r\n  warn(\"Input master not specified. Generating.\")\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/eric.roberts/.local/bin/segway\", line 9, in <mod\r\nule>\r\n    load_entry_point('segway==1.4.1.dev0', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2946, i\r\nn main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2739, i\r\nn __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2730, i\r\nn run\r\n    self.run_identify_posterior()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2587, i\r\nn run_identify_posterior\r\n    self.setup_identify_posterior()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2576, i\r\nn setup_identify_posterior\r\n    self.save_input_master()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 1569, i\r\nn save_input_master\r\n    self.clobber, instance_index)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py\", line 150,\r\nin __call__\r\n    *args, **kwargs)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py\", line 471,\r\nin save_template\r\n    save_substituted_resource(filename, resource, mapping)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py\", line 452,\r\nin save_substituted_resource\r\n    with open(filename, \"w+\") as outfile:\r\nIOError: [Errno 2] No such file or directory: path('outputs/identify/params/input.master')\r\n```\r\n\r\nThere should be a clear and obvious error message if you have accidentally specified an incorrect train directory.", "markup": "markdown", "html": "<p>The following error occurs when a typo is made on the specified train directory.</p>\n<div class=\"codehilite language-python\"><pre><span></span>  <span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Input master not specified. Generating.&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/.local/bin/segway&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">mod</span>\n<span class=\"n\">ule</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">load_entry_point</span><span class=\"p\">(</span><span class=\"s1\">&#39;segway==1.4.1.dev0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;console_scripts&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;segway&#39;</span><span class=\"p\">)()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2946</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"n\">main</span>\n    <span class=\"k\">return</span> <span class=\"n\">runner</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2739</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"fm\">__call__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2730</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_identify_posterior</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2587</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"n\">run_identify_posterior</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_identify_posterior</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2576</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"n\">setup_identify_posterior</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_input_master</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1569</span><span class=\"p\">,</span> <span class=\"n\">i</span>\n<span class=\"n\">n</span> <span class=\"n\">save_input_master</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clobber</span><span class=\"p\">,</span> <span class=\"n\">instance_index</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">150</span><span class=\"p\">,</span>\n<span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">471</span><span class=\"p\">,</span>\n<span class=\"ow\">in</span> <span class=\"n\">save_template</span>\n    <span class=\"n\">save_substituted_resource</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/_util.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">452</span><span class=\"p\">,</span>\n<span class=\"ow\">in</span> <span class=\"n\">save_substituted_resource</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w+&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">outfile</span><span class=\"p\">:</span>\n<span class=\"ne\">IOError</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Errno</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"nb\">file</span> <span class=\"ow\">or</span> <span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">&#39;outputs/identify/params/input.master&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>There should be a clear and obvious error message if you have accidentally specified an incorrect train directory.</p>", "type": "rendered"}, "assignee": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-02T18:41:58.691088+00:00", "milestone": null, "updated_on": "2016-08-02T19:01:20.800492+00:00", "type": "issue", "id": 79}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/80/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/80.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/80/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/80/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/80/segway-should-create-observation-files-as"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/80/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should create observation files as a job submission instead of from the process submitting jobs.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently Segway creates windows/observation files from the Segway process and not in a separate submitted job. There should a job submission for creating the observations then the GMTK jobs should proceed.", "markup": "markdown", "html": "<p>Currently Segway creates windows/observation files from the Segway process and not in a separate submitted job. There should a job submission for creating the observations then the GMTK jobs should proceed.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-16T18:42:02.461377+00:00", "milestone": null, "updated_on": "2016-08-16T18:42:02.461377+00:00", "type": "issue", "id": 80}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/81/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/81.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/81/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/81/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/81/different-initial-means-inputmaster-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/81/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Different initial means (input.master) with minibatch and num-instances", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It's possible to run simpleseg training with the following command:\r\n```shell\r\nSEGWAY_RAND_SEED=1498730685 segway \"$cluster_arg\" \\\r\n    --num-instances=4 \\\r\n    --minibatch-frac=0.1 \\\r\n    --split-sequences=1000 \\\r\n    --max-train-rounds=5 \\\r\n    --include-coords=\"../include-coords.bed\" \\\r\n    --tracks-from=\"../tracks.txt\" --num-labels=4 \\\r\n    train \"../simpleseg.genomedata\" traindir\r\n```\r\nand run it twice and get different initial means in input.master.\r\n\r\n```shell\r\n$ diff test-20160823.z8hcsD/traindir/params/input.master test-20160823.9C9nVr/traindir/params/input.master\r\n156,163c156,163\r\n< 0 mean_seg0_subseg0_testtrack1 1 0.571728495846\r\n< 1 mean_seg0_subseg0_testtrack2 1 0.482009675214\r\n< 2 mean_seg1_subseg0_testtrack1 1 0.393569676591\r\n< 3 mean_seg1_subseg0_testtrack2 1 0.524263233453\r\n< 4 mean_seg2_subseg0_testtrack1 1 0.539103684627\r\n< 5 mean_seg2_subseg0_testtrack2 1 0.452877599219\r\n< 6 mean_seg3_subseg0_testtrack1 1 0.508957638027\r\n< 7 mean_seg3_subseg0_testtrack2 1 0.57080277882\r\n---\r\n> 0 mean_seg0_subseg0_testtrack1 1 0.549077230446\r\n> 1 mean_seg0_subseg0_testtrack2 1 0.494353579829\r\n> 2 mean_seg1_subseg0_testtrack1 1 0.572589020884\r\n> 3 mean_seg1_subseg0_testtrack2 1 0.555109062568\r\n> 4 mean_seg2_subseg0_testtrack1 1 0.444562359251\r\n> 5 mean_seg2_subseg0_testtrack2 1 0.460819726119\r\n> 6 mean_seg3_subseg0_testtrack1 1 0.475074245946\r\n> 7 mean_seg3_subseg0_testtrack2 1 0.470233877591\r\n\r\n$ env | grep SEGWAY\r\nSEGWAY_NUM_LOCAL_JOBS=2\r\n```\r\n\r\nThis is a common use case and needs to be fixed", "markup": "markdown", "html": "<p>It's possible to run simpleseg training with the following command:</p>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"nv\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"m\">1498730685</span> segway <span class=\"s2\">&quot;</span><span class=\"nv\">$cluster_arg</span><span class=\"s2\">&quot;</span> <span class=\"se\">\\</span>\n    --num-instances<span class=\"o\">=</span><span class=\"m\">4</span> <span class=\"se\">\\</span>\n    --minibatch-frac<span class=\"o\">=</span><span class=\"m\">0</span>.1 <span class=\"se\">\\</span>\n    --split-sequences<span class=\"o\">=</span><span class=\"m\">1000</span> <span class=\"se\">\\</span>\n    --max-train-rounds<span class=\"o\">=</span><span class=\"m\">5</span> <span class=\"se\">\\</span>\n    --include-coords<span class=\"o\">=</span><span class=\"s2\">&quot;../include-coords.bed&quot;</span> <span class=\"se\">\\</span>\n    --tracks-from<span class=\"o\">=</span><span class=\"s2\">&quot;../tracks.txt&quot;</span> --num-labels<span class=\"o\">=</span><span class=\"m\">4</span> <span class=\"se\">\\</span>\n    train <span class=\"s2\">&quot;../simpleseg.genomedata&quot;</span> traindir\n</pre></div>\n\n\n<p>and run it twice and get different initial means in input.master.</p>\n<div class=\"codehilite language-shell\"><pre><span></span>$ diff test-20160823.z8hcsD/traindir/params/input.master test-20160823.9C9nVr/traindir/params/input.master\n<span class=\"m\">156</span>,163c156,163\n&lt; <span class=\"m\">0</span> mean_seg0_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.571728495846\n&lt; <span class=\"m\">1</span> mean_seg0_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.482009675214\n&lt; <span class=\"m\">2</span> mean_seg1_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.393569676591\n&lt; <span class=\"m\">3</span> mean_seg1_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.524263233453\n&lt; <span class=\"m\">4</span> mean_seg2_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.539103684627\n&lt; <span class=\"m\">5</span> mean_seg2_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.452877599219\n&lt; <span class=\"m\">6</span> mean_seg3_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.508957638027\n&lt; <span class=\"m\">7</span> mean_seg3_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.57080277882\n---\n&gt; <span class=\"m\">0</span> mean_seg0_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.549077230446\n&gt; <span class=\"m\">1</span> mean_seg0_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.494353579829\n&gt; <span class=\"m\">2</span> mean_seg1_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.572589020884\n&gt; <span class=\"m\">3</span> mean_seg1_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.555109062568\n&gt; <span class=\"m\">4</span> mean_seg2_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.444562359251\n&gt; <span class=\"m\">5</span> mean_seg2_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.460819726119\n&gt; <span class=\"m\">6</span> mean_seg3_subseg0_testtrack1 <span class=\"m\">1</span> <span class=\"m\">0</span>.475074245946\n&gt; <span class=\"m\">7</span> mean_seg3_subseg0_testtrack2 <span class=\"m\">1</span> <span class=\"m\">0</span>.470233877591\n\n$ env <span class=\"p\">|</span> grep SEGWAY\n<span class=\"nv\">SEGWAY_NUM_LOCAL_JOBS</span><span class=\"o\">=</span><span class=\"m\">2</span>\n</pre></div>\n\n\n<p>This is a common use case and needs to be fixed</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-08-23T18:53:49.288414+00:00", "milestone": null, "updated_on": "2016-09-14T19:30:26.660058+00:00", "type": "issue", "id": 81}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/82/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/82.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/82/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/82/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/82/filenames-in-traintab-should-all-be"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/82/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Filenames in train.tab should all be relative to the train directory", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently in train.tab, filenames are written out relative the working directory from where segway is run from.\r\n\r\nIf the train directory is renamed or moved somewhere, or the working directory has changed, identify will fail to run:\r\n\r\ne.g. where DOHH2_traindir was changed to DOHH2_10L_10R_traindir\r\n```shell\r\neric.roberts@mordor: ~/labdir/segway-protocol/outputs/DOHH2_10L_10R_traindir\r\n$ cat train.tab\r\nname    value\r\ndistribution    asinh_norm\r\ndont_train_filename     outputs/DOHH2_traindir/auxiliary/dont_train.list\r\ninput_master_filename   outputs/DOHH2_traindir/params/input.master\r\nlen_seg_strength        0\r\nnum_segs        10\r\nnum_subsegs     1\r\noutput_label    seg\r\nparams_filename outputs/DOHH2_traindir/params/params.params\r\nresolution      10\r\nruler_scale     100\r\nseg_table_filename\r\nsegtransition_weight_scale      1.0\r\nstructure_filename      outputs/DOHH2_traindir/segway.str\r\n```", "markup": "markdown", "html": "<p>Currently in train.tab, filenames are written out relative the working directory from where segway is run from.</p>\n<p>If the train directory is renamed or moved somewhere, or the working directory has changed, identify will fail to run:</p>\n<p>e.g. where DOHH2_traindir was changed to DOHH2_10L_10R_traindir</p>\n<div class=\"codehilite language-shell\"><pre><span></span>eric.roberts@mordor: ~/labdir/segway-protocol/outputs/DOHH2_10L_10R_traindir\n$ cat train.tab\nname    value\ndistribution    asinh_norm\ndont_train_filename     outputs/DOHH2_traindir/auxiliary/dont_train.list\ninput_master_filename   outputs/DOHH2_traindir/params/input.master\nlen_seg_strength        <span class=\"m\">0</span>\nnum_segs        <span class=\"m\">10</span>\nnum_subsegs     <span class=\"m\">1</span>\noutput_label    seg\nparams_filename outputs/DOHH2_traindir/params/params.params\nresolution      <span class=\"m\">10</span>\nruler_scale     <span class=\"m\">100</span>\nseg_table_filename\nsegtransition_weight_scale      <span class=\"m\">1</span>.0\nstructure_filename      outputs/DOHH2_traindir/segway.str\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-07T14:59:05.222323+00:00", "milestone": null, "updated_on": "2016-09-07T14:59:05.222323+00:00", "type": "issue", "id": 82}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/83/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/83.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/83/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/83/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/83/segway-layered-bed-file-output-is-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/83/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway layered bed file output is not sorted and breaks --bigBed option", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For DOHH2 hg38 an identify run with `--bigBed` produces the following error:\r\n```shell\r\n/mnt/work1/users/hoffmangroup/segway-protocol/tmp/segwayT3I9eP.bed is not case-sensitive sorted at line 11.  Please use \"sort -k1,1 -k2,2n\" with LC_COLLATE=C,  or bedSort and try again.\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/eric.roberts/.local/bin/segway\", line 9, in <module>\r\n    load_entry_point('segway', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2971, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2764, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2755, in run\r\n    self.run_identify_posterior()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2663, in run_identify_posterior\r\n    self.save_identify_posterior()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2606, in save_identify_posterior\r\n    IdentifySaver(self)(world)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/output.py\", line 148, in __call__\r\n    bigbed_outfilename=self.make_filename(self.bigbed_filename, world))\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py\", line 358, in layer\r\n    segmentation.save(outfilename, bigbed_outfilename)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py\", line 270, in save\r\n    BEDTOBIGBED_PROG(bigbed_infilename, sizes_file.name, bigbed_outfilename)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py\", line 270, in save\r\n    BEDTOBIGBED_PROG(bigbed_infilename, sizes_file.name, bigbed_outfilename)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 81, in __call__\r\n    return self.run(*args, **kwargs)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 212, in run\r\n    self._getoutput(args, kwargs)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 194, in _getoutput\r\n    stdin, stdout, stderr, cwd)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 157, in _popen\r\n    _returncode_error_factory(cmdline, returncode, output, error)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 57, in _returncode_error_factory\r\n    raise error_cls, (cmdline, returncode, output, error)\r\noptbuild.ReturncodeError: bedToBigBed returned 255\r\n```\r\n\r\nbedToBigBed is correctly reporting this issue as evidenced by the segway.layered.bed.gz output:\r\n\r\n```shell\r\n$ zcat segway.layered.bed.gz | head -n 12 | nl\r\n     1  track autoScale=off description=\"segway 10-label segmentation of H3K4me1, H3K4me3, H3K27ac, H3K27me3, CTCF\" viewLimits=0:1 visibility=full name=segway.151388ae750c11e686895254004fdc17 itemRgb=on\r\n     2  chr20_GL383577v2_alt    0       128386  0       1000    .       0       128386  27,158,119      2       1,1     0,128385\r\n     3  chr20_GL383577v2_alt    0       128386  1       1000    .       0       128386  217,95,2        1       128386  0\r\n     4  chr20_GL383577v2_alt    0       128386  2       1000    .       0       128386  117,112,179     2       1,1     0,128385\r\n     5  chr20_GL383577v2_alt    0       128386  3       1000    .       0       128386  231,41,138      2       1,1     0,128385\r\n     6  chr20_GL383577v2_alt    0       128386  4       1000    .       0       128386  102,166,30      2       1,1     0,128385\r\n     7  chr20_GL383577v2_alt    0       128386  5       1000    .       0       128386  230,171,2       2       1,1     0,128385\r\n     8  chr20_GL383577v2_alt    0       128386  6       1000    .       0       128386  166,118,29      2       1,1     0,128385\r\n     9  chr20_GL383577v2_alt    0       128386  7       1000    .       0       128386  102,102,102     2       1,1     0,128385\r\n    10  chr20_GL383577v2_alt    0       128386  8       1000    .       0       128386  27,158,119      2       1,1     0,128385\r\n    11  chr20_GL383577v2_alt    0       128386  9       1000    .       0       128386  217,95,2        2       1,1     0,128385\r\n    12  chr17_KI270861v1_alt    0       196688  0       1000    .       0       196688  27,158,119      2       1,1     0,196687\r\n```", "markup": "markdown", "html": "<p>For DOHH2 hg38 an identify run with <code>--bigBed</code> produces the following error:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>/mnt/work1/users/hoffmangroup/segway-protocol/tmp/segwayT3I9eP.bed is not <span class=\"k\">case</span>-sensitive sorted at line <span class=\"m\">11</span>.  Please use <span class=\"s2\">&quot;sort -k1,1 -k2,2n&quot;</span> with <span class=\"nv\">LC_COLLATE</span><span class=\"o\">=</span>C,  or bedSort and try again.\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/.local/bin/segway&quot;</span>, line <span class=\"m\">9</span>, in &lt;module&gt;\n    load_entry_point<span class=\"o\">(</span><span class=\"s1\">&#39;segway&#39;</span>, <span class=\"s1\">&#39;console_scripts&#39;</span>, <span class=\"s1\">&#39;segway&#39;</span><span class=\"o\">)()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2971</span>, in main\n    <span class=\"k\">return</span> runner<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2764</span>, in __call__\n    self.run<span class=\"o\">(</span>*args, **kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2755</span>, in run\n    self.run_identify_posterior<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2663</span>, in run_identify_posterior\n    self.save_identify_posterior<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2606</span>, in save_identify_posterior\n    IdentifySaver<span class=\"o\">(</span>self<span class=\"o\">)(</span>world<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/output.py&quot;</span>, line <span class=\"m\">148</span>, in __call__\n    <span class=\"nv\">bigbed_outfilename</span><span class=\"o\">=</span>self.make_filename<span class=\"o\">(</span>self.bigbed_filename, world<span class=\"o\">))</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py&quot;</span>, line <span class=\"m\">358</span>, in layer\n    segmentation.save<span class=\"o\">(</span>outfilename, bigbed_outfilename<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py&quot;</span>, line <span class=\"m\">270</span>, in save\n    BEDTOBIGBED_PROG<span class=\"o\">(</span>bigbed_infilename, sizes_file.name, bigbed_outfilename<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/layer.py&quot;</span>, line <span class=\"m\">270</span>, in save\n    BEDTOBIGBED_PROG<span class=\"o\">(</span>bigbed_infilename, sizes_file.name, bigbed_outfilename<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">81</span>, in __call__\n    <span class=\"k\">return</span> self.run<span class=\"o\">(</span>*args, **kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">212</span>, in run\n    self._getoutput<span class=\"o\">(</span>args, kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">194</span>, in _getoutput\n    stdin, stdout, stderr, cwd<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">157</span>, in _popen\n    _returncode_error_factory<span class=\"o\">(</span>cmdline, returncode, output, error<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">57</span>, in _returncode_error_factory\n    raise error_cls, <span class=\"o\">(</span>cmdline, returncode, output, error<span class=\"o\">)</span>\noptbuild.ReturncodeError: bedToBigBed returned <span class=\"m\">255</span>\n</pre></div>\n\n\n<p>bedToBigBed is correctly reporting this issue as evidenced by the segway.layered.bed.gz output:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>$ zcat segway.layered.bed.gz <span class=\"p\">|</span> head -n <span class=\"m\">12</span> <span class=\"p\">|</span> nl\n     <span class=\"m\">1</span>  track <span class=\"nv\">autoScale</span><span class=\"o\">=</span>off <span class=\"nv\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;segway 10-label segmentation of H3K4me1, H3K4me3, H3K27ac, H3K27me3, CTCF&quot;</span> <span class=\"nv\">viewLimits</span><span class=\"o\">=</span><span class=\"m\">0</span>:1 <span class=\"nv\">visibility</span><span class=\"o\">=</span>full <span class=\"nv\">name</span><span class=\"o\">=</span>segway.151388ae750c11e686895254004fdc17 <span class=\"nv\">itemRgb</span><span class=\"o\">=</span>on\n     <span class=\"m\">2</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">0</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">27</span>,158,119      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">3</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">1</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">217</span>,95,2        <span class=\"m\">1</span>       <span class=\"m\">128386</span>  <span class=\"m\">0</span>\n     <span class=\"m\">4</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">2</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">117</span>,112,179     <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">5</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">3</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">231</span>,41,138      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">6</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">4</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">102</span>,166,30      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">7</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">5</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">230</span>,171,2       <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">8</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">6</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">166</span>,118,29      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n     <span class=\"m\">9</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">7</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">102</span>,102,102     <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n    <span class=\"m\">10</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">8</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">27</span>,158,119      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n    <span class=\"m\">11</span>  chr20_GL383577v2_alt    <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">9</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">128386</span>  <span class=\"m\">217</span>,95,2        <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,128385\n    <span class=\"m\">12</span>  chr17_KI270861v1_alt    <span class=\"m\">0</span>       <span class=\"m\">196688</span>  <span class=\"m\">0</span>       <span class=\"m\">1000</span>    .       <span class=\"m\">0</span>       <span class=\"m\">196688</span>  <span class=\"m\">27</span>,158,119      <span class=\"m\">2</span>       <span class=\"m\">1</span>,1     <span class=\"m\">0</span>,196687\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-09-07T18:44:12.267198+00:00", "milestone": null, "updated_on": "2016-09-14T15:27:23.902843+00:00", "type": "issue", "id": 83}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/84/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/84.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/84/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/84/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/84/gmtk-gives-zero-clique-error-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/84/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "GMTK gives zero clique error when supervision labels are directly adjacent", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This can be shown by setting semi-label.bed in simplesemisupervised to:\r\n\r\n\r\n```\r\n#!python\r\n\r\nchr1\t0\t100\t0\r\nchr1\t100\t200\t1\r\nchr1\t400\t500\t0\r\n\r\n```\r\n\r\nwill fail upon the first job with a zero clique error.\r\n\r\nThere may be other factors in play here, such as the size of the labels--I'm not sure (as I had trouble reproducing the issue with extremely large labels).", "markup": "markdown", "html": "<p>This can be shown by setting semi-label.bed in simplesemisupervised to:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">chr1</span>    <span class=\"mi\">0</span>   <span class=\"mi\">100</span> <span class=\"mi\">0</span>\n<span class=\"n\">chr1</span>    <span class=\"mi\">100</span> <span class=\"mi\">200</span> <span class=\"mi\">1</span>\n<span class=\"n\">chr1</span>    <span class=\"mi\">400</span> <span class=\"mi\">500</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>will fail upon the first job with a zero clique error.</p>\n<p>There may be other factors in play here, such as the size of the labels--I'm not sure (as I had trouble reproducing the issue with extremely large labels).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-12T14:21:35.121242+00:00", "milestone": null, "updated_on": "2018-10-23T17:25:18.824261+00:00", "type": "issue", "id": 84}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/85/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/85.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/85/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/85/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/85/better-random-number-generation-per"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/85/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Better random number generation per instance", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently Segway has a distinct disadvantage that for that a seed N and N+1, the seeds will share same the same seeded initial parameters from N+1 onwards where instances are > 1. Other current methods seem to be error-prone or not entirely correct.\r\n\r\nSee http://stats.stackexchange.com/questions/233061/best-way-to-seed-n-independent-random-number-generators-from-1-value\r\n\r\nFuture implementations may want to use the randomstate pypi module: http://bashtage.github.io/ng-numpy-randomstate/doc/build/html/parallel.html#independent-streams Specifically it has an in-development feature of a different PRNG then current one numpy uses where you can seed and set an ID independent RNG streams.", "markup": "markdown", "html": "<p>Currently Segway has a distinct disadvantage that for that a seed N and N+1, the seeds will share same the same seeded initial parameters from N+1 onwards where instances are &gt; 1. Other current methods seem to be error-prone or not entirely correct.</p>\n<p>See <a href=\"http://stats.stackexchange.com/questions/233061/best-way-to-seed-n-independent-random-number-generators-from-1-value\" rel=\"nofollow\" class=\"ap-connect-link\">http://stats.stackexchange.com/questions/233061/best-way-to-seed-n-independent-random-number-generators-from-1-value</a></p>\n<p>Future implementations may want to use the randomstate pypi module: <a href=\"http://bashtage.github.io/ng-numpy-randomstate/doc/build/html/parallel.html#independent-streams\" rel=\"nofollow\" class=\"ap-connect-link\">http://bashtage.github.io/ng-numpy-randomstate/doc/build/html/parallel.html#independent-streams</a> Specifically it has an in-development feature of a different PRNG then current one numpy uses where you can seed and set an ID independent RNG streams.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-14T19:31:59.226543+00:00", "milestone": null, "updated_on": "2016-09-14T19:31:59.226543+00:00", "type": "issue", "id": 85}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/86/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/86.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/86/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/86/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/86/segway-identify-crashes-on-pbs-torque"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/86/vote"}}, "reporter": {"display_name": "Gabriel Pratt", "uuid": "{e86348ec-7a86-406d-9b71-07a70fd5ec82}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be86348ec-7a86-406d-9b71-07a70fd5ec82%7D"}, "html": {"href": "https://bitbucket.org/%7Be86348ec-7a86-406d-9b71-07a70fd5ec82%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/39e3276428e18646fe72b9e7f4d56282d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsGP-0.png"}}, "nickname": "gpratt", "type": "user", "account_id": "557058:53bf62be-4cb1-4655-bf9e-5af9ab2e5329"}, "title": "Segway Identify crashes on PBS/Torque cluster", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello, I'm just filing this issue for tracking sake, don't worry about fixing it, I've already fixed it locally, we can discuss if its worth building out a fix in general.\r\n\r\nOn my PBS/Torque cluster memory managed by something called \"cpuset\". Which allocates memory to a job based on the number of processors requested for that job.  This creates a conflict when Segway tries to specify memory requirements with the -l mem=XXGB and -l vmem=XXXGB. Causing Segway Identify to crash.  \r\n\r\nThe crash occurs when segway tries to use too much memory, I'm not quite sure what too much means in this case, but this wasn't an issue with segway train as it wasn't as memory intensive.  \r\n\r\nI fixed the issue by removing all resource requests from segway/segway/cluster/common.py Specifically line 76 was changed to \r\n```\r\n#!python\r\n\r\nself.res_req = []\r\n```\r\nThis allowed cpuset to manage the memory without conflicts and segway executed successfully.  \r\n\r\nI'm guessing that those memory requirements are important for resource allocation in other clusters, the best way I can think of fixing this issue generally is just putting in a flag that removes resource requests on clusters that don't need them or can't support them.\r\n     ", "markup": "markdown", "html": "<p>Hello, I'm just filing this issue for tracking sake, don't worry about fixing it, I've already fixed it locally, we can discuss if its worth building out a fix in general.</p>\n<p>On my PBS/Torque cluster memory managed by something called \"cpuset\". Which allocates memory to a job based on the number of processors requested for that job.  This creates a conflict when Segway tries to specify memory requirements with the -l mem=XXGB and -l vmem=XXXGB. Causing Segway Identify to crash.  </p>\n<p>The crash occurs when segway tries to use too much memory, I'm not quite sure what too much means in this case, but this wasn't an issue with segway train as it wasn't as memory intensive.  </p>\n<p>I fixed the issue by removing all resource requests from segway/segway/cluster/common.py Specifically line 76 was changed to </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">res_req</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n</pre></div>\n\n\n<p>This allowed cpuset to manage the memory without conflicts and segway executed successfully.  </p>\n<p>I'm guessing that those memory requirements are important for resource allocation in other clusters, the best way I can think of fixing this issue generally is just putting in a flag that removes resource requests on clusters that don't need them or can't support them.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-27T18:52:31.163721+00:00", "milestone": null, "updated_on": "2016-09-27T18:59:43.515257+00:00", "type": "issue", "id": 86}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/87/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/87.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/87/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/87/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/87/enable-warnings-from-gmtk"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/87/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Enable warnings from GMTK", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Enable warnings from GMTK, preferably at a verbosity level between 0 and 10 such that WARNINGs are enabled, but not other output such as the 'NOTE: storing current accumulators (from training 1 segments) to file ... and exiting' message we expect every time.", "markup": "markdown", "html": "<p>Enable warnings from GMTK, preferably at a verbosity level between 0 and 10 such that WARNINGs are enabled, but not other output such as the 'NOTE: storing current accumulators (from training 1 segments) to file ... and exiting' message we expect every time.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-10-12T13:54:23.443484+00:00", "milestone": null, "updated_on": "2016-10-12T18:33:24.743942+00:00", "type": "issue", "id": 87}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/88/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/88.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/88/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/88/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/88/seg_subseg-objects-should-not-be-used-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/88/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "seg_subseg objects should not be used when hierarchical segmentation is not enabled", "component": null, "votes": 0, "watches": 1, "content": {"raw": "`seg_subseg` objects should not be used when hierarchical segmentation is not enabled. \r\n\r\nThe following should not occur as hierarchial segmentation is not actually supposed to be enabled here:\r\n\r\n\r\n```\r\n#!python\r\n\r\nWARNING: zero accumulator values for DenseCPT 'seg_subseg'\r\nWARNING: zero accumulator values for DenseCPT 'seg_subseg_subseg'\r\n\r\nWARNING: DenseCPT named 'seg_subseg' received only -1.000000e+17 accumulated probability in EM iteration. Using previous iteraton values.\r\nWARNING: DenseCPT named 'seg_subseg_subseg' received only -1.000000e+17 accumulated probability in EM iteration. Using previous iteraton values.\r\n```\r\n", "markup": "markdown", "html": "<p><code>seg_subseg</code> objects should not be used when hierarchical segmentation is not enabled. </p>\n<p>The following should not occur as hierarchial segmentation is not actually supposed to be enabled here:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">WARNING</span><span class=\"p\">:</span> <span class=\"n\">zero</span> <span class=\"n\">accumulator</span> <span class=\"n\">values</span> <span class=\"k\">for</span> <span class=\"n\">DenseCPT</span> <span class=\"s1\">&#39;seg_subseg&#39;</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span> <span class=\"n\">zero</span> <span class=\"n\">accumulator</span> <span class=\"n\">values</span> <span class=\"k\">for</span> <span class=\"n\">DenseCPT</span> <span class=\"s1\">&#39;seg_subseg_subseg&#39;</span>\n\n<span class=\"n\">WARNING</span><span class=\"p\">:</span> <span class=\"n\">DenseCPT</span> <span class=\"n\">named</span> <span class=\"s1\">&#39;seg_subseg&#39;</span> <span class=\"n\">received</span> <span class=\"n\">only</span> <span class=\"o\">-</span><span class=\"mf\">1.000000e+17</span> <span class=\"n\">accumulated</span> <span class=\"n\">probability</span> <span class=\"ow\">in</span> <span class=\"n\">EM</span> <span class=\"n\">iteration</span><span class=\"o\">.</span> <span class=\"n\">Using</span> <span class=\"n\">previous</span> <span class=\"n\">iteraton</span> <span class=\"n\">values</span><span class=\"o\">.</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span> <span class=\"n\">DenseCPT</span> <span class=\"n\">named</span> <span class=\"s1\">&#39;seg_subseg_subseg&#39;</span> <span class=\"n\">received</span> <span class=\"n\">only</span> <span class=\"o\">-</span><span class=\"mf\">1.000000e+17</span> <span class=\"n\">accumulated</span> <span class=\"n\">probability</span> <span class=\"ow\">in</span> <span class=\"n\">EM</span> <span class=\"n\">iteration</span><span class=\"o\">.</span> <span class=\"n\">Using</span> <span class=\"n\">previous</span> <span class=\"n\">iteraton</span> <span class=\"n\">values</span><span class=\"o\">.</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-10-12T13:56:01.335949+00:00", "milestone": null, "updated_on": "2016-10-19T20:48:20.486972+00:00", "type": "issue", "id": 88}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/89/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/89.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/89/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/89/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/89/segway-task-should-ensure-pytables-runs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/89/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "segway-task should ensure PyTables runs with a single thread", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From: https://bitbucket.org/hoffmanlab/genomedata/issues/25/consider-changing-pytables-default-number\r\n\r\nTo ensure segway-task runs only a single thread of processing, PyTables parameters `tables.parameters.MAX_NUMEXPR_THREADS` and `tables.parameters.MAX_BLOSC_THREADS` should be set to 1\r\n\r\nSee the [Pytables parameters documentation](http://www.pytables.org/usersguide/parameter_files.html#tables.parameters.MAX_NUMEXPR_THREADS).", "markup": "markdown", "html": "<p>From: <a href=\"https://bitbucket.org/hoffmanlab/genomedata/issues/25/consider-changing-pytables-default-number\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/hoffmanlab/genomedata/issues/25/consider-changing-pytables-default-number</a></p>\n<p>To ensure segway-task runs only a single thread of processing, PyTables parameters <code>tables.parameters.MAX_NUMEXPR_THREADS</code> and <code>tables.parameters.MAX_BLOSC_THREADS</code> should be set to 1</p>\n<p>See the <a data-is-external-link=\"true\" href=\"http://www.pytables.org/usersguide/parameter_files.html#tables.parameters.MAX_NUMEXPR_THREADS\" rel=\"nofollow\">Pytables parameters documentation</a>.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-10-13T19:34:39.693217+00:00", "milestone": null, "updated_on": "2016-10-13T19:34:39.693217+00:00", "type": "issue", "id": 89}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/90/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/90.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/90/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/90/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/90/viterbi-in-segway-task-captures-all-output"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/90/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Viterbi in segway-task captures all output and hides warnings", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Ideally with newer versions of GMTK, virtebi can now output to files which Segway can use. This will allow output and warnings to be written to file for better debugging purposes.", "markup": "markdown", "html": "<p>Ideally with newer versions of GMTK, virtebi can now output to files which Segway can use. This will allow output and warnings to be written to file for better debugging purposes.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-10-14T15:08:46.697010+00:00", "milestone": null, "updated_on": "2016-10-14T15:08:46.697010+00:00", "type": "issue", "id": 90}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/91/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/91.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/91/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/91/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/91/lack-of-multiple-worlds-test"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/91/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Lack of multiple worlds test", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently there is no multiple worlds test (ie, simplemultipleworlds) in the Segway test suite.", "markup": "markdown", "html": "<p>Currently there is no multiple worlds test (ie, simplemultipleworlds) in the Segway test suite.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-11-10T19:03:49.837927+00:00", "milestone": null, "updated_on": "2016-11-25T17:04:02.350732+00:00", "type": "issue", "id": 91}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/92/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/92.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/92/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/92/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/92/segway-reporting-impossible-cpu-times"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/92/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Segway reporting impossible CPU times?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I was checking through the CPU times in the jobs.tab for one of my runs and noticed some seemingly impossible CPU times:\r\n\r\nFor example,\r\n\r\n```\r\n#!python\r\n\r\n  18737 847359  emt4.1.1472.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   691978240.0000  56.1500 0\r\n  18738 847358  emt5.1.1477.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   1432014848.0000 13.8339 0\r\n  18739 846361  emt3.1.1268.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   3244494848.0000 62077214.6800   0\r\n  18740 846366  emt1.1.1289.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   1727369216.0000 20.6849 0\r\n  18741 848536  emt6.1.1328.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   470630400.0000  16.0756 0\r\n  18742 845030  emt0.1.1603.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   1070817280.0000 13.6149 0\r\n  18743 844380  emt2.1.1652.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   743768064.0000  228.7500    0\r\n  18744 850559  emt9.1.1473.K562_5_Track.traindir.88a56392194e11e692fcbc305bf153a8  gmtkEMtrain 25  20001   529735680.0000  22.2336 0\r\n\r\n```\r\n\r\nIn particular, 62077214.6800 seconds is 718 days which is impossible. There are a number of other entries like this--in particular, it occurred for every round in this run.\r\n\r\nI believe Segway reports the CPU usage directly from SGE (which is in seconds) so this might be an SGE bug when significant CPU resources are used, rather than a Segway bug. \r\n\r\nThe following SGE thread seems related but I'm unsure if it's exactly the problem we're experiencing: [link](http://gridengine.org/pipermail/users/2014-February/007144.html)", "markup": "markdown", "html": "<p>I was checking through the CPU times in the jobs.tab for one of my runs and noticed some seemingly impossible CPU times:</p>\n<p>For example,</p>\n<div class=\"codehilite language-python\"><pre><span></span>  <span class=\"mi\">18737</span> <span class=\"mi\">847359</span>  <span class=\"n\">emt4</span><span class=\"o\">.</span><span class=\"mf\">1.1472</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">691978240.0000</span>  <span class=\"mf\">56.1500</span> <span class=\"mi\">0</span>\n  <span class=\"mi\">18738</span> <span class=\"mi\">847358</span>  <span class=\"n\">emt5</span><span class=\"o\">.</span><span class=\"mf\">1.1477</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">1432014848.0000</span> <span class=\"mf\">13.8339</span> <span class=\"mi\">0</span>\n  <span class=\"mi\">18739</span> <span class=\"mi\">846361</span>  <span class=\"n\">emt3</span><span class=\"o\">.</span><span class=\"mf\">1.1268</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">3244494848.0000</span> <span class=\"mf\">62077214.6800</span>   <span class=\"mi\">0</span>\n  <span class=\"mi\">18740</span> <span class=\"mi\">846366</span>  <span class=\"n\">emt1</span><span class=\"o\">.</span><span class=\"mf\">1.1289</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">1727369216.0000</span> <span class=\"mf\">20.6849</span> <span class=\"mi\">0</span>\n  <span class=\"mi\">18741</span> <span class=\"mi\">848536</span>  <span class=\"n\">emt6</span><span class=\"o\">.</span><span class=\"mf\">1.1328</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">470630400.0000</span>  <span class=\"mf\">16.0756</span> <span class=\"mi\">0</span>\n  <span class=\"mi\">18742</span> <span class=\"mi\">845030</span>  <span class=\"n\">emt0</span><span class=\"o\">.</span><span class=\"mf\">1.1603</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">1070817280.0000</span> <span class=\"mf\">13.6149</span> <span class=\"mi\">0</span>\n  <span class=\"mi\">18743</span> <span class=\"mi\">844380</span>  <span class=\"n\">emt2</span><span class=\"o\">.</span><span class=\"mf\">1.1652</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">743768064.0000</span>  <span class=\"mf\">228.7500</span>    <span class=\"mi\">0</span>\n  <span class=\"mi\">18744</span> <span class=\"mi\">850559</span>  <span class=\"n\">emt9</span><span class=\"o\">.</span><span class=\"mf\">1.1473</span><span class=\"o\">.</span><span class=\"n\">K562_5_Track</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">.</span><span class=\"mi\">88</span><span class=\"n\">a56392194e11e692fcbc305bf153a8</span>  <span class=\"n\">gmtkEMtrain</span> <span class=\"mi\">25</span>  <span class=\"mi\">20001</span>   <span class=\"mf\">529735680.0000</span>  <span class=\"mf\">22.2336</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>In particular, <a href=\"#!/hoffmanlab/segway/commits/62077214\" rel=\"nofollow\" class=\"ap-connect-link\">62077214</a>.6800 seconds is 718 days which is impossible. There are a number of other entries like this--in particular, it occurred for every round in this run.</p>\n<p>I believe Segway reports the CPU usage directly from SGE (which is in seconds) so this might be an SGE bug when significant CPU resources are used, rather than a Segway bug. </p>\n<p>The following SGE thread seems related but I'm unsure if it's exactly the problem we're experiencing: <a data-is-external-link=\"true\" href=\"http://gridengine.org/pipermail/users/2014-February/007144.html\" rel=\"nofollow\">link</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-11-11T18:50:02.000485+00:00", "milestone": null, "updated_on": "2016-11-11T21:21:28.470887+00:00", "type": "issue", "id": 92}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/93/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/93.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/93/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/93/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/93/jobstab-occassionally-missing-lines-line"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/93/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Jobs.tab occassionally missing lines - line Buffering for jobs.tab", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently jobs.tab is opened with a system default buffering scheme. On most systems this means that the file is fully buffered. In segway there are even calls to \"flush\" in hopes to force a write out of the current submitted job (in cluster/__init__.py). \"flush\" does not guarentee a write out and a ```os.fsync(f.fileno())``` is necessary to guarentee it on synchronous filesystems.\r\n\r\nSince each job is a tab-seperated line it would make sense if the jobs.tab file was opened with line buffering enabled. This might also help alleviate issues where sometimes there are missing newlines in the jobs.tab.\r\n\r\nAnother note that the same file handle is shared between all threads. Regular os.writes are not thread safe as they all advance the file pointer. There is potential cases where the jobs.tab has it's file pointer advancing by newer jobs and an older job still has it's file pointer to a previous location potentially overwriting a line.\r\n\r\nAnother potential solution is to have a separate jobs.tab per instance. This would isolate each jobs.tab on a per thread basis.", "markup": "markdown", "html": "<p>Currently jobs.tab is opened with a system default buffering scheme. On most systems this means that the file is fully buffered. In segway there are even calls to \"flush\" in hopes to force a write out of the current submitted job (in cluster/<strong>init</strong>.py). \"flush\" does not guarentee a write out and a <code>os.fsync(f.fileno())</code> is necessary to guarentee it on synchronous filesystems.</p>\n<p>Since each job is a tab-seperated line it would make sense if the jobs.tab file was opened with line buffering enabled. This might also help alleviate issues where sometimes there are missing newlines in the jobs.tab.</p>\n<p>Another note that the same file handle is shared between all threads. Regular os.writes are not thread safe as they all advance the file pointer. There is potential cases where the jobs.tab has it's file pointer advancing by newer jobs and an older job still has it's file pointer to a previous location potentially overwriting a line.</p>\n<p>Another potential solution is to have a separate jobs.tab per instance. This would isolate each jobs.tab on a per thread basis.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-11-16T16:12:58.944190+00:00", "milestone": null, "updated_on": "2016-11-30T16:53:03.452014+00:00", "type": "issue", "id": 93}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/94/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/94.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/94/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/94/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/94/command-to-clean-up-intermediate-files"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/94/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Command to clean up intermediate files from Segway runs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For annotate/identification runs, posterior and viterbi are not necessary after a sucessful run. It's suggested that a separate `segway-cleanup` command be added to remove such folders.", "markup": "markdown", "html": "<p>For annotate/identification runs, posterior and viterbi are not necessary after a sucessful run. It's suggested that a separate <code>segway-cleanup</code> command be added to remove such folders.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-11-16T16:17:54.212737+00:00", "milestone": null, "updated_on": "2016-12-07T19:32:12.253233+00:00", "type": "issue", "id": 94}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/95/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/95.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/95/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/95/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/95/runtime-error-error-126-in-output-files"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/95/vote"}}, "reporter": null, "title": "Runtime error. Error 126 in output files. Permission denied over sh executable files", "component": null, "votes": 0, "watches": null, "content": {"raw": "segway --num-labels=4 train test.genomedata traindir\r\n traindir/observations/chr21.0000.float32 (9411193, 9595548)\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Tuesday November 22 2016, 15:36:50 CET ____\r\nrunning locally 1: emt0.0.0.traindir.1ac69340b0c111e6a5ac989096c35828 ()\r\nrunning locally 2: emt0.0.0.traindir.1ac69340b0c111e6a5ac989096c35828 ()\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/segway\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 3030, in main\r\n    return runner()\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2823, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2790, in run\r\n    self.run_train()\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2334, in run_train\r\n    instance_params = run_train_func(self.num_segs_range)\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2343, in run_train_singlethread\r\n    res = [self.run_train_instance()]\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2222, in run_train_instance\r\n    round_index, kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2229, in progress_train_instance\r\n    self.run_train_round(self.instance_index, round_index, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2173, in run_train_round\r\n    restartable_jobs.wait()\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/cluster/__init__.py\", line 306, in wait\r\n    self.process_job(jobid, job_info)\r\n  File \"/usr/local/lib/python2.7/dist-packages/segway/cluster/__init__.py\", line 258, in process_job\r\n    (jobid, job_name, error_filename))\r\nRuntimeError: \r\nSubmitted Job (2) failed. Failed Job: emt0.0.0.traindir.1ac69340b0c111e6a5ac989096c35828.\r\nFor details, check error messages in traindir/output/e/0/emt0.0.0.traindir.1ac69340b0c111e6a5ac989096c35828.\r\nSee the Troubleshooting section of the Segway documentation.", "markup": "markdown", "html": "<p>segway --num-labels=4 train test.genomedata traindir\n traindir/observations/chr21.0000.float32 (<a href=\"#!/hoffmanlab/segway/commits/9411193\" rel=\"nofollow\" class=\"ap-connect-link\">9411193</a>, <a href=\"#!/hoffmanlab/segway/commits/9595548\" rel=\"nofollow\" class=\"ap-connect-link\">9595548</a>)\n<strong><em>_ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Tuesday November 22 2016, 15:36:50 CET </em></strong>_\nrunning locally 1: emt0.0.0.traindir.<a href=\"#!/hoffmanlab/segway/commits/1ac69340b0c111e6a5ac989096c35828\" rel=\"nofollow\" class=\"ap-connect-link\">1ac69340b0c111e6a5ac989096c35828</a> ()\nrunning locally 2: emt0.0.0.traindir.<a href=\"#!/hoffmanlab/segway/commits/1ac69340b0c111e6a5ac989096c35828\" rel=\"nofollow\" class=\"ap-connect-link\">1ac69340b0c111e6a5ac989096c35828</a> ()\nTraceback (most recent call last):\n  File \"/usr/local/bin/segway\", line 11, in &lt;module&gt;\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 3030, in main\n    return runner()\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2823, in <strong>call</strong>\n    self.run(*args, <strong>kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2790, in run\n    self.run_train()\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2334, in run_train\n    instance_params = run_train_func(self.num_segs_range)\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2343, in run_train_singlethread\n    res = [self.run_train_instance()]\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2222, in run_train_instance\n    round_index, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2229, in progress_train_instance\n    self.run_train_round(self.instance_index, round_index, </strong>kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/segway/run.py\", line 2173, in run_train_round\n    restartable_jobs.wait()\n  File \"/usr/local/lib/python2.7/dist-packages/segway/cluster/<strong>init</strong>.py\", line 306, in wait\n    self.process_job(jobid, job_info)\n  File \"/usr/local/lib/python2.7/dist-packages/segway/cluster/<strong>init</strong>.py\", line 258, in process_job\n    (jobid, job_name, error_filename))\nRuntimeError: \nSubmitted Job (2) failed. Failed Job: emt0.0.0.traindir.<a href=\"#!/hoffmanlab/segway/commits/1ac69340b0c111e6a5ac989096c35828\" rel=\"nofollow\" class=\"ap-connect-link\">1ac69340b0c111e6a5ac989096c35828</a>.\nFor details, check error messages in traindir/output/e/0/emt0.0.0.traindir.<a href=\"#!/hoffmanlab/segway/commits/1ac69340b0c111e6a5ac989096c35828\" rel=\"nofollow\" class=\"ap-connect-link\">1ac69340b0c111e6a5ac989096c35828</a>.\nSee the Troubleshooting section of the Segway documentation.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-11-22T14:44:46.256825+00:00", "milestone": null, "updated_on": "2016-11-25T14:28:06.386445+00:00", "type": "issue", "id": 95}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/96/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/96.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/96/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/96/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/96/allow-gmtk-to-use-nan-for-observations"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/96/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Allow GMTK to use NAN for observations", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Segway should avoid filling in unnecessary 0's in observations and allow GMTK to use NAN for observations by enabling the necessary option.", "markup": "markdown", "html": "<p>Segway should avoid filling in unnecessary 0's in observations and allow GMTK to use NAN for observations by enabling the necessary option.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-11-25T17:05:31.523926+00:00", "milestone": null, "updated_on": "2016-11-25T18:14:38.662413+00:00", "type": "issue", "id": 96}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/97/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/97.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/97/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/97/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/97/observations-option-continues-looking-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/97/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "--observations option continues looking in traindir even after observations folder is separately specified", "component": null, "votes": 0, "watches": 1, "content": {"raw": "--observations option continues looking in traindir/observations even after another observations folder is separately specified. \r\n\r\nFor example, specifying --observations=traindir_old/observations/ folder results in Segway looking at traindir_old/observations/float32.list for the list of windows, but looking in traindir/observations for the corresponding windows (which is of course wrong).\r\n\r\nThis results in the following GMTK error for all jobs:\r\n\r\n\r\n```\r\n#!python\r\n\r\nBinaryFile::openSegment: Can't open '/mnt/work1/users/hoffmangroup/rachelc/2016/segway_appnote/minibatch/results/DOHH2_0.0001_1.traindir/observations/chr1.1574.float32' (in binary file '/mnt/work1/users/hoffmangroup/rachelc/2016/segway_appnote/minibatch/results_old/DOHH2_0.0001_1.traindir/observations/float32.list') for input\r\n\r\nERROR: FileSource::openSegment: failed to open segment 1574.\r\n```\r\n\r\nfor all segment numbers.\r\n\r\nTo work around this, I created my traindir/observations folder before running Segway and moved my base observations folder into it and that seemed to be fine. But looking at the documentation (which suggests the ability to use the same external observations folder with multiple runs) this doesn't seem to be intended behavior--and if it is, should be clarified.", "markup": "markdown", "html": "<p>--observations option continues looking in traindir/observations even after another observations folder is separately specified. </p>\n<p>For example, specifying --observations=traindir_old/observations/ folder results in Segway looking at traindir_old/observations/float32.list for the list of windows, but looking in traindir/observations for the corresponding windows (which is of course wrong).</p>\n<p>This results in the following GMTK error for all jobs:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">BinaryFile</span><span class=\"p\">::</span><span class=\"n\">openSegment</span><span class=\"p\">:</span> <span class=\"n\">Can</span><span class=\"s1\">&#39;t open &#39;</span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">work1</span><span class=\"o\">/</span><span class=\"n\">users</span><span class=\"o\">/</span><span class=\"n\">hoffmangroup</span><span class=\"o\">/</span><span class=\"n\">rachelc</span><span class=\"o\">/</span><span class=\"mi\">2016</span><span class=\"o\">/</span><span class=\"n\">segway_appnote</span><span class=\"o\">/</span><span class=\"n\">minibatch</span><span class=\"o\">/</span><span class=\"n\">results</span><span class=\"o\">/</span><span class=\"n\">DOHH2_0</span><span class=\"o\">.</span><span class=\"mo\">0001</span><span class=\"n\">_1</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">/</span><span class=\"n\">observations</span><span class=\"o\">/</span><span class=\"n\">chr1</span><span class=\"o\">.</span><span class=\"mf\">1574.</span><span class=\"n\">float32</span><span class=\"s1\">&#39; (in binary file &#39;</span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">work1</span><span class=\"o\">/</span><span class=\"n\">users</span><span class=\"o\">/</span><span class=\"n\">hoffmangroup</span><span class=\"o\">/</span><span class=\"n\">rachelc</span><span class=\"o\">/</span><span class=\"mi\">2016</span><span class=\"o\">/</span><span class=\"n\">segway_appnote</span><span class=\"o\">/</span><span class=\"n\">minibatch</span><span class=\"o\">/</span><span class=\"n\">results_old</span><span class=\"o\">/</span><span class=\"n\">DOHH2_0</span><span class=\"o\">.</span><span class=\"mo\">0001</span><span class=\"n\">_1</span><span class=\"o\">.</span><span class=\"n\">traindir</span><span class=\"o\">/</span><span class=\"n\">observations</span><span class=\"o\">/</span><span class=\"n\">float32</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"s1\">&#39;) for input</span>\n\n<span class=\"n\">ERROR</span><span class=\"p\">:</span> <span class=\"n\">FileSource</span><span class=\"p\">::</span><span class=\"n\">openSegment</span><span class=\"p\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"nb\">open</span> <span class=\"n\">segment</span> <span class=\"mf\">1574.</span>\n</pre></div>\n\n\n<p>for all segment numbers.</p>\n<p>To work around this, I created my traindir/observations folder before running Segway and moved my base observations folder into it and that seemed to be fine. But looking at the documentation (which suggests the ability to use the same external observations folder with multiple runs) this doesn't seem to be intended behavior--and if it is, should be clarified.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-12-02T19:14:44.933705+00:00", "milestone": null, "updated_on": "2016-12-02T19:30:25.610104+00:00", "type": "issue", "id": 97}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/98/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/98.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/98/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/98/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/98/new-verb-for-segway-to-test-likelihood"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/98/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "New verb for Segway to test likelihood", "component": null, "votes": 0, "watches": 1, "content": {"raw": "A new verb (ie, 'validate') could be added such that Segway tests likelihood on ```--include-coords```; that is, run gmtKJTwith probE on the specified region(s).", "markup": "markdown", "html": "<p>A new verb (ie, 'validate') could be added such that Segway tests likelihood on <code>--include-coords</code>; that is, run gmtKJTwith probE on the specified region(s).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-12-09T17:35:51.680674+00:00", "milestone": null, "updated_on": "2016-12-14T19:53:34.889506+00:00", "type": "issue", "id": 98}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/99/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/99.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/99/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/99/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/99/likelihood-validation-when-using-minibatch"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/99/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Likelihood validation when using minibatch", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, Segway's winning set of params is chosen based on the instance with the best last likelihood. Due to minibatch's highly variational nature, this may not be the best way to choose the winner.\r\n\r\nInstead, should minibatch automatically test likelihood on a validation set and choose based on whichever set of params has the best validation test likelihood (even if it's not the last one)?\r\n\r\nIf yes, should the region be automatically inferred or should it be required to be specified using something such as --validation-coords?\r\n\r\nIf automatically inferred, what size should the validation set be? I know we previously said '10x the training set', but what if the minibatch fraction specified is extremely large (ie, 0.10 or greater)?", "markup": "markdown", "html": "<p>Currently, Segway's winning set of params is chosen based on the instance with the best last likelihood. Due to minibatch's highly variational nature, this may not be the best way to choose the winner.</p>\n<p>Instead, should minibatch automatically test likelihood on a validation set and choose based on whichever set of params has the best validation test likelihood (even if it's not the last one)?</p>\n<p>If yes, should the region be automatically inferred or should it be required to be specified using something such as --validation-coords?</p>\n<p>If automatically inferred, what size should the validation set be? I know we previously said '10x the training set', but what if the minibatch fraction specified is extremely large (ie, 0.10 or greater)?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-12-14T20:28:20.860801+00:00", "milestone": null, "updated_on": "2016-12-14T20:57:21.976672+00:00", "type": "issue", "id": 99}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/100/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/100.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/100/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/100/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/100/dinucleotide-option-and-use_dinucleotide"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/100/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "--dinucleotide option and \"use_dinucleotide\" doesn't seem to work", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In segway/run.py, the function `use_dinucleotide` attempts to detect use of a dinucleotide track by comparing Track objects to a constant created Track object:\r\n\r\n```python\r\n    @memoized_property\r\n    def use_dinucleotide(self):\r\n        return TRACK_DINUCLEOTIDE in self.tracks\r\n```\r\n\r\nThe `TRACK_DINUCLEOTIDE` is only instantiated once globally as an object:\r\n```python\r\nTRACK_DINUCLEOTIDE = Track(\"dinucleotide\", is_data=False)\r\n```\r\n\r\nThe constant track object will never be inside `self.tracks` since it is comparing objects, not the trackname itself.", "markup": "markdown", "html": "<p>In segway/run.py, the function <code>use_dinucleotide</code> attempts to detect use of a dinucleotide track by comparing Track objects to a constant created Track object:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"nd\">@memoized_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_dinucleotide</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">TRACK_DINUCLEOTIDE</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tracks</span>\n</pre></div>\n\n\n<p>The <code>TRACK_DINUCLEOTIDE</code> is only instantiated once globally as an object:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">TRACK_DINUCLEOTIDE</span> <span class=\"o\">=</span> <span class=\"n\">Track</span><span class=\"p\">(</span><span class=\"s2\">&quot;dinucleotide&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_data</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The constant track object will never be inside <code>self.tracks</code> since it is comparing objects, not the trackname itself.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-01-05T16:36:19.608727+00:00", "milestone": null, "updated_on": "2017-01-05T16:36:19.608727+00:00", "type": "issue", "id": 100}], "page": 1, "next": "data/repositories/hoffmanlab/segway/issues_page=2.json"}