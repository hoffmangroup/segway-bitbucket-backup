{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/100/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/100.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/100/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/100/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/100/dinucleotide-option-and-use_dinucleotide"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/100/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "--dinucleotide option and \"use_dinucleotide\" doesn't seem to work", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In segway/run.py, the function `use_dinucleotide` attempts to detect use of a dinucleotide track by comparing Track objects to a constant created Track object:\r\n\r\n```python\r\n    @memoized_property\r\n    def use_dinucleotide(self):\r\n        return TRACK_DINUCLEOTIDE in self.tracks\r\n```\r\n\r\nThe `TRACK_DINUCLEOTIDE` is only instantiated once globally as an object:\r\n```python\r\nTRACK_DINUCLEOTIDE = Track(\"dinucleotide\", is_data=False)\r\n```\r\n\r\nThe constant track object will never be inside `self.tracks` since it is comparing objects, not the trackname itself.", "markup": "markdown", "html": "<p>In segway/run.py, the function <code>use_dinucleotide</code> attempts to detect use of a dinucleotide track by comparing Track objects to a constant created Track object:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"nd\">@memoized_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_dinucleotide</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">TRACK_DINUCLEOTIDE</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tracks</span>\n</pre></div>\n\n\n<p>The <code>TRACK_DINUCLEOTIDE</code> is only instantiated once globally as an object:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">TRACK_DINUCLEOTIDE</span> <span class=\"o\">=</span> <span class=\"n\">Track</span><span class=\"p\">(</span><span class=\"s2\">&quot;dinucleotide&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_data</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The constant track object will never be inside <code>self.tracks</code> since it is comparing objects, not the trackname itself.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-01-05T16:36:19.608727+00:00", "milestone": null, "updated_on": "2017-01-05T16:36:19.608727+00:00", "type": "issue", "id": 100}