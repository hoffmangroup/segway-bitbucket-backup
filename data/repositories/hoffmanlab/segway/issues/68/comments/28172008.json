{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/68/comments/28172008.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/68#comment-28172008"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/68.json"}}, "type": "issue", "id": 68, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Segway attempts to recover from last round run, rather than the one previous"}, "content": {"raw": "We weren't sure which of the many child processes belonged to which segway run (I had 4 going on at the same time), so we qdel'ed the parent and let the children finish off. There isn't a way to send a SIGTERM signal specifically to a qsub'd job in SGE that I know of, it has to be qdel (the documentation is unclear if it is a SIGTERM or a SIGKILL).\n\nI am not sure how the log_likelihoods file could be written for a round that never completed and would have to take a closer look at the code to figure out why. It is possible the round was about to finish when the job was qdel'ed, so the children technically ended up finishing it off, but the main segway process did not realise, and upon recovery, instead thought all files that were to be written for the entire round had already been written when they were not. But again, I would have to take a closer look at the code to figure out when/where these files are actually written, to know better.", "markup": "markdown", "html": "<p>We weren't sure which of the many child processes belonged to which segway run (I had 4 going on at the same time), so we qdel'ed the parent and let the children finish off. There isn't a way to send a SIGTERM signal specifically to a qsub'd job in SGE that I know of, it has to be qdel (the documentation is unclear if it is a SIGTERM or a SIGKILL).</p>\n<p>I am not sure how the log_likelihoods file could be written for a round that never completed and would have to take a closer look at the code to figure out why. It is possible the round was about to finish when the job was qdel'ed, so the children technically ended up finishing it off, but the main segway process did not realise, and upon recovery, instead thought all files that were to be written for the entire round had already been written when they were not. But again, I would have to take a closer look at the code to figure out when/where these files are actually written, to know better.</p>", "type": "rendered"}, "created_on": "2016-05-31T14:27:24.170851+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": "2016-05-31T14:27:53.123228+00:00", "type": "issue_comment", "id": 28172008}