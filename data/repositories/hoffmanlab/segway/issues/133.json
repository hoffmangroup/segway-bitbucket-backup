{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/133/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/133.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/133/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/133/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/133/disabling-gaussian-splitting-in-single"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/133/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Disabling Gaussian splitting in single-Gaussian case", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Since the mixture of Gaussians (GMM) patch, we have seen that it is possible for Gaussian models to split/vanish components once the model's confidence becomes high enough. The issue is that this behavior may not be backwards compatible with Segway pre-GMM.\r\n\r\nHowever, I am not sure how this behavior was enabled. Page 551 of GMTK's [documentation](http://melodi.ee.washington.edu/~bilmes/gmtk_docs_draft_09_08_2014.pdf) states that one just needs to add the MX table to the input.master to enable GMM. However, Segway's [commit history](#!/hoffmanlab/segway/commits/e3fc44f26689f54bf0d22d81353b628df0be00b2#chg-test/simpleseg/touchstone/traindir/params/input.master) (eg for simpleseg's input.master) indicates that the MX table has always been present in Segway. To me, this indicates that Segway was a 1D mixture model all along, and splitting/vanishing has always been possible.\r\n\r\nIn which case, is splitting/vanishing now enabled instead due to the changes to the dpmf structure? Specifically, Segway used to use a single dpmf constant 'dpmf_always' across all its Gaussians:\r\n\r\n\r\n\r\n```\r\n#!C\r\n\r\nDPMF_IN_FILE inline\r\n1\r\n\r\n0 dpmf_always 1 1.0\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack1\r\n1 1 mx_seg0_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack2\r\n2 1 mx_seg1_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg1_subseg0_testtrack1\r\n3 1 mx_seg1_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg1_subseg0_testtrack2\r\n4 1 mx_seg2_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg2_subseg0_testtrack1\r\n5 1 mx_seg2_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg2_subseg0_testtrack2\r\n6 1 mx_seg3_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg3_subseg0_testtrack1\r\n7 1 mx_seg3_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg3_subseg0_testtrack2\r\n\r\n\r\n```\r\n\r\n If I understand GMTK structure correctly, this means that 'dpmf_always' was a dpmf constant tied across all components (labels). Does this mean that if GMTK wanted to split/vanish Gaussians, it would have had to split/vanish that one dpmf constant, resulting in all components splitting/vanishing? And it likely never obtained the confidence to do so and thus this issue only appeared now that we have separate dpmf constants/tables for every mixture?:\r\n\r\n\r\n```\r\n#!C\r\n\r\nDPMF_IN_FILE inline\r\n8\r\n\r\n0 dpmf_seg0_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n1 dpmf_seg0_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n2 dpmf_seg1_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n3 dpmf_seg1_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n4 dpmf_seg2_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n5 dpmf_seg2_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n6 dpmf_seg3_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n7 dpmf_seg3_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_seg0_subseg0_testtrack1 mc_asinh_norm_seg0_subseg0_testtrack1_component0\r\n1 1 mx_seg0_subseg0_testtrack2 1 dpmf_seg0_subseg0_testtrack2 mc_asinh_norm_seg0_subseg0_testtrack2_component0\r\n2 1 mx_seg1_subseg0_testtrack1 1 dpmf_seg1_subseg0_testtrack1 mc_asinh_norm_seg1_subseg0_testtrack1_component0\r\n3 1 mx_seg1_subseg0_testtrack2 1 dpmf_seg1_subseg0_testtrack2 mc_asinh_norm_seg1_subseg0_testtrack2_component0\r\n4 1 mx_seg2_subseg0_testtrack1 1 dpmf_seg2_subseg0_testtrack1 mc_asinh_norm_seg2_subseg0_testtrack1_component0\r\n5 1 mx_seg2_subseg0_testtrack2 1 dpmf_seg2_subseg0_testtrack2 mc_asinh_norm_seg2_subseg0_testtrack2_component0\r\n6 1 mx_seg3_subseg0_testtrack1 1 dpmf_seg3_subseg0_testtrack1 mc_asinh_norm_seg3_subseg0_testtrack1_component0\r\n7 1 mx_seg3_subseg0_testtrack2 1 dpmf_seg3_subseg0_testtrack2 mc_asinh_norm_seg3_subseg0_testtrack2_component0\r\n```\r\n\r\n\r\n\r\nWould appreciate if anyone with Segway/GMTK knowledge could weigh in, as I could be totally wrong. Thanks!", "markup": "markdown", "html": "<p>Since the mixture of Gaussians (GMM) patch, we have seen that it is possible for Gaussian models to split/vanish components once the model's confidence becomes high enough. The issue is that this behavior may not be backwards compatible with Segway pre-GMM.</p>\n<p>However, I am not sure how this behavior was enabled. Page 551 of GMTK's <a data-is-external-link=\"true\" href=\"http://melodi.ee.washington.edu/~bilmes/gmtk_docs_draft_09_08_2014.pdf\" rel=\"nofollow\">documentation</a> states that one just needs to add the MX table to the input.master to enable GMM. However, Segway's <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/commits/e3fc44f26689f54bf0d22d81353b628df0be00b2#chg-test/simpleseg/touchstone/traindir/params/input.master\" rel=\"nofollow\">commit history</a> (eg for simpleseg's input.master) indicates that the MX table has always been present in Segway. To me, this indicates that Segway was a 1D mixture model all along, and splitting/vanishing has always been possible.</p>\n<p>In which case, is splitting/vanishing now enabled instead due to the changes to the dpmf structure? Specifically, Segway used to use a single dpmf constant 'dpmf_always' across all its Gaussians:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"n\">DPMF_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">1</span>\n\n<span class=\"mi\">0</span> <span class=\"n\">dpmf_always</span> <span class=\"mi\">1</span> <span class=\"mf\">1.0</span>\n\n<span class=\"n\">MX_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack1</span>\n<span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack2</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack1</span>\n<span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack2</span>\n<span class=\"mi\">4</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack1</span>\n<span class=\"mi\">5</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack2</span>\n<span class=\"mi\">6</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack1</span>\n<span class=\"mi\">7</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack2</span>\n</pre></div>\n\n\n<p>If I understand GMTK structure correctly, this means that 'dpmf_always' was a dpmf constant tied across all components (labels). Does this mean that if GMTK wanted to split/vanish Gaussians, it would have had to split/vanish that one dpmf constant, resulting in all components splitting/vanishing? And it likely never obtained the confidence to do so and thus this issue only appeared now that we have separate dpmf constants/tables for every mixture?:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"n\">DPMF_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">2</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">3</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">4</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">5</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">6</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">7</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n\n<span class=\"n\">MX_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack1_component0</span>\n<span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack2_component0</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack1_component0</span>\n<span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack2_component0</span>\n<span class=\"mi\">4</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack1_component0</span>\n<span class=\"mi\">5</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack2_component0</span>\n<span class=\"mi\">6</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack1_component0</span>\n<span class=\"mi\">7</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack2_component0</span>\n</pre></div>\n\n\n<p>Would appreciate if anyone with Segway/GMTK knowledge could weigh in, as I could be totally wrong. Thanks!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-19T18:15:56.349005+00:00", "milestone": null, "updated_on": "2019-02-19T18:15:56.349005+00:00", "type": "issue", "id": 133}