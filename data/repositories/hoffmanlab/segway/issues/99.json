{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/99/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/99.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/99/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/99/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/99/likelihood-validation-when-using-minibatch"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/99/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Likelihood validation when using minibatch", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, Segway's winning set of params is chosen based on the instance with the best last likelihood. Due to minibatch's highly variational nature, this may not be the best way to choose the winner.\r\n\r\nInstead, should minibatch automatically test likelihood on a validation set and choose based on whichever set of params has the best validation test likelihood (even if it's not the last one)?\r\n\r\nIf yes, should the region be automatically inferred or should it be required to be specified using something such as --validation-coords?\r\n\r\nIf automatically inferred, what size should the validation set be? I know we previously said '10x the training set', but what if the minibatch fraction specified is extremely large (ie, 0.10 or greater)?", "markup": "markdown", "html": "<p>Currently, Segway's winning set of params is chosen based on the instance with the best last likelihood. Due to minibatch's highly variational nature, this may not be the best way to choose the winner.</p>\n<p>Instead, should minibatch automatically test likelihood on a validation set and choose based on whichever set of params has the best validation test likelihood (even if it's not the last one)?</p>\n<p>If yes, should the region be automatically inferred or should it be required to be specified using something such as --validation-coords?</p>\n<p>If automatically inferred, what size should the validation set be? I know we previously said '10x the training set', but what if the minibatch fraction specified is extremely large (ie, 0.10 or greater)?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-12-14T20:28:20.860801+00:00", "milestone": null, "updated_on": "2016-12-14T20:57:21.976672+00:00", "type": "issue", "id": 99}