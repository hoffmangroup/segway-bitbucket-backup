{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624684.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624684"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on May 05, 2013 19:57:43_\n\nSure! There are basically a couple of things we need to do.\r\n\r\nFirst, what is the value of Session.drmsInfo on SLURM? (On LSF it begins with \"Platform LSF\", on Grid Engine it is \"GE\" or \"SGE\" or \"UGE\".)\r\n\r\nWe can switch on that value in segway/cluster/__init__.py to use a different driver file (segway/cluster/slurm.py) to manage the cluster (current ones in segway are segway/cluster/sge.py, segway/cluster/lsf.py, and segway/cluster/pbs.py). At a minimum, this should contain a JobTemplateFactory class, which is a subclass of segway.cluster.common._JobTemplateFactory. This should have make_res_req() and make_native_spec() methods.\r\n\r\nsegway.slurm.JobTemplateFactory.make_res_req(self, mem_usage, tmp_usage) should take two arguments, specifying the amount of memory and temp space required for a task respectively in bytes. It should set self.res_req with some value that will later be used by segway.slurm.JobTemplateFactory.make_native_spec().\r\n\r\nsegway.slurm.JobTemplateFactory.make_native_spec(self) should take no non-self arguments and use the self.res_req to return a string that will go into the DRMAA job template's nativeSpecification field.\r\n\r\nDo you think you would be able to make a patch for this? I am a little short on cycles right now to actually do this myself (mainly because I don't have access to a SLURM system at the moment to test on).\n\n**Summary:** Add Slurm cluster system  <span class=\"oldvalue\"> (was: add ability to use slurm) </span>  \n**Status:** Accepted  \n", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on May 05, 2013 19:57:43</em></p>\n<p>Sure! There are basically a couple of things we need to do.</p>\n<p>First, what is the value of Session.drmsInfo on SLURM? (On LSF it begins with \"Platform LSF\", on Grid Engine it is \"GE\" or \"SGE\" or \"UGE\".)</p>\n<p>We can switch on that value in segway/cluster/<strong>init</strong>.py to use a different driver file (segway/cluster/slurm.py) to manage the cluster (current ones in segway are segway/cluster/sge.py, segway/cluster/lsf.py, and segway/cluster/pbs.py). At a minimum, this should contain a JobTemplateFactory class, which is a subclass of segway.cluster.common._JobTemplateFactory. This should have make_res_req() and make_native_spec() methods.</p>\n<p>segway.slurm.JobTemplateFactory.make_res_req(self, mem_usage, tmp_usage) should take two arguments, specifying the amount of memory and temp space required for a task respectively in bytes. It should set self.res_req with some value that will later be used by segway.slurm.JobTemplateFactory.make_native_spec().</p>\n<p>segway.slurm.JobTemplateFactory.make_native_spec(self) should take no non-self arguments and use the self.res_req to return a string that will go into the DRMAA job template's nativeSpecification field.</p>\n<p>Do you think you would be able to make a patch for this? I am a little short on cycles right now to actually do this myself (mainly because I don't have access to a SLURM system at the moment to test on).</p>\n<p><strong>Summary:</strong> Add Slurm cluster system  &lt;span class=\"oldvalue\"&gt; (was: add ability to use slurm) &lt;/span&gt;<br />\n<strong>Status:</strong> Accepted  </p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:16.349031+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624684}