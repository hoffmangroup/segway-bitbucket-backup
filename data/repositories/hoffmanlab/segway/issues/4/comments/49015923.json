{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/49015923.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-49015923"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "`simplebadinput`, as it name implies, is supposed to fail. All is normal. The test explicitly checks for a failure and returns success if it does (exit 0). \n\nIn terms of debugging job submission and drmaa, I have yet to go into depth for implementing and debugging on slurm. Here's the following script I've been using to test drmaa on cluster systems. It uses the first passed argument as the job to submit using DRMAA:\n\n```python\n#!/usr/bin/env python\nimport os\nimport sys\n\nimport drmaa\n\n\ndef main():\n    with drmaa.Session() as session:\n        print(\"DRMAA Session started successfully\")\n\n        print('Supported contact strings:', session.contact)\n        print('Supported DRM systems:', session.drmsInfo)\n        print('Supported DRMAA implementations:', session.drmaaImplementation)\n        print('Version', session.version)\n\n        job_template = session.createJobTemplate()\n        job_template.remoteCommand = os.path.join(\n            os.getcwd(),\n            sys.argv[1]\n        )\n\n        job_template.jobEnvironment = os.environ.copy()\n\n        # There is a better way to do this (probably using jobCategory\n        # instead), but this is the way segway does it\n        # TODO : Look up better specification\n        # job_template.nativeSpecification = \"-cwd -N \" + \\\n        # sys.argv[1]\n\n        print(\"Submitting job:\", sys.argv[1], job_template.nativeSpecification)\n        job_id = session.runJob(job_template)\n        print('Job has been submitted with ID %s' % job_id)\n\n        return_value = session.wait(job_id, drmaa.Session.TIMEOUT_WAIT_FOREVER)\n        print('Job: {0} finished with status {1}'.format(\n            return_value.jobId,\n            return_value.hasExited)\n        )\n\n        session.deleteJobTemplate(job_template)\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nAs you can see there are some odd things I still need to add in terms of sensible native slurm specifications for Segway. This script should at least give you some insight into why Segway is not submitting jobs on your behalf.\n\nIn the worst case, Segway itself can be [submitted as a job and run \"locally\"](https://segway.readthedocs.io/en/latest/segway.html#standalone-configuration) (as it is doing right now) and ideally with the number of cores you've reserved with `SEGWAY_NUM_LOCAL_JOBS`", "markup": "markdown", "html": "<p><code>simplebadinput</code>, as it name implies, is supposed to fail. All is normal. The test explicitly checks for a failure and returns success if it does (exit 0). </p>\n<p>In terms of debugging job submission and drmaa, I have yet to go into depth for implementing and debugging on slurm. Here's the following script I've been using to test drmaa on cluster systems. It uses the first passed argument as the job to submit using DRMAA:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">drmaa</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">drmaa</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;DRMAA Session started successfully&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported contact strings:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">contact</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported DRM systems:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">drmsInfo</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported DRMAA implementations:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">drmaaImplementation</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Version&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n\n        <span class=\"n\">job_template</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">createJobTemplate</span><span class=\"p\">()</span>\n        <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">remoteCommand</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">jobEnvironment</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># There is a better way to do this (probably using jobCategory</span>\n        <span class=\"c1\"># instead), but this is the way segway does it</span>\n        <span class=\"c1\"># TODO : Look up better specification</span>\n        <span class=\"c1\"># job_template.nativeSpecification = &quot;-cwd -N &quot; + \\</span>\n        <span class=\"c1\"># sys.argv[1]</span>\n\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Submitting job:&quot;</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">nativeSpecification</span><span class=\"p\">)</span>\n        <span class=\"n\">job_id</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">runJob</span><span class=\"p\">(</span><span class=\"n\">job_template</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Job has been submitted with ID </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">job_id</span><span class=\"p\">)</span>\n\n        <span class=\"n\">return_value</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"n\">job_id</span><span class=\"p\">,</span> <span class=\"n\">drmaa</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"o\">.</span><span class=\"n\">TIMEOUT_WAIT_FOREVER</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Job: {0} finished with status {1}&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">return_value</span><span class=\"o\">.</span><span class=\"n\">jobId</span><span class=\"p\">,</span>\n            <span class=\"n\">return_value</span><span class=\"o\">.</span><span class=\"n\">hasExited</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">deleteJobTemplate</span><span class=\"p\">(</span><span class=\"n\">job_template</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>As you can see there are some odd things I still need to add in terms of sensible native slurm specifications for Segway. This script should at least give you some insight into why Segway is not submitting jobs on your behalf.</p>\n<p>In the worst case, Segway itself can be <a data-is-external-link=\"true\" href=\"https://segway.readthedocs.io/en/latest/segway.html#standalone-configuration\" rel=\"nofollow\">submitted as a job and run \"locally\"</a> (as it is doing right now) and ideally with the number of cores you've reserved with <code>SEGWAY_NUM_LOCAL_JOBS</code></p>", "type": "rendered"}, "created_on": "2018-11-19T20:04:07.401100+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 49015923}