{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624684.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624684"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on May 05, 2013 19:57:43_\n\nSure! There are basically a couple of things we need to do.\r\n\r\nFirst, what is the value of Session.drmsInfo on SLURM? (On LSF it begins with \"Platform LSF\", on Grid Engine it is \"GE\" or \"SGE\" or \"UGE\".)\r\n\r\nWe can switch on that value in segway/cluster/__init__.py to use a different driver file (segway/cluster/slurm.py) to manage the cluster (current ones in segway are segway/cluster/sge.py, segway/cluster/lsf.py, and segway/cluster/pbs.py). At a minimum, this should contain a JobTemplateFactory class, which is a subclass of segway.cluster.common._JobTemplateFactory. This should have make_res_req() and make_native_spec() methods.\r\n\r\nsegway.slurm.JobTemplateFactory.make_res_req(self, mem_usage, tmp_usage) should take two arguments, specifying the amount of memory and temp space required for a task respectively in bytes. It should set self.res_req with some value that will later be used by segway.slurm.JobTemplateFactory.make_native_spec().\r\n\r\nsegway.slurm.JobTemplateFactory.make_native_spec(self) should take no non-self arguments and use the self.res_req to return a string that will go into the DRMAA job template's nativeSpecification field.\r\n\r\nDo you think you would be able to make a patch for this? I am a little short on cycles right now to actually do this myself (mainly because I don't have access to a SLURM system at the moment to test on).\n\n**Summary:** Add Slurm cluster system  <span class=\"oldvalue\"> (was: add ability to use slurm) </span>  \n**Status:** Accepted  \n", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on May 05, 2013 19:57:43</em></p>\n<p>Sure! There are basically a couple of things we need to do.</p>\n<p>First, what is the value of Session.drmsInfo on SLURM? (On LSF it begins with \"Platform LSF\", on Grid Engine it is \"GE\" or \"SGE\" or \"UGE\".)</p>\n<p>We can switch on that value in segway/cluster/<strong>init</strong>.py to use a different driver file (segway/cluster/slurm.py) to manage the cluster (current ones in segway are segway/cluster/sge.py, segway/cluster/lsf.py, and segway/cluster/pbs.py). At a minimum, this should contain a JobTemplateFactory class, which is a subclass of segway.cluster.common._JobTemplateFactory. This should have make_res_req() and make_native_spec() methods.</p>\n<p>segway.slurm.JobTemplateFactory.make_res_req(self, mem_usage, tmp_usage) should take two arguments, specifying the amount of memory and temp space required for a task respectively in bytes. It should set self.res_req with some value that will later be used by segway.slurm.JobTemplateFactory.make_native_spec().</p>\n<p>segway.slurm.JobTemplateFactory.make_native_spec(self) should take no non-self arguments and use the self.res_req to return a string that will go into the DRMAA job template's nativeSpecification field.</p>\n<p>Do you think you would be able to make a patch for this? I am a little short on cycles right now to actually do this myself (mainly because I don't have access to a SLURM system at the moment to test on).</p>\n<p><strong>Summary:</strong> Add Slurm cluster system  &lt;span class=\"oldvalue\"&gt; (was: add ability to use slurm) &lt;/span&gt;<br />\n<strong>Status:</strong> Accepted  </p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:16.349031+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624684}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624686.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624686"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [cconn...@fhcrc.org](https://code.google.com/u/117044530567697322629/) on May 07, 2013 10:10:27_\n\nHi,\n     The Session.drmsInfo value I get is 'SLURM 2.5.4'. I can manage the patch. \n\n\nChuck", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/117044530567697322629/\" rel=\"nofollow\">cconn...@fhcrc.org</a> on May 07, 2013 10:10:27</em></p>\n<p>Hi,\n     The Session.drmsInfo value I get is 'SLURM 2.5.4'. I can manage the patch. </p>\n<p>Chuck</p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:16.692261+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624686}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624687.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624687"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on May 07, 2013 11:42:16_\n\nThe next release will have a hook for drms_info.startswith(\"SLURM\") in segway.cluster.get_driver_name()\r\n\r\n    elif drms_info.startswith(\"SLURM\"):\r\n        return \"slurm\"\r\n\r\nSo this should work well with a new slurm.py. The attached pbs.py from the next release is the simplest driver and might make a good starting point.\n\n**Attachment:** [pbs.py](http://code.google.com/p/segway-genome/issues/detail?id=27#hc3)", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on May 07, 2013 11:42:16</em></p>\n<p>The next release will have a hook for drms_info.startswith(\"SLURM\") in segway.cluster.get_driver_name()</p>\n<div class=\"codehilite\"><pre><span></span>elif drms_info.startswith(&quot;SLURM&quot;):\n    return &quot;slurm&quot;\n</pre></div>\n\n\n<p>So this should work well with a new slurm.py. The attached pbs.py from the next release is the simplest driver and might make a good starting point.</p>\n<p><strong>Attachment:</strong> <a data-is-external-link=\"true\" href=\"http://code.google.com/p/segway-genome/issues/detail?id=27#hc3\" rel=\"nofollow\">pbs.py</a></p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:16.908891+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624687}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624688.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624688"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [cconn...@fhcrc.org](https://code.google.com/u/117044530567697322629/) on May 24, 2013 13:06:44_\n\nI've attached a slurm.py driver file. This file works to process the test.genomedata on a system running slurm 2.5.4. Please let me know if you need modify it.\n\n**Attachment:** [slurm.py](http://code.google.com/p/segway-genome/issues/detail?id=27#hc4)", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/117044530567697322629/\" rel=\"nofollow\">cconn...@fhcrc.org</a> on May 24, 2013 13:06:44</em></p>\n<p>I've attached a slurm.py driver file. This file works to process the test.genomedata on a system running slurm 2.5.4. Please let me know if you need modify it.</p>\n<p><strong>Attachment:</strong> <a data-is-external-link=\"true\" href=\"http://code.google.com/p/segway-genome/issues/detail?id=27#hc4\" rel=\"nofollow\">slurm.py</a></p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:17.115154+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624688}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/10624689.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-10624689"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "_From [hoffman...@gmail.com](https://code.google.com/u/112579936970974005212/) on May 24, 2013 13:11:30_\n\nThanks so much! I'm glad you were able to make this work. I will add integrating this patch to my to-do list.", "markup": "markdown", "html": "<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/112579936970974005212/\" rel=\"nofollow\">hoffman...@gmail.com</a> on May 24, 2013 13:11:30</em></p>\n<p>Thanks so much! I'm glad you were able to make this work. I will add integrating this patch to my to-do list.</p>", "type": "rendered"}, "created_on": "2014-06-09T18:34:17.416666+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 10624689}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/42592082.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-42592082"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "Eric, do you still have the above slurm.py file? It was never added to the segway source. There is code in `cluster.__init__.py` that *returns* slurm as a driver, but then it doesn't go anywhere. I have a user interested in using the slurm queuing system.", "markup": "markdown", "html": "<p>Eric, do you still have the above slurm.py file? It was never added to the segway source. There is code in <code>cluster.__init__.py</code> that <em>returns</em> slurm as a driver, but then it doesn't go anywhere. I have a user interested in using the slurm queuing system.</p>", "type": "rendered"}, "created_on": "2018-01-13T01:14:18.057055+00:00", "user": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "updated_on": null, "type": "issue_comment", "id": 42592082}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/42626881.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-42626881"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "@jayhesselberth I found it!\n[https://storage.googleapis.com/google-code-attachments/segway-genome/issue-27/comment-4/slurm.py](https://storage.googleapis.com/google-code-attachments/segway-genome/issue-27/comment-4/slurm.py)\n\nI had to use this as reference:\nhttps://code.google.com/archive/schema\n\nIt's fairly barebones though and I cannot verify if it will work or not. If anyone manages to get it to work we should probably just add it in.", "markup": "markdown", "html": "<p>@jayhesselberth I found it!\n<a data-is-external-link=\"true\" href=\"https://storage.googleapis.com/google-code-attachments/segway-genome/issue-27/comment-4/slurm.py\" rel=\"nofollow\">https://storage.googleapis.com/google-code-attachments/segway-genome/issue-27/comment-4/slurm.py</a></p>\n<p>I had to use this as reference:\n<a href=\"https://code.google.com/archive/schema\" rel=\"nofollow\" class=\"ap-connect-link\">https://code.google.com/archive/schema</a></p>\n<p>It's fairly barebones though and I cannot verify if it will work or not. If anyone manages to get it to work we should probably just add it in.</p>", "type": "rendered"}, "created_on": "2018-01-15T16:38:36.972098+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 42626881}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/48276193.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-48276193"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "@jayhesselberth I'll actually be addressing this issue soon directly and I was wondering if you remember having any luck with the above slurm.py?", "markup": "markdown", "html": "<p>@jayhesselberth I'll actually be addressing this issue soon directly and I was wondering if you remember having any luck with the above slurm.py?</p>", "type": "rendered"}, "created_on": "2018-10-10T20:02:02.589126+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 48276193}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/49012528.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-49012528"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "I am trying to get segway to work with slurm but it just runs locally silently. SEGWAY_CLUSTER is set and I've installed drmaa. I copied the slurm.py file referenced above to segway/cluster.\n\nI am not 100% sure that python drmaa is working correctly (advice on how to test this is welcome) but Segway doesn't give me any sort of error (as discussed in #52).\n\nThis is probably not relevant, but all of the tests in /test pass except for simplebadinput, which fails with the following error:\n\nError: DiagGaussian 'mc_asinh_norm_seg0_subseg0_testtrack1' in file '../input.master' line 185 specifies mean name 'mean_seg0_subseg0_testtrack1' that does not exist", "markup": "markdown", "html": "<p>I am trying to get segway to work with slurm but it just runs locally silently. SEGWAY_CLUSTER is set and I've installed drmaa. I copied the slurm.py file referenced above to segway/cluster.</p>\n<p>I am not 100% sure that python drmaa is working correctly (advice on how to test this is welcome) but Segway doesn't give me any sort of error (as discussed in <a href=\"#!/hoffmanlab/segway/issues/52/segway-silently-ignores-drmaa-if-installed\" rel=\"nofollow\" title=\"Segway silently ignores DRMAA if installed incorrectly\" class=\"ap-connect-link\"><s>#52</s></a>).</p>\n<p>This is probably not relevant, but all of the tests in /test pass except for simplebadinput, which fails with the following error:</p>\n<p>Error: DiagGaussian 'mc_asinh_norm_seg0_subseg0_testtrack1' in file '../input.master' line 185 specifies mean name 'mean_seg0_subseg0_testtrack1' that does not exist</p>", "type": "rendered"}, "created_on": "2018-11-19T16:30:54.792501+00:00", "user": {"display_name": "Kate Cook", "uuid": "{36c88b70-42d6-4662-bde3-2316c4423895}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B36c88b70-42d6-4662-bde3-2316c4423895%7D"}, "html": {"href": "https://bitbucket.org/%7B36c88b70-42d6-4662-bde3-2316c4423895%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f46c0bafb4d227957572a7f47c9e2980d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKC-4.png"}}, "nickname": "katecook", "type": "user", "account_id": "557058:499caa63-3f6a-4f40-b404-8fc921427fc9"}, "updated_on": null, "type": "issue_comment", "id": 49012528}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/49015923.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-49015923"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "`simplebadinput`, as it name implies, is supposed to fail. All is normal. The test explicitly checks for a failure and returns success if it does (exit 0). \n\nIn terms of debugging job submission and drmaa, I have yet to go into depth for implementing and debugging on slurm. Here's the following script I've been using to test drmaa on cluster systems. It uses the first passed argument as the job to submit using DRMAA:\n\n```python\n#!/usr/bin/env python\nimport os\nimport sys\n\nimport drmaa\n\n\ndef main():\n    with drmaa.Session() as session:\n        print(\"DRMAA Session started successfully\")\n\n        print('Supported contact strings:', session.contact)\n        print('Supported DRM systems:', session.drmsInfo)\n        print('Supported DRMAA implementations:', session.drmaaImplementation)\n        print('Version', session.version)\n\n        job_template = session.createJobTemplate()\n        job_template.remoteCommand = os.path.join(\n            os.getcwd(),\n            sys.argv[1]\n        )\n\n        job_template.jobEnvironment = os.environ.copy()\n\n        # There is a better way to do this (probably using jobCategory\n        # instead), but this is the way segway does it\n        # TODO : Look up better specification\n        # job_template.nativeSpecification = \"-cwd -N \" + \\\n        # sys.argv[1]\n\n        print(\"Submitting job:\", sys.argv[1], job_template.nativeSpecification)\n        job_id = session.runJob(job_template)\n        print('Job has been submitted with ID %s' % job_id)\n\n        return_value = session.wait(job_id, drmaa.Session.TIMEOUT_WAIT_FOREVER)\n        print('Job: {0} finished with status {1}'.format(\n            return_value.jobId,\n            return_value.hasExited)\n        )\n\n        session.deleteJobTemplate(job_template)\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nAs you can see there are some odd things I still need to add in terms of sensible native slurm specifications for Segway. This script should at least give you some insight into why Segway is not submitting jobs on your behalf.\n\nIn the worst case, Segway itself can be [submitted as a job and run \"locally\"](https://segway.readthedocs.io/en/latest/segway.html#standalone-configuration) (as it is doing right now) and ideally with the number of cores you've reserved with `SEGWAY_NUM_LOCAL_JOBS`", "markup": "markdown", "html": "<p><code>simplebadinput</code>, as it name implies, is supposed to fail. All is normal. The test explicitly checks for a failure and returns success if it does (exit 0). </p>\n<p>In terms of debugging job submission and drmaa, I have yet to go into depth for implementing and debugging on slurm. Here's the following script I've been using to test drmaa on cluster systems. It uses the first passed argument as the job to submit using DRMAA:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">drmaa</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">drmaa</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;DRMAA Session started successfully&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported contact strings:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">contact</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported DRM systems:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">drmsInfo</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Supported DRMAA implementations:&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">drmaaImplementation</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Version&#39;</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n\n        <span class=\"n\">job_template</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">createJobTemplate</span><span class=\"p\">()</span>\n        <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">remoteCommand</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">jobEnvironment</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># There is a better way to do this (probably using jobCategory</span>\n        <span class=\"c1\"># instead), but this is the way segway does it</span>\n        <span class=\"c1\"># TODO : Look up better specification</span>\n        <span class=\"c1\"># job_template.nativeSpecification = &quot;-cwd -N &quot; + \\</span>\n        <span class=\"c1\"># sys.argv[1]</span>\n\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Submitting job:&quot;</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">job_template</span><span class=\"o\">.</span><span class=\"n\">nativeSpecification</span><span class=\"p\">)</span>\n        <span class=\"n\">job_id</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">runJob</span><span class=\"p\">(</span><span class=\"n\">job_template</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Job has been submitted with ID </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">job_id</span><span class=\"p\">)</span>\n\n        <span class=\"n\">return_value</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"n\">job_id</span><span class=\"p\">,</span> <span class=\"n\">drmaa</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"o\">.</span><span class=\"n\">TIMEOUT_WAIT_FOREVER</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Job: {0} finished with status {1}&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">return_value</span><span class=\"o\">.</span><span class=\"n\">jobId</span><span class=\"p\">,</span>\n            <span class=\"n\">return_value</span><span class=\"o\">.</span><span class=\"n\">hasExited</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">deleteJobTemplate</span><span class=\"p\">(</span><span class=\"n\">job_template</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>As you can see there are some odd things I still need to add in terms of sensible native slurm specifications for Segway. This script should at least give you some insight into why Segway is not submitting jobs on your behalf.</p>\n<p>In the worst case, Segway itself can be <a data-is-external-link=\"true\" href=\"https://segway.readthedocs.io/en/latest/segway.html#standalone-configuration\" rel=\"nofollow\">submitted as a job and run \"locally\"</a> (as it is doing right now) and ideally with the number of cores you've reserved with <code>SEGWAY_NUM_LOCAL_JOBS</code></p>", "type": "rendered"}, "created_on": "2018-11-19T20:04:07.401100+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 49015923}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4/comments/53743579.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/4#comment-53743579"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/4.json"}}, "type": "issue", "id": 4, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Add Slurm cluster system"}, "content": {"raw": "Fixed in Pull Request #95", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/hoffmanlab/segway/pull-requests/95/add-support-for-slurm-1808\" rel=\"nofollow\" class=\"ap-connect-link\">Pull Request #95</a></p>", "type": "rendered"}, "created_on": "2019-09-04T12:50:00.171281+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 53743579}], "page": 1, "size": 11}