{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/37719650.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-37719650"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "GMTK-side clarification from Prof Bilmes:\n\n\"Just to clarify, the behavior that GMTK is doing (removing the component) is the only sensible thing to do. In some cases, when you set up a fixed number of components in a Gaussian mixture HMM-based system, the data will not support there being as many components as you initially set up. The EM algorithm works by computing p(q_t=i|x_t) where t is a time variable and i is the index of a component. If the data is such that p(q_t=i|x_t) = 0 for all t and for some i, then there is nothing that the component can learn from, which indicates the component should be removed. When this happens, GMTK removes that component, but the parameter files have to be set up so that it can take advantage of this ability. Right now, as Max mentioned below, Segway was not using the parameter in a way that it would know that the the component was removed. Also the GMTK verbosity was turned to zero (default is about 10, and that figure is set so that only the warning messages you should be aware of are shown), so the warning messages that normally get generated were not being seen. \n\nI should also mention that GMTK also has the inverse capability, i.e., when the data supports there being more components in a mixture than there currently are, then it will split some of the components. In the past, the best number of components per state has been decided via a series of splits and removals done during the EM training process (all of which GMTK supports). If at some point you'd like to adjust segway to use this, let me know, as it is likely it would work better (not to mention avoid numerical problems). \"", "markup": "markdown", "html": "<p>GMTK-side clarification from Prof Bilmes:</p>\n<p>\"Just to clarify, the behavior that GMTK is doing (removing the component) is the only sensible thing to do. In some cases, when you set up a fixed number of components in a Gaussian mixture HMM-based system, the data will not support there being as many components as you initially set up. The EM algorithm works by computing p(q_t=i|x_t) where t is a time variable and i is the index of a component. If the data is such that p(q_t=i|x_t) = 0 for all t and for some i, then there is nothing that the component can learn from, which indicates the component should be removed. When this happens, GMTK removes that component, but the parameter files have to be set up so that it can take advantage of this ability. Right now, as Max mentioned below, Segway was not using the parameter in a way that it would know that the the component was removed. Also the GMTK verbosity was turned to zero (default is about 10, and that figure is set so that only the warning messages you should be aware of are shown), so the warning messages that normally get generated were not being seen. </p>\n<p>I should also mention that GMTK also has the inverse capability, i.e., when the data supports there being more components in a mixture than there currently are, then it will split some of the components. In the past, the best number of components per state has been decided via a series of splits and removals done during the EM training process (all of which GMTK supports). If at some point you'd like to adjust segway to use this, let me know, as it is likely it would work better (not to mention avoid numerical problems). \"</p>", "type": "rendered"}, "created_on": "2017-06-20T14:30:18.578430+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": null, "type": "issue_comment", "id": 37719650}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/37936809.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-37936809"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "As per segway-internal, the changes to the input.master should be as follows:\n\n\n```\n#!C\n\n#ifndef INPUT_PARAMS_FILENAME\nDENSE_CPT_IN_FILE inline\n<initial parameter values>\nMEAN_IN_FILE inline\n<initial parameter values>\nCOVAR_IN_FILE inline\n<initial parameter values>\nDPMF_IN_FILE inline\n<initial parameter values>\n#else\nDENSE_CPT_IN_FILE INPUT_PARAMS_FILENAME ascii\nMEAN_IN_FILE INPUT_PARAMS_FILENAME ascii\nCOVAR_IN_FILE INPUT_PARAMS_FILENAME ascii\nDPMF_IN_FILE INPUT_PARAMS_FILENAME ascii\n#endif\n```\n\n(possibly with similar changes reflected to the MX/MC components as well)\n\nNotably, the DPMF_IN_FILE lines are moved inside the ifndef.\n\nNo changes need to be made to the params files(?), as those are GMTK generated.", "markup": "markdown", "html": "<p>As per segway-internal, the changes to the input.master should be as follows:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"cp\">#ifndef INPUT_PARAMS_FILENAME</span>\n<span class=\"n\">DENSE_CPT_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"n\">MEAN_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"n\">COVAR_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"n\">DPMF_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"cp\">#else</span>\n<span class=\"n\">DENSE_CPT_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"n\">MEAN_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"n\">COVAR_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"n\">DPMF_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"cp\">#endif</span>\n</pre></div>\n\n\n<p>(possibly with similar changes reflected to the MX/MC components as well)</p>\n<p>Notably, the DPMF_IN_FILE lines are moved inside the ifndef.</p>\n<p>No changes need to be made to the params files(?), as those are GMTK generated.</p>", "type": "rendered"}, "created_on": "2017-06-29T20:41:31.125906+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": null, "type": "issue_comment", "id": 37936809}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/37936812.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-37936812"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "**Note**: we have been unable to reproduce this using multiple test cases and so we are tabling the issue for now until it is confirmed that this issue exists in Segway 2.0.\n\nTest cases attempted included multiple variations of simpleseg, as well as using Gaussian generated data (eg fitting 5, 10, 15, 20, and 100 Gaussian components to a single Gaussian). Unfortunately, none seemed able to drop below a PM of 9e-03.", "markup": "markdown", "html": "<p><strong>Note</strong>: we have been unable to reproduce this using multiple test cases and so we are tabling the issue for now until it is confirmed that this issue exists in Segway 2.0.</p>\n<p>Test cases attempted included multiple variations of simpleseg, as well as using Gaussian generated data (eg fitting 5, 10, 15, 20, and 100 Gaussian components to a single Gaussian). Unfortunately, none seemed able to drop below a PM of 9e-03.</p>", "type": "rendered"}, "created_on": "2017-06-29T20:41:58.796631+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": "2017-06-29T20:42:28.753022+00:00", "type": "issue_comment", "id": 37936812}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/38019647.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-38019647"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-07-04T16:25:58.073847+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 38019647}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/38020509.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-38020509"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "On hold until a test case can be provided.", "markup": "markdown", "html": "<p>On hold until a test case can be provided.</p>", "type": "rendered"}, "created_on": "2017-07-04T17:33:21.357113+00:00", "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "updated_on": null, "type": "issue_comment", "id": 38020509}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/50831009.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-50831009"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "There's a very slight chance it may be tangentially related to Issue #84. Since splitting and vanishing technically already occur only in select cases and would seem more likely to happen in supervision case.", "markup": "markdown", "html": "<p>There's a very slight chance it may be tangentially related to Issue <a href=\"#!/hoffmanlab/segway/issues/84/gmtk-gives-zero-clique-error-when\" rel=\"nofollow\" title=\"GMTK gives zero clique error when supervision labels are directly adjacent\" class=\"ap-connect-link\">#84</a>. Since splitting and vanishing technically already occur only in select cases and would seem more likely to happen in supervision case.</p>", "type": "rendered"}, "created_on": "2019-02-28T15:51:08.888981+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 50831009}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/50886200.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-50886200"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "@rcwchan This is fixed with Pull Request #79 correct?", "markup": "markdown", "html": "<p>@rcwchan This is fixed with <a href=\"#!/hoffmanlab/segway/pull-requests/79/handle-vanishing-splitting-gaussians\" rel=\"nofollow\" class=\"ap-connect-link\">Pull Request #79</a> correct?</p>", "type": "rendered"}, "created_on": "2019-03-04T17:17:18.668068+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 50886200}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments/50886438.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113#comment-50886438"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}}, "type": "issue", "id": 113, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass"}, "content": {"raw": "Resolved in Pull Request #79", "markup": "markdown", "html": "<p>Resolved in <a href=\"#!/hoffmanlab/segway/pull-requests/79/handle-vanishing-splitting-gaussians\" rel=\"nofollow\" class=\"ap-connect-link\">Pull Request #79</a></p>", "type": "rendered"}, "created_on": "2019-03-04T17:32:05.007094+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 50886438}], "page": 1, "size": 8}