{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128/comments/46519240.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/128#comment-46519240"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128.json"}}, "type": "issue", "id": 128, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Stale file handle error"}, "content": {"raw": "This is likely to have to do with configuration issues on the cluster and not anything to do with Segway's programming. Nor is there anything likely we can really do about this by changing Segway.", "markup": "markdown", "html": "<p>This is likely to have to do with configuration issues on the cluster and not anything to do with Segway's programming. Nor is there anything likely we can really do about this by changing Segway.</p>", "type": "rendered"}, "created_on": "2018-07-01T16:31:55.100766+00:00", "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "updated_on": null, "type": "issue_comment", "id": 46519240}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128/comments/46554247.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/128#comment-46554247"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128.json"}}, "type": "issue", "id": 128, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Stale file handle error"}, "content": {"raw": "I believe there may be a race condition here in the way observation files are managed in minibatch mode. Currently, observation filenames are not instance-specific. It seems possible, for example, that two instances could simultaneously be attempting to delete or open the same observation file for reading/writing.\n\n[Section A.10 of the NFS FAQ ](http://nfs.sourceforge.net/) also mentions ESTALE errors being reported when referring to items that may have been deleted. The `tofile` call is a convenience call for an open/write operation and I'd imagine it's possible for the file to have been deleted by another instance and stale by the time a write happens. I'd imagine this possibly could happen on a non-NFS filesystem but it seems far less likely (and far more likely on NFS filesystems).", "markup": "markdown", "html": "<p>I believe there may be a race condition here in the way observation files are managed in minibatch mode. Currently, observation filenames are not instance-specific. It seems possible, for example, that two instances could simultaneously be attempting to delete or open the same observation file for reading/writing.</p>\n<p><a data-is-external-link=\"true\" href=\"http://nfs.sourceforge.net/\" rel=\"nofollow\">Section A.10 of the NFS FAQ </a> also mentions ESTALE errors being reported when referring to items that may have been deleted. The <code>tofile</code> call is a convenience call for an open/write operation and I'd imagine it's possible for the file to have been deleted by another instance and stale by the time a write happens. I'd imagine this possibly could happen on a non-NFS filesystem but it seems far less likely (and far more likely on NFS filesystems).</p>", "type": "rendered"}, "created_on": "2018-07-03T13:00:05.890153+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 46554247}, {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128/comments/46635228.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/128#comment-46635228"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/128.json"}}, "type": "issue", "id": 128, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Stale file handle error"}, "content": {"raw": "1. Don't set `TMPDIR` to a networked file system. This will be documented as a requirement. Since we only run on Linux we could have segway-task spit out a warning if `stat --file-system --format=%T \"$TMPDIR\"` is `nfs`. But the user would only see that if they looked at the error files. Maybe it wouldn't be such a horrible idea for the console to print any errors that occur as it marks a job complete. This is all a bit complex though.\n2. Eric will introduce a fix to this problem even if that happens, by ensuring filenames are unique.", "markup": "markdown", "html": "<ol>\n<li>Don't set <code>TMPDIR</code> to a networked file system. This will be documented as a requirement. Since we only run on Linux we could have segway-task spit out a warning if <code>stat --file-system --format=%T \"$TMPDIR\"</code> is <code>nfs</code>. But the user would only see that if they looked at the error files. Maybe it wouldn't be such a horrible idea for the console to print any errors that occur as it marks a job complete. This is all a bit complex though.</li>\n<li>Eric will introduce a fix to this problem even if that happens, by ensuring filenames are unique.</li>\n</ol>", "type": "rendered"}, "created_on": "2018-07-07T19:58:58.214710+00:00", "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "updated_on": null, "type": "issue_comment", "id": 46635228}], "page": 1, "size": 3}