{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/55/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/55/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/55/bug-in-exit_status-from"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/55/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Bug in exit_status from get_job_info_exit_status", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently `get_job_info_exit_status` returns a number *or* a string. This currently causes a bug downstream specifically in the one corner case where it does return a string:\r\n\r\n```python\r\n    def get_job_info_exit_status(self, job_info):\r\n        if job_info.hasSignal:\r\n            res = job_info.terminatedSignal\r\n            # just in case this edge case ever happens\r\n            if res == 0:\r\n                return \"hasSignal\"\r\n\r\n            return res\r\n        elif job_info.wasAborted:\r\n            return \"wasAborted\"\r\n        elif job_info.hasExited:\r\n            return job_info.exitStatus\r\n\r\n        # this happens when the exit status is unknown\r\n        return \"noExit\"\r\n```\r\n\r\nin `process_job`:\r\n```python\r\n        if (exit_status == EX_TEMPFAIL or\r\n           exit_status % 128 == SIGKILL):\r\n            self.queue(restartable_job)\r\n```\r\n\r\nIf there is ever a `job_info.wasAborted` status, this code will crash as it tries to use the modulo operator on a string. The question becomes what to do in the case that `job_info.wasAborted` case? Specifically in the case where \"Returns true if the job ended before entering the running state.\" Is this sufficient to consider this case for out-of-memory issues and resubmit?\r\n\r\nThe DRMAA reference of interest for documentation is here:\r\nhttps://www.ogf.org/documents/GFD.130.pdf\r\n\r\nSpecifically on pages 14 and 15.\r\n\r\nIt is worth noting about hasSignal:\r\n\"A value of false MAY also indicate that although the job has terminated due to the receipt of a signal, the signal is not available, or that it is not known whether the job terminated due to the receipt of a signal.\". I'd wager that SIGKILL signals are not available to DRMAA (since they cannot be caught by the process that gets the signal in the first place).\r\n\r\n", "markup": "markdown", "html": "<p>Currently <code>get_job_info_exit_status</code> returns a number <em>or</em> a string. This currently causes a bug downstream specifically in the one corner case where it does return a string:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">get_job_info_exit_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">job_info</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">hasSignal</span><span class=\"p\">:</span>\n            <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">terminatedSignal</span>\n            <span class=\"c1\"># just in case this edge case ever happens</span>\n            <span class=\"k\">if</span> <span class=\"n\">res</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"s2\">&quot;hasSignal&quot;</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">res</span>\n        <span class=\"k\">elif</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">wasAborted</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;wasAborted&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">hasExited</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">job_info</span><span class=\"o\">.</span><span class=\"n\">exitStatus</span>\n\n        <span class=\"c1\"># this happens when the exit status is unknown</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;noExit&quot;</span>\n</pre></div>\n\n\n<p>in <code>process_job</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">exit_status</span> <span class=\"o\">==</span> <span class=\"n\">EX_TEMPFAIL</span> <span class=\"ow\">or</span>\n           <span class=\"n\">exit_status</span> <span class=\"o\">%</span> <span class=\"mi\">128</span> <span class=\"o\">==</span> <span class=\"n\">SIGKILL</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">(</span><span class=\"n\">restartable_job</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>If there is ever a <code>job_info.wasAborted</code> status, this code will crash as it tries to use the modulo operator on a string. The question becomes what to do in the case that <code>job_info.wasAborted</code> case? Specifically in the case where \"Returns true if the job ended before entering the running state.\" Is this sufficient to consider this case for out-of-memory issues and resubmit?</p>\n<p>The DRMAA reference of interest for documentation is here:\n<a href=\"https://www.ogf.org/documents/GFD.130.pdf\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.ogf.org/documents/GFD.130.pdf</a></p>\n<p>Specifically on pages 14 and 15.</p>\n<p>It is worth noting about hasSignal:\n\"A value of false MAY also indicate that although the job has terminated due to the receipt of a signal, the signal is not available, or that it is not known whether the job terminated due to the receipt of a signal.\". I'd wager that SIGKILL signals are not available to DRMAA (since they cannot be caught by the process that gets the signal in the first place).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "invalid", "version": null, "edited_on": null, "created_on": "2016-02-29T16:59:52.313360+00:00", "milestone": null, "updated_on": "2016-03-02T20:25:30.063976+00:00", "type": "issue", "id": 55}