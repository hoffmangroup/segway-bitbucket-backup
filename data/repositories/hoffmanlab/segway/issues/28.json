{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/28/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/28/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/28/parallelism-on-a-cluster-given-a-number-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/28/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Parallelism on a cluster given a number of cores", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On some cluster systems you can request or are explicitly instructed about the number of cores per node given to you.\r\n\r\nSegway currently submits jobs to a single core in serial that could be run in parallel using mulitple cores. This can mean using a node with multiple cores but only ever using a single core for the entire duration the node is in use.\r\n\r\nA simple change would be to try to group commands (e.g. see details.sh or jobs.sh from a segway run) that can be run in parallel to be submitted with an '&' for each possible core on a node. This would spawn a separate process on each core. Using up all cores until all jobs are completed for the next batch. Another (more efficient) option would to use gnu parallels if the software is available.", "markup": "markdown", "html": "<p>On some cluster systems you can request or are explicitly instructed about the number of cores per node given to you.</p>\n<p>Segway currently submits jobs to a single core in serial that could be run in parallel using mulitple cores. This can mean using a node with multiple cores but only ever using a single core for the entire duration the node is in use.</p>\n<p>A simple change would be to try to group commands (e.g. see details.sh or jobs.sh from a segway run) that can be run in parallel to be submitted with an '&amp;' for each possible core on a node. This would spawn a separate process on each core. Using up all cores until all jobs are completed for the next batch. Another (more efficient) option would to use gnu parallels if the software is available.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-03-24T15:15:09.900360+00:00", "milestone": null, "updated_on": "2015-03-24T15:15:09.900360+00:00", "type": "issue", "id": 28}