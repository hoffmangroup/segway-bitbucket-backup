{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/77/comments/29516907.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/77#comment-29516907"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/77.json"}}, "type": "issue", "id": 77, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "GMTK jobs report \"bad interpreter: Text file busy\""}, "content": {"raw": "Job script file creation:\n\n\n```\n#!python\n\n        with open(job_script_filename, \"w\") as job_script_file:\n            print >>job_script_file, \"#!/usr/bin/env bash\"\n            # this doesn't include use of segway-wrapper, which takes the\n            # memory usage as an argument, and may be run multiple times\n            self.log_cmdline(gmtk_cmdline, args, job_script_file)\n\n        # set permissions for script to run\n        chmod(job_script_filename, JOB_SCRIPT_FILE_PERMISSIONS)\n```\n\n\nWith the ```with``` statement, the file resource should be automatically closed properly. So current theories are that in the job script file creation, chmod is slow and/or non-atomic. Possible alternatives include creating the file as presented in [this example](http://stackoverflow.com/a/5624691)?\n\nI am currently still unable to reproduce this, but will keep trying.", "markup": "markdown", "html": "<p>Job script file creation:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">job_script_filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">job_script_file</span><span class=\"p\">:</span>\n            <span class=\"k\">print</span> <span class=\"o\">&gt;&gt;</span><span class=\"n\">job_script_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;#!/usr/bin/env bash&quot;</span>\n            <span class=\"c1\"># this doesn&#39;t include use of segway-wrapper, which takes the</span>\n            <span class=\"c1\"># memory usage as an argument, and may be run multiple times</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_cmdline</span><span class=\"p\">(</span><span class=\"n\">gmtk_cmdline</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">job_script_file</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># set permissions for script to run</span>\n        <span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">job_script_filename</span><span class=\"p\">,</span> <span class=\"n\">JOB_SCRIPT_FILE_PERMISSIONS</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>With the <code>with</code> statement, the file resource should be automatically closed properly. So current theories are that in the job script file creation, chmod is slow and/or non-atomic. Possible alternatives include creating the file as presented in <a data-is-external-link=\"true\" href=\"http://stackoverflow.com/a/5624691\" rel=\"nofollow\">this example</a>?</p>\n<p>I am currently still unable to reproduce this, but will keep trying.</p>", "type": "rendered"}, "created_on": "2016-07-28T21:33:15.692145+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": "2016-07-29T13:35:45.208152+00:00", "type": "issue_comment", "id": 29516907}