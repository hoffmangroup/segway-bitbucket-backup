{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/88/comments/31504510.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/88#comment-31504510"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/88.json"}}, "type": "issue", "id": 88, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "seg_subseg objects should not be used when hierarchical segmentation is not enabled"}, "content": {"raw": "Currently the relevant code is in input_master.py.\n\nIn particular, ```make_dense_cpt_seg_subseg_spec``` and ```make_dense_cpt_seg_subseg_subseg_spec```.\n\nDue to the way the DenseCPTParamSpec is generated, it is significantly easier to remove them from the input.master files by, for example:\n\n```\n#!python\n\n\n438     def generate_objects(self):\n439         yield self.make_dense_cpt_start_seg_spec()\n440         if self.num_subsegs > 1:\n441             yield self.make_dense_cpt_seg_subseg_spec()\n442         yield self.make_dense_cpt_seg_seg_spec()\n443         if self.num_subsegs > 1:\n444             yield self.make_dense_cpt_seg_subseg_subseg_spec()\n445         yield self.make_dense_cpt_segCountDown_seg_segTransition_spec()\n\n```\n\nthan by inserting an ifdef/endif into the param spec (as that will require some refactoring).\n\n@ericr86 , what would you recommend?", "markup": "markdown", "html": "<p>Currently the relevant code is in input_master.py.</p>\n<p>In particular, <code>make_dense_cpt_seg_subseg_spec</code> and <code>make_dense_cpt_seg_subseg_subseg_spec</code>.</p>\n<p>Due to the way the DenseCPTParamSpec is generated, it is significantly easier to remove them from the input.master files by, for example:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">438</span>     <span class=\"k\">def</span> <span class=\"nf\">generate_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"mi\">439</span>         <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_dense_cpt_start_seg_spec</span><span class=\"p\">()</span>\n<span class=\"mi\">440</span>         <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_subsegs</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"mi\">441</span>             <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_dense_cpt_seg_subseg_spec</span><span class=\"p\">()</span>\n<span class=\"mi\">442</span>         <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_dense_cpt_seg_seg_spec</span><span class=\"p\">()</span>\n<span class=\"mi\">443</span>         <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_subsegs</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"mi\">444</span>             <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_dense_cpt_seg_subseg_subseg_spec</span><span class=\"p\">()</span>\n<span class=\"mi\">445</span>         <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_dense_cpt_segCountDown_seg_segTransition_spec</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>than by inserting an ifdef/endif into the param spec (as that will require some refactoring).</p>\n<p>@ericr86 , what would you recommend?</p>", "type": "rendered"}, "created_on": "2016-10-19T19:10:43.323400+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": null, "type": "issue_comment", "id": 31504510}