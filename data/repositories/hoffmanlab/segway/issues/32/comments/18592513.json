{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/32/comments/18592513.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/32#comment-18592513"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/32.json"}}, "type": "issue", "id": 32, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Error: `traindir/likelihood/likelihood.0.ll` and `traindir/likelihood/likelihood.0.ll` are the same file"}, "content": {"raw": "```'traindir/likelihood/likelihood.0.ll'``` Indeed seems like the final resulting likelihood file requested by the segway.\n\nFrom the error log we could see that ```dst_filename``` traced back to the ```copy_results``` method called in ```proc_train_result```, where the ```dst_filename``` came from the third item of the list ```dst_filenames``` in the parameter of method, which again come from  the method ```run_train``` where it create dst_filenames using ```self.setup_train``` where this function shows me that the third item of the list ```dst_filenames``` is ```self.log_likelihood_filename```\n\nThere is only one place where ```self.log_likelihood_filename``` can be assigned to any non-null values by searching through the entire run.py, which is at line 1300:\n\n```\n#!python\n    def set_log_likelihood_filenames(self, instance_index=0, new=False):\n        if new or not self.log_likelihood_filename:\n            log_likelihood_filename = \\\n                self.make_filename(PREFIX_LIKELIHOOD, instance_index,\n                                   EXT_LIKELIHOOD,\n                                   subdirname=SUBDIRNAME_LIKELIHOOD)\n\n            self.log_likelihood_filename = log_likelihood_filename\n\n            self.log_likelihood_tab_filename = \\\n                self.make_log_likelihood_tab_filename(instance_index,\n                                                      self.work_dirname)\n```\nThis means that the final likelihood file segway is intended to write is going to have a filename in ```PREFIX_LIKELIHOOD.instance_index.EXT_LIKELIHOOD``` format. Thus I don't need to change the destination file name of the final likelihood in the copy. I could just add a if statement to ignore copy statement if the 0 instance is the winning method and nocopy is needed.\n", "markup": "markdown", "html": "<p><code>'traindir/likelihood/likelihood.0.ll'</code> Indeed seems like the final resulting likelihood file requested by the segway.</p>\n<p>From the error log we could see that <code>dst_filename</code> traced back to the <code>copy_results</code> method called in <code>proc_train_result</code>, where the <code>dst_filename</code> came from the third item of the list <code>dst_filenames</code> in the parameter of method, which again come from  the method <code>run_train</code> where it create dst_filenames using <code>self.setup_train</code> where this function shows me that the third item of the list <code>dst_filenames</code> is <code>self.log_likelihood_filename</code></p>\n<p>There is only one place where <code>self.log_likelihood_filename</code> can be assigned to any non-null values by searching through the entire run.py, which is at line 1300:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">set_log_likelihood_filenames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">new</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_likelihood_filename</span><span class=\"p\">:</span>\n            <span class=\"n\">log_likelihood_filename</span> <span class=\"o\">=</span> \\\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_filename</span><span class=\"p\">(</span><span class=\"n\">PREFIX_LIKELIHOOD</span><span class=\"p\">,</span> <span class=\"n\">instance_index</span><span class=\"p\">,</span>\n                                   <span class=\"n\">EXT_LIKELIHOOD</span><span class=\"p\">,</span>\n                                   <span class=\"n\">subdirname</span><span class=\"o\">=</span><span class=\"n\">SUBDIRNAME_LIKELIHOOD</span><span class=\"p\">)</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_likelihood_filename</span> <span class=\"o\">=</span> <span class=\"n\">log_likelihood_filename</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_likelihood_tab_filename</span> <span class=\"o\">=</span> \\\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_log_likelihood_tab_filename</span><span class=\"p\">(</span><span class=\"n\">instance_index</span><span class=\"p\">,</span>\n                                                      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">work_dirname</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This means that the final likelihood file segway is intended to write is going to have a filename in <code>PREFIX_LIKELIHOOD.instance_index.EXT_LIKELIHOOD</code> format. Thus I don't need to change the destination file name of the final likelihood in the copy. I could just add a if statement to ignore copy statement if the 0 instance is the winning method and nocopy is needed.</p>", "type": "rendered"}, "created_on": "2015-06-04T14:40:06.922842+00:00", "user": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "updated_on": "2015-06-04T14:40:49.083272+00:00", "type": "issue_comment", "id": 18592513}