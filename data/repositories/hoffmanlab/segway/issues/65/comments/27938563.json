{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/65/comments/27938563.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/65#comment-27938563"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/65.json"}}, "type": "issue", "id": 65, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "No active DRMAA session in segway"}, "content": {"raw": "My current theory about this error is from `run_train_multithread`:\n\n\n```\n#!python\n\n        with Session() as session:\n            try:\n                for instance_index, instance_features in enumerator:\n            ...\n                    thread = TrainThread(self, session, instance_index,\n                                         num_seg)\n                    thread.start()\n                    threads.append(thread)\n            ...\n\n            except KeyboardInterrupt:\n                ... \n                for thread in threads:\n                    thread.join()\n\n                raise\n\n```\n\nIt would seem that due to an error in one of the instances/threads where it couldn't find a file an exception was not caught. This would exit the context manager and essentially nullify the shared session object and not perform the graceful joining of the remaining threads.\n\nIs there a reason why each thread doesn't contain it's own session object? Unsafe perhaps?\n\nIt looks like the error is caused by a failed recover when trying to open a file that doesn't exist.\n", "markup": "markdown", "html": "<p>My current theory about this error is from <code>run_train_multithread</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">with</span> <span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">instance_index</span><span class=\"p\">,</span> <span class=\"n\">instance_features</span> <span class=\"ow\">in</span> <span class=\"n\">enumerator</span><span class=\"p\">:</span>\n            <span class=\"o\">...</span>\n                    <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">TrainThread</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">instance_index</span><span class=\"p\">,</span>\n                                         <span class=\"n\">num_seg</span><span class=\"p\">)</span>\n                    <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n                    <span class=\"n\">threads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"p\">)</span>\n            <span class=\"o\">...</span>\n\n            <span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n                <span class=\"o\">...</span> \n                <span class=\"k\">for</span> <span class=\"n\">thread</span> <span class=\"ow\">in</span> <span class=\"n\">threads</span><span class=\"p\">:</span>\n                    <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n\n                <span class=\"k\">raise</span>\n</pre></div>\n\n\n<p>It would seem that due to an error in one of the instances/threads where it couldn't find a file an exception was not caught. This would exit the context manager and essentially nullify the shared session object and not perform the graceful joining of the remaining threads.</p>\n<p>Is there a reason why each thread doesn't contain it's own session object? Unsafe perhaps?</p>\n<p>It looks like the error is caused by a failed recover when trying to open a file that doesn't exist.</p>", "type": "rendered"}, "created_on": "2016-05-20T15:28:11.437574+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2016-05-20T16:15:31.397884+00:00", "type": "issue_comment", "id": 27938563}