{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/29/comments/22315411.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/29#comment-22315411"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "title": "Better error reporting on running out of memory with GMTK vs other problems"}, "content": {"raw": "There's a -verbose module that will report on memory usage, but I don't think it currently checks for failures due to memory exhaustion.\n\nIt looks like it uses a mixture of new (which throws an exception on memory exhaustion) and malloc (which returns NULL on memory exhaustion). Disturbingly, it looks like many of the malloc return values are not checked, so GMTK's behaviour will likely be a random crash if they fail.\n\nMost of the mallocs should be easy to handle, though there's at least one in some code generated by Flex that I will have to take a closer look at.  The news might be a more complicated story -- it would be easy to put a try/catch around each GMTK program's main, but Jeff will probably want me to benchmark the performance impact of that. Which will probably vary from compiler to compiler...  Switching them all to nothrow news & adding explicit NULL checks might be an option too.", "markup": "markdown", "html": "<p>There's a -verbose module that will report on memory usage, but I don't think it currently checks for failures due to memory exhaustion.</p>\n<p>It looks like it uses a mixture of new (which throws an exception on memory exhaustion) and malloc (which returns NULL on memory exhaustion). Disturbingly, it looks like many of the malloc return values are not checked, so GMTK's behaviour will likely be a random crash if they fail.</p>\n<p>Most of the mallocs should be easy to handle, though there's at least one in some code generated by Flex that I will have to take a closer look at.  The news might be a more complicated story -- it would be easy to put a try/catch around each GMTK program's main, but Jeff will probably want me to benchmark the performance impact of that. Which will probably vary from compiler to compiler...  Switching them all to nothrow news &amp; adding explicit NULL checks might be an option too.</p>", "type": "rendered"}, "created_on": "2015-10-07T20:44:49.350789+00:00", "user": {"display_name": "Richard Rogers", "uuid": "{f49a2a7a-176f-4bb4-9da1-4e93c38335ee}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf49a2a7a-176f-4bb4-9da1-4e93c38335ee%7D"}, "html": {"href": "https://bitbucket.org/%7Bf49a2a7a-176f-4bb4-9da1-4e93c38335ee%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0a499296f5ff06546c64c8c0337d6e86d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRR-5.png"}}, "nickname": "rprogers", "type": "user", "account_id": "557058:830a6f0e-2003-4cc8-ab0d-19b00ab2b580"}, "updated_on": null, "type": "issue_comment", "id": 22315411}