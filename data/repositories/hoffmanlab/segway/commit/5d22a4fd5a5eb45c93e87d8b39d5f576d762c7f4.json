{"rendered": {"message": {"raw": "* run.py (Runner.make_viterbi_filenames): new name for Runner._make_viterbi_filenames\n(Runner): some function reordering\n(Runner.queue_identify): new name for Runner._queue_identify\n(Runner.run_identify_posterior):\n\n* output.py (IdentifySaver.get_world_indexes): new function\n(IdentifySaver.concatenate): only concatenate one world at a time", "markup": "markdown", "html": "<ul>\n<li>\n<p>run.py (Runner.make_viterbi_filenames): new name for Runner._make_viterbi_filenames<br />\n(Runner): some function reordering<br />\n(Runner.queue_identify): new name for Runner._queue_identify<br />\n(Runner.run_identify_posterior):</p>\n</li>\n<li>\n<p>output.py (IdentifySaver.get_world_indexes): new function<br />\n(IdentifySaver.concatenate): only concatenate one world at a time</p>\n</li>\n</ul>", "type": "rendered"}}, "hash": "5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/commit/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/patch/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4"}, "html": {"href": "#!/hoffmanlab/segway/commits/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/commit/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/commit/5d22a4fd5a5eb45c93e87d8b39d5f576d762c7f4/statuses_page=1.json"}}, "author": {"raw": "mmh1", "type": "author", "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}, "summary": {"raw": "* run.py (Runner.make_viterbi_filenames): new name for Runner._make_viterbi_filenames\n(Runner): some function reordering\n(Runner.queue_identify): new name for Runner._queue_identify\n(Runner.run_identify_posterior):\n\n* output.py (IdentifySaver.get_world_indexes): new function\n(IdentifySaver.concatenate): only concatenate one world at a time", "markup": "markdown", "html": "<ul>\n<li>\n<p>run.py (Runner.make_viterbi_filenames): new name for Runner._make_viterbi_filenames<br />\n(Runner): some function reordering<br />\n(Runner.queue_identify): new name for Runner._queue_identify<br />\n(Runner.run_identify_posterior):</p>\n</li>\n<li>\n<p>output.py (IdentifySaver.get_world_indexes): new function<br />\n(IdentifySaver.concatenate): only concatenate one world at a time</p>\n</li>\n</ul>", "type": "rendered"}, "participants": [], "parents": [{"hash": "dd4c335582063334116e2df09854d7091819cf00", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/dd4c335582063334116e2df09854d7091819cf00.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/dd4c335582063334116e2df09854d7091819cf00"}}}], "date": "2012-03-20T21:19:56+00:00", "message": "* run.py (Runner.make_viterbi_filenames): new name for Runner._make_viterbi_filenames\n(Runner): some function reordering\n(Runner.queue_identify): new name for Runner._queue_identify\n(Runner.run_identify_posterior):\n\n* output.py (IdentifySaver.get_world_indexes): new function\n(IdentifySaver.concatenate): only concatenate one world at a time", "type": "commit", "git_hash": "6b20dba363829637d2db8e00f40e57e762f43d41", "tags": null, "branches": "trunk"}