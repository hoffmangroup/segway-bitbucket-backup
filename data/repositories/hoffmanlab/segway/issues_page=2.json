{"pagelen": 100, "previous": "data/repositories/hoffmanlab/segway/issues_page=1.json", "values": [{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/101/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/101.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/101/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/101/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/101/tags-on-bitbucket-pipelines-should"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/101/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Tags on bitbucket pipelines should automatically perform a release", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be ideal if Pipelines was configured so tagged changesets triggered a release as automatically as possible", "markup": "markdown", "html": "<p>It would be ideal if Pipelines was configured so tagged changesets triggered a release as automatically as possible</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-01-30T20:45:02.916459+00:00", "milestone": null, "updated_on": "2017-02-07T15:01:08.840980+00:00", "type": "issue", "id": 101}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/102/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/102.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/102/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/102/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/102/testing-should-be-seperated-between-segway"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/102/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Testing should be seperated between segway-task and segway as a dry run", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is a benefit between testing segway-task dry runs of Segway (without running the task itself). Tests would be significantly lighter weight and would allow unit testing on individual code bases if necessary. Faster and smaller tests would make adding future tests, functionality, or making changes a lot easier to manage and verify that everything works as intended.\r\n\r\nIt might be best to also keep a test like the current \"data\" test as-is for a full run.", "markup": "markdown", "html": "<p>There is a benefit between testing segway-task dry runs of Segway (without running the task itself). Tests would be significantly lighter weight and would allow unit testing on individual code bases if necessary. Faster and smaller tests would make adding future tests, functionality, or making changes a lot easier to manage and verify that everything works as intended.</p>\n<p>It might be best to also keep a test like the current \"data\" test as-is for a full run.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-02T15:28:10.619408+00:00", "milestone": null, "updated_on": "2017-03-02T15:28:10.619408+00:00", "type": "issue", "id": 102}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/103/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/103.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/103/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/103/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/103/error-for-training"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/103/vote"}}, "reporter": null, "title": "Error for training", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hi,\r\nI've got an error message like the following when running segway training. I wonder how I can fix this. Thanks!\r\n\r\nError: reading diagonal covariance matrix 'covar_t1' (from file '/Users/zhichengji/Dropbox/dynamo/segway/train/params/input.master' line 192), but covariance[0] = (0.000000e+00) < current Floor = (1.000000e-10)", "markup": "markdown", "html": "<p>Hi,\nI've got an error message like the following when running segway training. I wonder how I can fix this. Thanks!</p>\n<p>Error: reading diagonal covariance matrix 'covar_t1' (from file '/Users/zhichengji/Dropbox/dynamo/segway/train/params/input.master' line 192), but covariance[0] = (0.<a href=\"#!/hoffmanlab/segway/commits/000000e\" rel=\"nofollow\" class=\"ap-connect-link\">000000e</a>+00) &lt; current Floor = (1.<a href=\"#!/hoffmanlab/segway/commits/000000e\" rel=\"nofollow\" class=\"ap-connect-link\">000000e</a>-10)</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-03-04T14:45:14.292036+00:00", "milestone": null, "updated_on": "2017-03-08T16:23:59.585820+00:00", "type": "issue", "id": 103}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/104/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/104.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/104/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/104/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/104/segway-gmtk-errors-out-when-a-track"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/104/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway/GMTK errors out when a track contains all equal values", "component": null, "votes": 0, "watches": 1, "content": {"raw": "GMTK reports an error of zero-variance as mentioned in Issue #103. For instance this can happen if one of the observation tracks is accidentally completely set to zero for all values.\r\n\r\nIt might be worth considering checking for this error earlier on, printing out a warning, or simply having a variance floor based on some other transformation such as a z-score (see PR #69).", "markup": "markdown", "html": "<p>GMTK reports an error of zero-variance as mentioned in Issue <a href=\"#!/hoffmanlab/segway/issues/103/error-for-training\" rel=\"nofollow\" title=\"Error for training\" class=\"ap-connect-link\"><s>#103</s></a>. For instance this can happen if one of the observation tracks is accidentally completely set to zero for all values.</p>\n<p>It might be worth considering checking for this error earlier on, printing out a warning, or simply having a variance floor based on some other transformation such as a z-score (see <a href=\"#!/hoffmanlab/segway/pull-requests/69/using-zscore-to-normalise-datatracks\" rel=\"nofollow\" class=\"ap-connect-link\">PR #69</a>).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-08T16:23:30.601693+00:00", "milestone": null, "updated_on": "2017-03-08T16:23:30.601693+00:00", "type": "issue", "id": 104}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/105/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/105.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/105/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/105/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/105/add-no-version-check-to-segway-options"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/105/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Add --no-version-check to Segway options", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be useful if Segway automatically detected out-of-date versions of Segway and suggested upgrades if possible (like pip does for example). Adding a --no-version-check would force this check to not happen.", "markup": "markdown", "html": "<p>It would be useful if Segway automatically detected out-of-date versions of Segway and suggested upgrades if possible (like pip does for example). Adding a --no-version-check would force this check to not happen.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-08T16:27:05.595320+00:00", "milestone": null, "updated_on": "2017-03-08T16:27:05.595320+00:00", "type": "issue", "id": 105}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/106/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/106.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/106/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/106/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/106/segway-should-output-a-better-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/106/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should output a better error message for empty tracks", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently if you attempt to use an empty track in Segway you get the following output:\r\n\r\n```shell\r\n/mnt/work1/users/home2/eric.roberts/segway/segway/structure.py:109: RuntimeWarning: invalid value encountered in long_scalars\r\n  / num_datapoints_track, MAX_WEIGHT_SCALE)\r\nParse Error in file 'outputs/DOHH2_bl_umap_10L_10R_traindir/segway.str': expecting integer or floating-point value at or before line 44, near (nan)\r\nExiting Program\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/eric.roberts/.local/bin/segway\", line 11, in <module>\r\n    load_entry_point('segway', 'console_scripts', 'segway')()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 3131, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2923, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2884, in run\r\n    self.run_triangulate()\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2188, in run_triangulate\r\n    self.run_triangulate_single(num_segs)\r\n  File \"/mnt/work1/users/home2/eric.roberts/segway/segway/run.py\", line 2184, in run_triangulate_single\r\n    prog(**kwargs)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 81, in __call__\r\n    return self.run(*args, **kwargs)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 212, in run\r\n    self._getoutput(args, kwargs)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 194, in _getoutput\r\n    stdin, stdout, stderr, cwd)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 157, in _popen\r\n    _returncode_error_factory(cmdline, returncode, output, error)\r\n  File \"/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py\", line 57, in _returncode_error_factory\r\n    raise error_cls, (cmdline, returncode, output, error)\r\noptbuild.ReturncodeError: /mnt/work1/users/home2/eric.roberts/arch/Linux-x86_64/opt/gmtk-1.4.3/bin/gmtkTriangulate returned 1\r\n```\r\n\r\nSomehow the RuntimeError does not stop Segway from running and Segway attempt to continue to run until gmtkTraingulate fails since the segway.str is filled with 'nan' entries.\r\n\r\nOn closer inspection this might be a better error caught in genomedata to avoid issues when something like the \"means\" attribute is used on a genomedata archive. Empty tracks will also raise a RuntimeError (division by zero length).", "markup": "markdown", "html": "<p>Currently if you attempt to use an empty track in Segway you get the following output:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>/mnt/work1/users/home2/eric.roberts/segway/segway/structure.py:109: RuntimeWarning: invalid value encountered in long_scalars\n  / num_datapoints_track, MAX_WEIGHT_SCALE<span class=\"o\">)</span>\nParse Error in file <span class=\"s1\">&#39;outputs/DOHH2_bl_umap_10L_10R_traindir/segway.str&#39;</span>: expecting integer or floating-point value at or before line <span class=\"m\">44</span>, near <span class=\"o\">(</span>nan<span class=\"o\">)</span>\nExiting Program\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/.local/bin/segway&quot;</span>, line <span class=\"m\">11</span>, in &lt;module&gt;\n    load_entry_point<span class=\"o\">(</span><span class=\"s1\">&#39;segway&#39;</span>, <span class=\"s1\">&#39;console_scripts&#39;</span>, <span class=\"s1\">&#39;segway&#39;</span><span class=\"o\">)()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">3131</span>, in main\n    <span class=\"k\">return</span> runner<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2923</span>, in __call__\n    self.run<span class=\"o\">(</span>*args, **kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2884</span>, in run\n    self.run_triangulate<span class=\"o\">()</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2188</span>, in run_triangulate\n    self.run_triangulate_single<span class=\"o\">(</span>num_segs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/users/home2/eric.roberts/segway/segway/run.py&quot;</span>, line <span class=\"m\">2184</span>, in run_triangulate_single\n    prog<span class=\"o\">(</span>**kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">81</span>, in __call__\n    <span class=\"k\">return</span> self.run<span class=\"o\">(</span>*args, **kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">212</span>, in run\n    self._getoutput<span class=\"o\">(</span>args, kwargs<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">194</span>, in _getoutput\n    stdin, stdout, stderr, cwd<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">157</span>, in _popen\n    _returncode_error_factory<span class=\"o\">(</span>cmdline, returncode, output, error<span class=\"o\">)</span>\n  File <span class=\"s2\">&quot;/mnt/work1/software/python/2.7/lib/python2.7/site-packages/optbuild.py&quot;</span>, line <span class=\"m\">57</span>, in _returncode_error_factory\n    raise error_cls, <span class=\"o\">(</span>cmdline, returncode, output, error<span class=\"o\">)</span>\noptbuild.ReturncodeError: /mnt/work1/users/home2/eric.roberts/arch/Linux-x86_64/opt/gmtk-1.4.3/bin/gmtkTriangulate returned <span class=\"m\">1</span>\n</pre></div>\n\n\n<p>Somehow the RuntimeError does not stop Segway from running and Segway attempt to continue to run until gmtkTraingulate fails since the segway.str is filled with 'nan' entries.</p>\n<p>On closer inspection this might be a better error caught in genomedata to avoid issues when something like the \"means\" attribute is used on a genomedata archive. Empty tracks will also raise a RuntimeError (division by zero length).</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-24T16:17:25.292230+00:00", "milestone": null, "updated_on": "2017-03-27T18:38:27.176888+00:00", "type": "issue", "id": 106}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/107/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/107.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/107/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/107/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/107/refactor-out-repetition-between"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/107/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Refactor out repetition between generate_objects methods in ParamSpec classes", "component": null, "votes": 0, "watches": 1, "content": {"raw": "A number of the inherited ```ParamSpec``` subclasses in ```input_master.py``` have ```generate_objects``` methods with repetitive code that could be refactored out.", "markup": "markdown", "html": "<p>A number of the inherited <code>ParamSpec</code> subclasses in <code>input_master.py</code> have <code>generate_objects</code> methods with repetitive code that could be refactored out.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-08T14:25:04.350770+00:00", "milestone": null, "updated_on": "2017-05-08T14:25:30.922574+00:00", "type": "issue", "id": 107}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/108/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/108.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/108/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/108/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/108/test-issue-please-ignore"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/108/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "Test issue, please ignore", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Testing the mailing list option", "markup": "markdown", "html": "<p>Testing the mailing list option</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2017-05-09T16:36:12.008364+00:00", "milestone": null, "updated_on": "2017-05-15T20:47:44.044016+00:00", "type": "issue", "id": 108}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/109/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/109.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/109/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/109/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/109/segway-should-have-an-error-or-warn-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/109/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should have an error or warn if there's an option specified that is not found", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently if there is a typo in one of the (optional) options, Segway will run without error or warning.", "markup": "markdown", "html": "<p>Currently if there is a typo in one of the (optional) options, Segway will run without error or warning.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-11T16:48:38.405953+00:00", "milestone": null, "updated_on": "2017-05-11T16:48:38.405953+00:00", "type": "issue", "id": 109}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/110/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/110.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/110/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/110/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/110/issues-not-being-sent-to-segway-internal"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/110/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "Issues not being sent to segway-internal mailing list", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Testing again.", "markup": "markdown", "html": "<p>Testing again.</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2017-05-15T20:48:17.575759+00:00", "milestone": null, "updated_on": "2017-05-18T13:27:27.510581+00:00", "type": "issue", "id": 110}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/111/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/111.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/111/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/111/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/111/issues-not-being-sent-to-segway-internal"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/111/vote"}}, "reporter": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "title": "Issues not being sent to segway-internal mailing list, test 3", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-18T13:27:52.877300+00:00", "milestone": null, "updated_on": "2017-05-18T13:27:52.877300+00:00", "type": "issue", "id": 111}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/112/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/112.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/112/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/112/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/112/segway-should-use-subcommand-parsers-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/112/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway should use subcommand parsers to distinguish options between verbs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "See: argparse subcommand parsers", "markup": "markdown", "html": "<p>See: argparse subcommand parsers</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-19T13:05:12.377481+00:00", "milestone": null, "updated_on": "2017-05-19T13:05:12.377481+00:00", "type": "issue", "id": 112}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/113/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/113.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/113/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/113/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/113/accounting-for-gaussian-components"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/113/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Accounting for Gaussian components vanishing upon reaching 0 probability mass", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From @mlibbrecht :\r\n\r\n\"Michael L and I recently identified a bug in the current mixtures of Gaussians implementation.\r\n\r\nThe bug is triggered when any one mixture component receives zero probability mass in EM. When this happens, GMTK \"vanishes\" that component; that is, it does not output a mean parameter for it. This causes the next round of training to fail, because the params file is now missing one of the parameters that it's supposed to have.\r\n\r\nThere is a very simple fix that Jeff helped me find (thanks, Jeff!). The fix is to move some parameters that used to be in the input.master file into the params.X.params.Y files. That way, GMTK can change the Gaussian to have (for example) two components rather than three, and everything will work after that. Currently, the input.master file has the structure:\r\n\r\n\r\n```\r\n#!C\r\n\r\n#ifndef INPUT_PARAMS_FILENAME\r\nDENSE_CPT_IN_FILE inline \r\n<initial parameter values>\r\nMEAN_IN_FILE inline\r\n<initial parameter values>\r\nCOVAR_IN_FILE inline\r\n<initial parameter values>\r\n#else\r\nDENSE_CPT_IN_FILE INPUT_PARAMS_FILENAME ascii\r\nMEAN_IN_FILE INPUT_PARAMS_FILENAME ascii\r\nCOVAR_IN_FILE INPUT_PARAMS_FILENAME ascii\r\n#endif\r\n```\r\n\r\n\r\nThis structure causes GMTK to read the initial values at the first iteration (when INPUT_PARAMS_FILENAME is not set on the command line), and values from params.X.params.Y files in subsequent iterations. The fix for the bug is just to move some parameters from outside the #ifndef to inside it. Specifically, I think we need to move the DPMF parameters starting with \"DPMF_IN_FILE inline\" inside the #ifndef structure.                                                                                                                                             \r\n\r\nYou can get an example at this link \r\n```\r\n#!C\r\n\r\n[redacted]\r\n```\r\n\r\n\r\nThe offending gmtkEMtrain command occurs on the bundle stage of instance 0, iteration 11, when GMTK is writing params.0.params.12. You can see that this params file is missing some lines:\r\n\r\n```\r\n#!C\r\n\r\n[maxwl@noble103739 2017-06-12_traindir_13_B_cell]$ cat params/params.0.params.11 | grep mean_ | wc -l\r\n624\r\n[maxwl@noble103739 2017-06-12_traindir_13_B_cell]$ cat params/params.0.params.12 | grep mean_ | wc -l\r\n622\r\n\r\n```\r\n\r\nI copied the GMTK command itself into the file gmtk_cmd.sh in that directory. I set -verbosity 20 in that file; running with that verbosity gives the following output, showing that GMTK vanished a component.\r\n\r\n```\r\n#!C\r\n\r\n\r\n\"\r\nNOTE: DPMF 'dpmf_seg1_subseg0_H3K4me2' has 1/0 elements vanishing/splitting\r\n\"\r\n```\r\n\"", "markup": "markdown", "html": "<p>From @mlibbrecht :</p>\n<p>\"Michael L and I recently identified a bug in the current mixtures of Gaussians implementation.</p>\n<p>The bug is triggered when any one mixture component receives zero probability mass in EM. When this happens, GMTK \"vanishes\" that component; that is, it does not output a mean parameter for it. This causes the next round of training to fail, because the params file is now missing one of the parameters that it's supposed to have.</p>\n<p>There is a very simple fix that Jeff helped me find (thanks, Jeff!). The fix is to move some parameters that used to be in the input.master file into the params.X.params.Y files. That way, GMTK can change the Gaussian to have (for example) two components rather than three, and everything will work after that. Currently, the input.master file has the structure:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"cp\">#ifndef INPUT_PARAMS_FILENAME</span>\n<span class=\"n\">DENSE_CPT_IN_FILE</span> <span class=\"kr\">inline</span> \n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"n\">MEAN_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"n\">COVAR_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"o\">&lt;</span><span class=\"n\">initial</span> <span class=\"n\">parameter</span> <span class=\"n\">values</span><span class=\"o\">&gt;</span>\n<span class=\"cp\">#else</span>\n<span class=\"n\">DENSE_CPT_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"n\">MEAN_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"n\">COVAR_IN_FILE</span> <span class=\"n\">INPUT_PARAMS_FILENAME</span> <span class=\"n\">ascii</span>\n<span class=\"cp\">#endif</span>\n</pre></div>\n\n\n<p>This structure causes GMTK to read the initial values at the first iteration (when INPUT_PARAMS_FILENAME is not set on the command line), and values from params.X.params.Y files in subsequent iterations. The fix for the bug is just to move some parameters from outside the #ifndef to inside it. Specifically, I think we need to move the DPMF parameters starting with \"DPMF_IN_FILE inline\" inside the #ifndef structure.                                                                                                                                             </p>\n<p>You can get an example at this link </p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">redacted</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>The offending gmtkEMtrain command occurs on the bundle stage of instance 0, iteration 11, when GMTK is writing params.0.params.12. You can see that this params file is missing some lines:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">maxwl</span><span class=\"err\">@</span><span class=\"n\">noble103739</span> <span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mo\">06</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"n\">_traindir_13_B_cell</span><span class=\"p\">]</span><span class=\"err\">$</span> <span class=\"n\">cat</span> <span class=\"n\">params</span><span class=\"o\">/</span><span class=\"n\">params</span><span class=\"mf\">.0</span><span class=\"p\">.</span><span class=\"n\">params</span><span class=\"mf\">.11</span> <span class=\"o\">|</span> <span class=\"n\">grep</span> <span class=\"n\">mean_</span> <span class=\"o\">|</span> <span class=\"n\">wc</span> <span class=\"o\">-</span><span class=\"n\">l</span>\n<span class=\"mi\">624</span>\n<span class=\"p\">[</span><span class=\"n\">maxwl</span><span class=\"err\">@</span><span class=\"n\">noble103739</span> <span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mo\">06</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"n\">_traindir_13_B_cell</span><span class=\"p\">]</span><span class=\"err\">$</span> <span class=\"n\">cat</span> <span class=\"n\">params</span><span class=\"o\">/</span><span class=\"n\">params</span><span class=\"mf\">.0</span><span class=\"p\">.</span><span class=\"n\">params</span><span class=\"mf\">.12</span> <span class=\"o\">|</span> <span class=\"n\">grep</span> <span class=\"n\">mean_</span> <span class=\"o\">|</span> <span class=\"n\">wc</span> <span class=\"o\">-</span><span class=\"n\">l</span>\n<span class=\"mi\">622</span>\n</pre></div>\n\n\n<p>I copied the GMTK command itself into the file gmtk_cmd.sh in that directory. I set -verbosity 20 in that file; running with that verbosity gives the following output, showing that GMTK vanished a component.</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"s\">&quot;</span>\n<span class=\"nl\">NOTE</span><span class=\"p\">:</span> <span class=\"n\">DPMF</span> <span class=\"err\">&#39;</span><span class=\"n\">dpmf_seg1_subseg0_H3K4me2</span><span class=\"err\">&#39;</span> <span class=\"n\">has</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">0</span> <span class=\"n\">elements</span> <span class=\"n\">vanishing</span><span class=\"o\">/</span><span class=\"n\">splitting</span>\n<span class=\"s\">&quot;</span>\n</pre></div>\n\n\n<p>\"</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-20T14:29:46.048016+00:00", "milestone": null, "updated_on": "2019-03-04T17:32:04.709017+00:00", "type": "issue", "id": 113}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/114/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/114.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/114/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/114/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/114/standard-output-not-being-captured"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/114/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Standard output not being captured", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I noticed that standard output is no longer being captured (eg the `traindir/output/o` folder). I tested this using `simpleseg` on changeset `fd22b5d` (prior to the GMM and validation pull requests). Standard error is fine.\r\n\r\nIn particular, the files exist but are empty:\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway/test/simpleseg/test-20170626.LVZIYG/traindir/output/o/0 ]$ ll\r\ntotal 0\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.0.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.0.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.1.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.1.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.2.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.2.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.3.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.3.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.4.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.4.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:16 emt0.5.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:17 emt0.5.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:17 emt0.6.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n-rw-r--r-- 1 rachelc mhoffma1 0 Jun 26 12:17 emt0.6.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\r\n```\r\n\r\nthe touchstones seems to expect content there:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway/test/simpleseg/touchstone/traindir/output/o/0 ]$ ll\r\ntotal 56\r\n-rw-r--r-- 1 rachelc mhoffma1 172 Jun 26 12:15 emt0.0.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.0.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.1.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.1.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.2.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.2.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.3.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.3.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.4.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.4.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.5.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.5.bundle.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 170 Jun 26 12:15 emt0.6.0.traindir.(%[0-9a-f]{32}%)\r\n-rw-r--r-- 1 rachelc mhoffma1 117 Jun 26 12:15 emt0.6.bundle.traindir.(%[0-9a-f]{32}%)\r\n\r\n```\r\nbut the tests pass anyway (which may be a separate issue--it's possible that comparisons to empty return `TRUE` for some reason).\r\n\r\nAn example of an expected output is:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway/test/simpleseg/touchstone/traindir/output/o/0 ]$ cat \"emt0.0.0.traindir.(%[0-9a-f]{32}%)\"\r\nSegment 0, after Island, log(prob(evidence)) = -8715.890764, per frame =-1.089486, per numUFrams = -1.089486\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT (%[^_]+%)____\r\n\r\n```", "markup": "markdown", "html": "<p>I noticed that standard output is no longer being captured (eg the <code>traindir/output/o</code> folder). I tested this using <code>simpleseg</code> on changeset <code>fd22b5d</code> (prior to the GMM and validation pull requests). Standard error is fine.</p>\n<p>In particular, the files exist but are empty:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway/test/simpleseg/test-20170626.LVZIYG/traindir/output/o/0 <span class=\"o\">]</span>$ ll\ntotal <span class=\"m\">0</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.0.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.0.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.1.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.1.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.2.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.2.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.3.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.3.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.4.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.4.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:16 emt0.5.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:17 emt0.5.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:17 emt0.6.0.traindir.cfb56fd85a8a11e78abf989096b2d04e\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">0</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:17 emt0.6.bundle.traindir.cfb56fd85a8a11e78abf989096b2d04e\n</pre></div>\n\n\n<p>the touchstones seems to expect content there:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway/test/simpleseg/touchstone/traindir/output/o/0 <span class=\"o\">]</span>$ ll\ntotal <span class=\"m\">56</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">172</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.0.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.0.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.1.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.1.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.2.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.2.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.3.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.3.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.4.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.4.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.5.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.5.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">170</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.6.0.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n-rw-r--r-- <span class=\"m\">1</span> rachelc mhoffma1 <span class=\"m\">117</span> Jun <span class=\"m\">26</span> <span class=\"m\">12</span>:15 emt0.6.bundle.traindir.<span class=\"o\">(</span>%<span class=\"o\">[</span><span class=\"m\">0</span>-9a-f<span class=\"o\">]{</span><span class=\"m\">32</span><span class=\"o\">}</span>%<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>but the tests pass anyway (which may be a separate issue--it's possible that comparisons to empty return <code>TRUE</code> for some reason).</p>\n<p>An example of an expected output is:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway/test/simpleseg/touchstone/traindir/output/o/0 <span class=\"o\">]</span>$ cat <span class=\"s2\">&quot;emt0.0.0.traindir.(%[0-9a-f]{32}%)&quot;</span>\nSegment <span class=\"m\">0</span>, after Island, log<span class=\"o\">(</span>prob<span class=\"o\">(</span>evidence<span class=\"o\">))</span> <span class=\"o\">=</span> -8715.890764, per <span class=\"nv\">frame</span> <span class=\"o\">=</span>-1.089486, per <span class=\"nv\">numUFrams</span> <span class=\"o\">=</span> -1.089486\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS <span class=\"m\">0</span> AT <span class=\"o\">(</span>%<span class=\"o\">[</span>^_<span class=\"o\">]</span>+%<span class=\"o\">)</span>____\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-26T16:30:20.846314+00:00", "milestone": null, "updated_on": "2018-03-02T19:24:30.875764+00:00", "type": "issue", "id": 114}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/115/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/115.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/115/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/115/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/115/reverse-world-option-creates-a-single"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/115/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "Reverse world option creates a single annotation", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Segway version 2.0.1 in reverse mode and with two worlds creates one segmentation  whereas previous versions created one segmentation per world.\r\n\r\nHere is an example of my annotation directory generated with older versions (changes shown in bold fonts):\r\n\r\n- auxiliary\r\n- cmdline  \r\n- log\r\n- output\r\n- posterior\r\n- **segway.0.layered.bb**\r\n- **segway.0.bed.gz**\r\n- **segway.0.layered.bed.gz**\r\n- **segway.1.layered.bb **\r\n- **segway.1.bed.gz**\r\n- **segway.1.layered.bed.gz**\r\n- triangulation\r\n- viterbi\r\n\r\nand now with the same pipeline:\r\n\r\n- auxiliary\r\n- cmdline  \r\n- log\r\n- **observations**\r\n- output\r\n- posterior\r\n- **segway.bed.gz**\r\n- **segway.layered.bed.gz**\r\n- **segway.%s.layered.bed.gz**\r\n- triangulation\r\n- viterbi", "markup": "markdown", "html": "<p>Segway version 2.0.1 in reverse mode and with two worlds creates one segmentation  whereas previous versions created one segmentation per world.</p>\n<p>Here is an example of my annotation directory generated with older versions (changes shown in bold fonts):</p>\n<ul>\n<li>auxiliary</li>\n<li>cmdline  </li>\n<li>log</li>\n<li>output</li>\n<li>posterior</li>\n<li><strong>segway.0.layered.bb</strong></li>\n<li><strong>segway.0.bed.gz</strong></li>\n<li><strong>segway.0.layered.bed.gz</strong></li>\n<li><strong>segway.1.layered.bb </strong></li>\n<li><strong>segway.1.bed.gz</strong></li>\n<li><strong>segway.1.layered.bed.gz</strong></li>\n<li>triangulation</li>\n<li>viterbi</li>\n</ul>\n<p>and now with the same pipeline:</p>\n<ul>\n<li>auxiliary</li>\n<li>cmdline  </li>\n<li>log</li>\n<li><strong>observations</strong></li>\n<li>output</li>\n<li>posterior</li>\n<li><strong>segway.bed.gz</strong></li>\n<li><strong>segway.layered.bed.gz</strong></li>\n<li><strong>segway.%s.layered.bed.gz</strong></li>\n<li>triangulation</li>\n<li>viterbi</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-07-12T15:56:42.326909+00:00", "milestone": null, "updated_on": "2017-07-12T19:51:53.588876+00:00", "type": "issue", "id": 115}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/116/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/116.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/116/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/116/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/116/add-feature-to-not-annotate-features-where"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/116/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Add feature to not annotate features where there is no data for regions over a certain bp/ruler threshold", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently if there is no data for a given region, the region will still be annotated and inferred from the model. This is probably a nice feature to have for small areas of missing data.\r\n\r\nThis requested feature would allow for areas that are above a given threshold of having no data to *not* have an annotation produced. As-in, if Segway encounters a region of having no observations to hypothesize a label from for a large enough region, then assume nothing and do not annotate.", "markup": "markdown", "html": "<p>Currently if there is no data for a given region, the region will still be annotated and inferred from the model. This is probably a nice feature to have for small areas of missing data.</p>\n<p>This requested feature would allow for areas that are above a given threshold of having no data to <em>not</em> have an annotation produced. As-in, if Segway encounters a region of having no observations to hypothesize a label from for a large enough region, then assume nothing and do not annotate.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-14T15:55:22.277150+00:00", "milestone": null, "updated_on": "2017-09-14T15:55:22.277150+00:00", "type": "issue", "id": 116}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/117/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/117.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/117/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/117/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/117/windows-with-multiple-genomedata-archives"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/117/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Windows with multiple Genomedata archives are erroneously chosen with missing data", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Segway selects windows from the first Genomedata archive it encounters.\r\n\r\nThis is okay if archives do not contain missing data or are equal in terms of regions where they are missing data, or if regions of missing data are excluded for all cases across all archives.\r\n\r\nIn the extreme case, this is a very problematic issue if the first archive contains significantly more missing data than the rest. This will create large gaps in window selection potentially excluding regions of data from other archives from both being trained on or being annotated.\r\n\r\nI believe the correct solution is to merge all windows from all archives for use as the working window set.", "markup": "markdown", "html": "<p>Segway selects windows from the first Genomedata archive it encounters.</p>\n<p>This is okay if archives do not contain missing data or are equal in terms of regions where they are missing data, or if regions of missing data are excluded for all cases across all archives.</p>\n<p>In the extreme case, this is a very problematic issue if the first archive contains significantly more missing data than the rest. This will create large gaps in window selection potentially excluding regions of data from other archives from both being trained on or being annotated.</p>\n<p>I believe the correct solution is to merge all windows from all archives for use as the working window set.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-11-14T14:45:30.772605+00:00", "milestone": null, "updated_on": "2017-11-28T16:14:02.585504+00:00", "type": "issue", "id": 117}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/118/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/118.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/118/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/118/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/118/test-segway_layer_bigbed-fails-due-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/118/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Test segway_layer_bigbed fails due to difference in bigBed files", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The bigBed files differ between the test results and the touchstone. After converting both to a BED format using the UCSC util bigBedToBed, the resulting BED files are identical.\r\n\r\nIt seems like only in the first 96 bytes are a few bytes different between bigBed files:\r\n\r\n\r\n```\r\n#!bash\r\n\r\n$ diff <(xxd test-20171116.wpWt8E/segway.layered.bb) <(xxd touchstone/segway.layered.bb)\r\n1c1\r\n< 0000000: ebf2 8987 0400 0100 7604 0000 0000 0000  ........v.......\r\n---\r\n> 0000000: ebf2 8987 0400 0000 7604 0000 0000 0000  ........v.......\r\n5,6c5,6\r\n< 0000040: 401f 0000 0000 0000 5f1d 0000 0000 0000  @......._.......\r\n< 0000050: 7c1d 0000 0000 0000 0000 0000 0000 0000  |...............\r\n---\r\n> 0000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n> 0000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................\r\n\r\n```\r\n\r\nThis test is not run where bedToBigBed is currently installed. It's worth considering putting this binary on the build machine.\r\n\r\nIt might be worth considering comparing the output of bigBedToBed instead to compare text formats in the future.", "markup": "markdown", "html": "<p>The bigBed files differ between the test results and the touchstone. After converting both to a BED format using the UCSC util bigBedToBed, the resulting BED files are identical.</p>\n<p>It seems like only in the first 96 bytes are a few bytes different between bigBed files:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>$ diff &lt;<span class=\"o\">(</span>xxd test-20171116.wpWt8E/segway.layered.bb<span class=\"o\">)</span> &lt;<span class=\"o\">(</span>xxd touchstone/segway.layered.bb<span class=\"o\">)</span>\n1c1\n&lt; <span class=\"m\">0000000</span>: ebf2 <span class=\"m\">8987</span> <span class=\"m\">0400</span> <span class=\"m\">0100</span> <span class=\"m\">7604</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  ........v.......\n---\n&gt; <span class=\"m\">0000000</span>: ebf2 <span class=\"m\">8987</span> <span class=\"m\">0400</span> <span class=\"m\">0000</span> <span class=\"m\">7604</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  ........v.......\n<span class=\"m\">5</span>,6c5,6\n&lt; <span class=\"m\">0000040</span>: 401f <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> 5f1d <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  @......._.......\n&lt; <span class=\"m\">0000050</span>: 7c1d <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  <span class=\"p\">|</span>...............\n---\n&gt; <span class=\"m\">0000040</span>: <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  ................\n&gt; <span class=\"m\">0000050</span>: <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span> <span class=\"m\">0000</span>  ................\n</pre></div>\n\n\n<p>This test is not run where bedToBigBed is currently installed. It's worth considering putting this binary on the build machine.</p>\n<p>It might be worth considering comparing the output of bigBedToBed instead to compare text formats in the future.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-16T16:47:45.725015+00:00", "milestone": null, "updated_on": "2017-11-16T16:47:45.725015+00:00", "type": "issue", "id": 118}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/119/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/119.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/119/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/119/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/119/semisupervised-mode-fails-when-no-tracks"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/119/vote"}}, "reporter": {"display_name": "Francis Nguyen", "uuid": "{06de6dec-2820-4695-b0e3-b8c48232677f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D"}, "html": {"href": "https://bitbucket.org/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:503caffc-22fe-47ba-8947-a81aec8f3bd6/b41d6226-076e-4353-8327-c08d1a612552/128"}}, "nickname": "Francis Nguyen", "type": "user", "account_id": "557058:503caffc-22fe-47ba-8947-a81aec8f3bd6"}, "title": "--semisupervised mode fails when no tracks are specified", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When running `segway train` with `--supervised`, but without specifying `--tracks-from`, Segway v2.0.2 crashes with the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/bin/segway\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py\", line 3743, in main\r\n    return runner()\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py\", line 3508, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py\", line 3458, in run\r\n    self.save_gmtk_input()\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py\", line 2053, in save_gmtk_input\r\n    self.save_structure()\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py\", line 1958, in save_structure\r\n    self.clobber)\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/_util.py\", line 156, in __call__\r\n    return save_template(filename, self.resource_name, self.make_mapping(),\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/structure.py\", line 89, in make_mapping\r\n    max_num_datapoints_track = num_datapoints.max()\r\n  File \"/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/numpy/core/_methods.py\", line 26, in _amax\r\n    return umr_maximum(a, axis, None, out, keepdims)\r\nValueError: zero-size array to reduction operation maximum which has no identity\r\n```\r\n\r\nSince `--tracks-from` does not have to be specified when not using `--semisupervised`, this appears to be a bug.\r\n\r\nCurrent workaround is just to remember to specify `--tracks-from` when using `--semisupervised`.", "markup": "markdown", "html": "<p>When running <code>segway train</code> with <code>--supervised</code>, but without specifying <code>--tracks-from</code>, Segway v2.0.2 crashes with the following error:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/bin/segway&quot;, line 11, in &lt;module&gt;\n    sys.exit(main())\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py&quot;, line 3743, in main\n    return runner()\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py&quot;, line 3508, in __call__\n    self.run(*args, **kwargs)\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py&quot;, line 3458, in run\n    self.save_gmtk_input()\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py&quot;, line 2053, in save_gmtk_input\n    self.save_structure()\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/run.py&quot;, line 1958, in save_structure\n    self.clobber)\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/_util.py&quot;, line 156, in __call__\n    return save_template(filename, self.resource_name, self.make_mapping(),\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/segway/structure.py&quot;, line 89, in make_mapping\n    max_num_datapoints_track = num_datapoints.max()\n  File &quot;/mnt/work1/users/home2/fnguyen/miniconda3/envs/py2.7.3/lib/python2.7/site-packages/numpy/core/_methods.py&quot;, line 26, in _amax\n    return umr_maximum(a, axis, None, out, keepdims)\nValueError: zero-size array to reduction operation maximum which has no identity\n</pre></div>\n\n\n<p>Since <code>--tracks-from</code> does not have to be specified when not using <code>--semisupervised</code>, this appears to be a bug.</p>\n<p>Current workaround is just to remember to specify <code>--tracks-from</code> when using <code>--semisupervised</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-20T20:21:36.795273+00:00", "milestone": null, "updated_on": "2017-12-20T20:21:36.795273+00:00", "type": "issue", "id": 119}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/120/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/120.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/120/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/120/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/120/fatal-fdiffact1-error-when-using"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/120/vote"}}, "reporter": {"display_name": "Francis Nguyen", "uuid": "{06de6dec-2820-4695-b0e3-b8c48232677f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D"}, "html": {"href": "https://bitbucket.org/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:503caffc-22fe-47ba-8947-a81aec8f3bd6/b41d6226-076e-4353-8327-c08d1a612552/128"}}, "nickname": "Francis Nguyen", "type": "user", "account_id": "557058:503caffc-22fe-47ba-8947-a81aec8f3bd6"}, "title": "Fatal fdiffact1 error when using --semisupervised and --validation-coords together", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When running ```segway train``` with ```--semisupervised``` and ```--validation-coords=<x>``` together, segway will submit jobs, but then fail with the following error:\r\n\r\n```\r\nERROR: observation file 1 needs an -fdiffact1 that truncates (ts, te) or expands (rf, rl, se) because the observation files have different lengths for segment 0. All files must be truncated to 5 frames or expanded to 10 frames.\r\n\r\nERROR: observation file 1 needs an -fdiffact1 that truncates (ts, te) or expands (rf, rl, se) because the observation files have different lengths for segment 0. All files must be truncated to 5 frames or expanded to 10 frames.\r\n```\r\n\r\nThis error can be replicated by taking the simplesemisupervised example in ```test/semisupervised```, adding the line ```--validation-coords=\"../validate-coords.bed\" \\``` after line 32 of ```run.sh```, and creating a ```validate-coords.bed``` file in that directory, with contents:\r\n\r\n```\r\nchr1\t1000\t1100\r\n```", "markup": "markdown", "html": "<p>When running <code>segway train</code> with <code>--semisupervised</code> and <code>--validation-coords=&lt;x&gt;</code> together, segway will submit jobs, but then fail with the following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">observation</span> <span class=\"n\">file</span> <span class=\"mi\">1</span> <span class=\"n\">needs</span> <span class=\"n\">an</span> <span class=\"o\">-</span><span class=\"n\">fdiffact1</span> <span class=\"n\">that</span> <span class=\"n\">truncates</span> <span class=\"o\">(</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"n\">te</span><span class=\"o\">)</span> <span class=\"n\">or</span> <span class=\"n\">expands</span> <span class=\"o\">(</span><span class=\"n\">rf</span><span class=\"o\">,</span> <span class=\"n\">rl</span><span class=\"o\">,</span> <span class=\"n\">se</span><span class=\"o\">)</span> <span class=\"n\">because</span> <span class=\"n\">the</span> <span class=\"n\">observation</span> <span class=\"n\">files</span> <span class=\"n\">have</span> <span class=\"n\">different</span> <span class=\"n\">lengths</span> <span class=\"k\">for</span> <span class=\"n\">segment</span> <span class=\"mi\">0</span><span class=\"o\">.</span> <span class=\"n\">All</span> <span class=\"n\">files</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">truncated</span> <span class=\"n\">to</span> <span class=\"mi\">5</span> <span class=\"n\">frames</span> <span class=\"n\">or</span> <span class=\"n\">expanded</span> <span class=\"n\">to</span> <span class=\"mi\">10</span> <span class=\"n\">frames</span><span class=\"o\">.</span>\n\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">observation</span> <span class=\"n\">file</span> <span class=\"mi\">1</span> <span class=\"n\">needs</span> <span class=\"n\">an</span> <span class=\"o\">-</span><span class=\"n\">fdiffact1</span> <span class=\"n\">that</span> <span class=\"n\">truncates</span> <span class=\"o\">(</span><span class=\"n\">ts</span><span class=\"o\">,</span> <span class=\"n\">te</span><span class=\"o\">)</span> <span class=\"n\">or</span> <span class=\"n\">expands</span> <span class=\"o\">(</span><span class=\"n\">rf</span><span class=\"o\">,</span> <span class=\"n\">rl</span><span class=\"o\">,</span> <span class=\"n\">se</span><span class=\"o\">)</span> <span class=\"n\">because</span> <span class=\"n\">the</span> <span class=\"n\">observation</span> <span class=\"n\">files</span> <span class=\"n\">have</span> <span class=\"n\">different</span> <span class=\"n\">lengths</span> <span class=\"k\">for</span> <span class=\"n\">segment</span> <span class=\"mi\">0</span><span class=\"o\">.</span> <span class=\"n\">All</span> <span class=\"n\">files</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">truncated</span> <span class=\"n\">to</span> <span class=\"mi\">5</span> <span class=\"n\">frames</span> <span class=\"n\">or</span> <span class=\"n\">expanded</span> <span class=\"n\">to</span> <span class=\"mi\">10</span> <span class=\"n\">frames</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>This error can be replicated by taking the simplesemisupervised example in <code>test/semisupervised</code>, adding the line <code>--validation-coords=\"../validate-coords.bed\" \\</code> after line 32 of <code>run.sh</code>, and creating a <code>validate-coords.bed</code> file in that directory, with contents:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    1000    1100\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-03T18:50:36.507045+00:00", "milestone": null, "updated_on": "2018-01-03T20:20:17.282035+00:00", "type": "issue", "id": 120}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/121/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/121.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/121/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/121/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/121/include-coord-does-not-verify-if-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/121/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "--include-coord does not verify if the coordinates are valid before running Segway", "component": null, "votes": 0, "watches": 2, "content": {"raw": "For example if chrM is defined in the --include-coord file and not in the genomedata archives, Segway will train on all the regions until reaching chrM then genomedata will raise the following exception:\r\n\r\nKeyError: 'Could not find chromosome: chrM'\r\n\r\nIt would be nice if Segway could validate the include-coor file before starting the training or annotation jobs to prevent useless computation.", "markup": "markdown", "html": "<p>For example if chrM is defined in the --include-coord file and not in the genomedata archives, Segway will train on all the regions until reaching chrM then genomedata will raise the following exception:</p>\n<p>KeyError: 'Could not find chromosome: chrM'</p>\n<p>It would be nice if Segway could validate the include-coor file before starting the training or annotation jobs to prevent useless computation.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-10T21:31:39.456226+00:00", "milestone": null, "updated_on": "2018-01-11T15:55:09.905721+00:00", "type": "issue", "id": 121}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/122/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/122.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/122/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/122/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/122/save_gmtk_input-hides-exception-raised-by"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/122/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "save_gmtk_input() hides exception raised by genomedata", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If the code at lines [2028](#!/hoffmanlab/segway/src/e3f58159485fb53103f54fc324192362e1167a49/segway/run.py?at=default&fileviewer=file-view-default#run.py-2028)-[2035](#!/hoffmanlab/segway/src/e3f58159485fb53103f54fc324192362e1167a49/segway/run.py?at=default&fileviewer=file-view-default#run.py-2035) of the run.py file rises an exception, Segway will execute the `finally` clause without reporting the exception.\r\n\r\nFor example, I had to remove the try-finally clause to find out that `Genome() ` raised the following error:\r\n```\r\ntables.exceptions.HDF5ExtError: HDF5 error back trace\r\n\r\n  File \"H5F.c\", line 604, in H5Fopen\r\n    unable to open file\r\n  File \"H5Fint.c\", line 992, in H5F_open\r\n    unable to open file: time = Tue Jan ...\r\n, name = '...chr2.genomedata', tent_flags = 0\r\n  File \"H5FD.c\", line 993, in H5FD_open\r\n    open failed\r\n  File \"H5FDsec2.c\", line 339, in H5FD_sec2_open\r\n    unable to open file: name = '...', errno = 24, error message = 'Too many open files', flags = 0, o_flags = 0\r\n\r\nEnd of HDF5 error back trace\r\n```\r\n\r\nFurthermore, if an exception occurs in the list comprehension assigned to `genomes` variable, `genomes` will remain unassigned and the `finally` clause will throw the following exception:\r\n\r\n```\r\nUnboundLocalError: local variable 'genomes' referenced before assignment \r\n```", "markup": "markdown", "html": "<p>If the code at lines <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/src/e3f58159485fb53103f54fc324192362e1167a49/segway/run.py?at=default&amp;fileviewer=file-view-default#run.py-2028\" rel=\"nofollow\">2028</a>-<a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/src/e3f58159485fb53103f54fc324192362e1167a49/segway/run.py?at=default&amp;fileviewer=file-view-default#run.py-2035\" rel=\"nofollow\">2035</a> of the run.py file rises an exception, Segway will execute the <code>finally</code> clause without reporting the exception.</p>\n<p>For example, I had to remove the try-finally clause to find out that <code>Genome()</code> raised the following error:</p>\n<div class=\"codehilite\"><pre><span></span>tables.exceptions.HDF5ExtError: HDF5 error back trace\n\n  File &quot;H5F.c&quot;, line 604, in H5Fopen\n    unable to open file\n  File &quot;H5Fint.c&quot;, line 992, in H5F_open\n    unable to open file: time = Tue Jan ...\n, name = &#39;...chr2.genomedata&#39;, tent_flags = 0\n  File &quot;H5FD.c&quot;, line 993, in H5FD_open\n    open failed\n  File &quot;H5FDsec2.c&quot;, line 339, in H5FD_sec2_open\n    unable to open file: name = &#39;...&#39;, errno = 24, error message = &#39;Too many open files&#39;, flags = 0, o_flags = 0\n\nEnd of HDF5 error back trace\n</pre></div>\n\n\n<p>Furthermore, if an exception occurs in the list comprehension assigned to <code>genomes</code> variable, <code>genomes</code> will remain unassigned and the <code>finally</code> clause will throw the following exception:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">UnboundLocalError</span><span class=\"o\">:</span> <span class=\"n\">local</span> <span class=\"n\">variable</span> <span class=\"s1\">&#39;genomes&#39;</span> <span class=\"n\">referenced</span> <span class=\"n\">before</span> <span class=\"n\">assignment</span> \n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-26T23:00:31.003859+00:00", "milestone": null, "updated_on": "2018-01-29T13:37:57.131586+00:00", "type": "issue", "id": 122}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/123/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/123.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/123/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/123/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/123/setting-hard-memory-limit-constraints"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/123/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Setting hard memory limit constraints fails on certain systems", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On job resubmission, segway-wrapper.sh attempts to raise both the hard and soft limits of virtual and resident set size memory.\r\n\r\nIf the hard limit of memory is not unlimited, only root users may *increase* the hard memory limit requested even after it has been lowered.\r\n\r\nPerhaps a proprosal to fallback to attempting to change only the soft limit after failing to set both hard and soft limit.\r\n\r\ne.g:\r\n\r\n```\r\n#!bash\r\n\r\nulimit -c 0 -v \"$mem_limit_kb\" -m \"$mem_limit_kb\" || (\r\nulimit -S -c 0 -v \"$mem_limit_kb\" -m \"$mem_limit_kb\" || exit 201)\r\n```", "markup": "markdown", "html": "<p>On job resubmission, segway-wrapper.sh attempts to raise both the hard and soft limits of virtual and resident set size memory.</p>\n<p>If the hard limit of memory is not unlimited, only root users may <em>increase</em> the hard memory limit requested even after it has been lowered.</p>\n<p>Perhaps a proprosal to fallback to attempting to change only the soft limit after failing to set both hard and soft limit.</p>\n<p>e.g:</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"nb\">ulimit</span> -c <span class=\"m\">0</span> -v <span class=\"s2\">&quot;</span><span class=\"nv\">$mem_limit_kb</span><span class=\"s2\">&quot;</span> -m <span class=\"s2\">&quot;</span><span class=\"nv\">$mem_limit_kb</span><span class=\"s2\">&quot;</span> <span class=\"o\">||</span> <span class=\"o\">(</span>\n<span class=\"nb\">ulimit</span> -S -c <span class=\"m\">0</span> -v <span class=\"s2\">&quot;</span><span class=\"nv\">$mem_limit_kb</span><span class=\"s2\">&quot;</span> -m <span class=\"s2\">&quot;</span><span class=\"nv\">$mem_limit_kb</span><span class=\"s2\">&quot;</span> <span class=\"o\">||</span> <span class=\"nb\">exit</span> <span class=\"m\">201</span><span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-30T17:30:15.770074+00:00", "milestone": null, "updated_on": "2018-01-30T17:30:15.770074+00:00", "type": "issue", "id": 123}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/124/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/124.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/124/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/124/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/124/warn-users-when-the-number-of-windows"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/124/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "Warn users when the number of windows exceed a threshold", "component": null, "votes": 0, "watches": 2, "content": {"raw": "A high number of windows can indicate an error in the way the inputs were processed and results in a very long training or annotation time.\r\n\r\nSegway could print a warning message after calculating the windows if it's number exceed an unreasonnable threshold (maybe 10 000).\r\n\r\nThis enhancement was suggested by Michael Hoffman.", "markup": "markdown", "html": "<p>A high number of windows can indicate an error in the way the inputs were processed and results in a very long training or annotation time.</p>\n<p>Segway could print a warning message after calculating the windows if it's number exceed an unreasonnable threshold (maybe 10 000).</p>\n<p>This enhancement was suggested by Michael Hoffman.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-02-21T21:43:35.142539+00:00", "milestone": null, "updated_on": "2018-02-23T17:10:22.897346+00:00", "type": "issue", "id": 124}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/125/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/125.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/125/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/125/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/125/dry-run-fatal-typeerror"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/125/vote"}}, "reporter": {"display_name": "Francis Nguyen", "uuid": "{06de6dec-2820-4695-b0e3-b8c48232677f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D"}, "html": {"href": "https://bitbucket.org/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:503caffc-22fe-47ba-8947-a81aec8f3bd6/b41d6226-076e-4353-8327-c08d1a612552/128"}}, "nickname": "Francis Nguyen", "type": "user", "account_id": "557058:503caffc-22fe-47ba-8947-a81aec8f3bd6"}, "title": "--dry-run fatal TypeError", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While performing a dry run using segway 2.0.2, I ran into this error:\r\n\r\n~~~\r\n/mnt/work1/users/home2/fnguyen/.local/bin/gmtkTriangulate -cppCommandOptions -DCARD_SEG=10 -DCARD_FRAMEINDEX=5000 -DSEGTRANSITION_WEIGHT_SCALE=1.0 -DCARD_SUBSEG=1 -outputTriangulatedFile train_results/triangulation/custom-structure.str.10.1.trifile -strFile custom-structure.str -verbosity 0 \r\n\r\nException in thread Thread-1: \r\n\r\nTraceback (most recent call last): \r\n\r\n  File \"/mnt/work1/users/home2/fnguyen/anaconda3/envs/py27/lib/python2.7/threading.py\", line 801, in __bootstrap_inner \r\n\r\n    self.run() \r\n\r\n  File \"/mnt/work1/users/home2/fnguyen/.local/lib/python2.7/site-packages/segway/run.py\", line 485, in run \r\n\r\n    self.result = self.runner.run_train_instance() \r\n\r\n  File \"/mnt/work1/users/home2/fnguyen/.local/lib/python2.7/site-packages/segway/run.py\", line 2746, in run_train_instance \r\n\r\n    return Results(None, None, None, None, None, None, None) \r\n\r\nTypeError: __new__() takes exactly 9 arguments (8 given) \r\n~~~\r\n\r\nSeems to be missing an extra None.\r\n\r\nThanks.", "markup": "markdown", "html": "<p>While performing a dry run using segway 2.0.2, I ran into this error:</p>\n<div class=\"codehilite\"><pre><span></span>/mnt/work1/users/home2/fnguyen/.local/bin/gmtkTriangulate -cppCommandOptions -DCARD_SEG=10 -DCARD_FRAMEINDEX=5000 -DSEGTRANSITION_WEIGHT_SCALE=1.0 -DCARD_SUBSEG=1 -outputTriangulatedFile train_results/triangulation/custom-structure.str.10.1.trifile -strFile custom-structure.str -verbosity 0 \n\nException in thread Thread-1: \n\nTraceback (most recent call last): \n\n  File &quot;/mnt/work1/users/home2/fnguyen/anaconda3/envs/py27/lib/python2.7/threading.py&quot;, line 801, in __bootstrap_inner \n\n    self.run() \n\n  File &quot;/mnt/work1/users/home2/fnguyen/.local/lib/python2.7/site-packages/segway/run.py&quot;, line 485, in run \n\n    self.result = self.runner.run_train_instance() \n\n  File &quot;/mnt/work1/users/home2/fnguyen/.local/lib/python2.7/site-packages/segway/run.py&quot;, line 2746, in run_train_instance \n\n    return Results(None, None, None, None, None, None, None) \n\nTypeError: __new__() takes exactly 9 arguments (8 given) \n</pre></div>\n\n\n<p>Seems to be missing an extra None.</p>\n<p>Thanks.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-03-16T19:11:35.195189+00:00", "milestone": null, "updated_on": "2018-08-24T14:57:31.020962+00:00", "type": "issue", "id": 125}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/126/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/126.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/126/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/126/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/126/segway-uses-ez_setup-and-puts-it-on-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/126/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Segway uses ez_setup and puts it on the PYTHONPATH", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently has ez_setup.py included with it's source installation. In setup.py it also uses ez_setup:\r\n\r\n```python\r\nfrom ez_setup import use_setuptools\r\nuse_setuptools()\r\n```\r\n\r\nez_setup is an antiquated python packaging system and probably should no longer be used. When Segway is installed it also places ez_setup on the PYTHONPATH which caused Segtools to fail previously when it required it, but did not include itself.\r\n\r\nThis is a suggestion to remove the dependency altogether.", "markup": "markdown", "html": "<p>Currently has ez_setup.py included with it's source installation. In setup.py it also uses ez_setup:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">ez_setup</span> <span class=\"kn\">import</span> <span class=\"n\">use_setuptools</span>\n<span class=\"n\">use_setuptools</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>ez_setup is an antiquated python packaging system and probably should no longer be used. When Segway is installed it also places ez_setup on the PYTHONPATH which caused Segtools to fail previously when it required it, but did not include itself.</p>\n<p>This is a suggestion to remove the dependency altogether.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-16T15:54:28.878842+00:00", "milestone": null, "updated_on": "2018-04-16T15:54:28.878842+00:00", "type": "issue", "id": 126}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/127/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/127.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/127/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/127/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/127/give-users-controls-over-track-weights"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/127/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "Give users controls over track weights.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The weight of each track is by default the ratio between the maximum number of data points in a track and the number of data point in the given track. In other words, it gives more weights to the tracks with the least data points. \r\n\r\nIt would be useful for the users to control the weights when the defaults are not appropriate. For example, one could set equal weights to all the tracks, or a higher weight to a transcription factor of interest.\r\n\r\nGiven the current Segway command line interface, the simplest implementation would make use of the --tracks-from option. This option takes as input a file with one column and the rows contain the track names. One could add a column \u201cweight\u201d to this file to specify the weight of each track. \r\n\r\nThe then the weight information should be passed to the structure.py module and make_mapping method. Any comments regarding how to pass the weight information are welcome.\r\n\r\nNote that the weights should be added to the train.tab file.", "markup": "markdown", "html": "<p>The weight of each track is by default the ratio between the maximum number of data points in a track and the number of data point in the given track. In other words, it gives more weights to the tracks with the least data points. </p>\n<p>It would be useful for the users to control the weights when the defaults are not appropriate. For example, one could set equal weights to all the tracks, or a higher weight to a transcription factor of interest.</p>\n<p>Given the current Segway command line interface, the simplest implementation would make use of the --tracks-from option. This option takes as input a file with one column and the rows contain the track names. One could add a column \u201cweight\u201d to this file to specify the weight of each track. </p>\n<p>The then the weight information should be passed to the structure.py module and make_mapping method. Any comments regarding how to pass the weight information are welcome.</p>\n<p>Note that the weights should be added to the train.tab file.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-25T18:59:16.328700+00:00", "milestone": null, "updated_on": "2018-06-25T19:02:57.462757+00:00", "type": "issue", "id": 127}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/128/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/128.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/128/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/128/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/128/stale-file-handle-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/128/vote"}}, "reporter": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "title": "Stale file handle error", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While running Segway 2.0.2 in reverse mode I ran into a `Stale file handle error`. Below are the logs and the command of the job that failed.\r\n\r\n\r\n## segway command\r\n```\r\nsegway \\\r\n    --num-labels=10 \\\r\n    --resolution=2 \\\r\n    --ruler-scale=2 \\\r\n    --num-instances=10 \\\r\n    --reverse-world=1 \\\r\n    --max-train-rounds=50 \\\r\n    --seg-table=seg_table.tab \\\r\n    --minibatch-fraction=0.01 \\\r\n    --tracks-from=tracks.csv \\\r\n    --mem-usage=2,4,8,16 \\\r\n    train ...\r\n```\r\n\r\n## Segway output\r\n```\r\nTraceback (most recent call last):\r\n  File \"~/anaconda2/lib/python2.7/site-packages/luigi/worker.py\", line 181, in run\r\n    new_deps = self._run_get_new_deps()\r\n  File \"~/anaconda2/lib/python2.7/site-packages/luigi/worker.py\", line 119, in _run_get_new_deps\r\n    task_gen = self.task.run()\r\n  File \"segway_workflow.py\", line 141, in run\r\n    segway_run.main(segway_cmd)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/run.py\", line 3787, in main\r\n    return runner()\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/run.py\", line 3552, in __call__\r\n    self.run(*args, **kwargs)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/run.py\", line 3519, in run\r\n    self.run_train()\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/run.py\", line 2947, in run_train\r\n    instance_params = run_train_func(self.num_segs_range)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/run.py\", line 3030, in run_train_multithread\r\n    to find the winning instance anyway.\"\"\" % thread.instance_index)\r\nAttributeError: Training instance 0 failed. See previously printed error for reason.\r\nFinal params file will not be written. Rerun the instance or use segway-winner\r\nto find the winning instance anyway.\r\n```\r\n\r\n## EM training error\r\nThe source of the error seem to come from the job: `emt0.19.1233.train.637ed75e7b0f11e8975fbd311cda90ee`\r\n\r\n- The job's output file is empty instead of containing the expected: `____ PROGRAM ENDED SUCCESSFULLY WITH STATUS___`\r\n- Content of the Job's error output:\r\n```\r\nTraceback (most recent call last):\r\n  File \"~/anaconda2/bin/segway-task\", line 6, in <module>\r\n    sys.exit(segway.task.main())\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/task.py\", line 592, in main\r\n    return task(*args)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/task.py\", line 582, in task\r\n    outfilename, *args)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/task.py\", line 476, in run_train\r\n    supervision_data=supervision_cells)\r\n  File \"~/anaconda2/lib/python2.7/site-packages/segway/observations.py\", line 479, in _save_window\r\n    int_data.tofile(int_filename)\r\nIOError: [Errno 116] Stale file handle\r\n```\r\n\r\nThis jobs has two unexpected behavior:\r\n\r\n- Usually the jobs raising this error are re-submitted. This one is not\r\n- The job is not indexed in  `jobs.tab`", "markup": "markdown", "html": "<p>While running Segway 2.0.2 in reverse mode I ran into a <code>Stale file handle error</code>. Below are the logs and the command of the job that failed.</p>\n<h2 id=\"markdown-header-segway-command\">segway command</h2>\n<div class=\"codehilite\"><pre><span></span>segway \\\n    --num-labels=10 \\\n    --resolution=2 \\\n    --ruler-scale=2 \\\n    --num-instances=10 \\\n    --reverse-world=1 \\\n    --max-train-rounds=50 \\\n    --seg-table=seg_table.tab \\\n    --minibatch-fraction=0.01 \\\n    --tracks-from=tracks.csv \\\n    --mem-usage=2,4,8,16 \\\n    train ...\n</pre></div>\n\n\n<h2 id=\"markdown-header-segway-output\">Segway output</h2>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;~/anaconda2/lib/python2.7/site-packages/luigi/worker.py&quot;, line 181, in run\n    new_deps = self._run_get_new_deps()\n  File &quot;~/anaconda2/lib/python2.7/site-packages/luigi/worker.py&quot;, line 119, in _run_get_new_deps\n    task_gen = self.task.run()\n  File &quot;segway_workflow.py&quot;, line 141, in run\n    segway_run.main(segway_cmd)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/run.py&quot;, line 3787, in main\n    return runner()\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/run.py&quot;, line 3552, in __call__\n    self.run(*args, **kwargs)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/run.py&quot;, line 3519, in run\n    self.run_train()\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/run.py&quot;, line 2947, in run_train\n    instance_params = run_train_func(self.num_segs_range)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/run.py&quot;, line 3030, in run_train_multithread\n    to find the winning instance anyway.&quot;&quot;&quot; % thread.instance_index)\nAttributeError: Training instance 0 failed. See previously printed error for reason.\nFinal params file will not be written. Rerun the instance or use segway-winner\nto find the winning instance anyway.\n</pre></div>\n\n\n<h2 id=\"markdown-header-em-training-error\">EM training error</h2>\n<p>The source of the error seem to come from the job: <code>emt0.19.1233.train.637ed75e7b0f11e8975fbd311cda90ee</code></p>\n<ul>\n<li>The job's output file is empty instead of containing the expected: <code>____ PROGRAM ENDED SUCCESSFULLY WITH STATUS___</code></li>\n<li>Content of the Job's error output:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;~/anaconda2/bin/segway-task&quot;, line 6, in &lt;module&gt;\n    sys.exit(segway.task.main())\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/task.py&quot;, line 592, in main\n    return task(*args)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/task.py&quot;, line 582, in task\n    outfilename, *args)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/task.py&quot;, line 476, in run_train\n    supervision_data=supervision_cells)\n  File &quot;~/anaconda2/lib/python2.7/site-packages/segway/observations.py&quot;, line 479, in _save_window\n    int_data.tofile(int_filename)\nIOError: [Errno 116] Stale file handle\n</pre></div>\n\n\n<p>This jobs has two unexpected behavior:</p>\n<ul>\n<li>Usually the jobs raising this error are re-submitted. This one is not</li>\n<li>The job is not indexed in  <code>jobs.tab</code></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-29T20:53:27.163939+00:00", "milestone": null, "updated_on": "2018-07-07T19:58:58.225388+00:00", "type": "issue", "id": 128}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/129/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/129.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/129/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/129/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/129/segway-with-egbr"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/129/vote"}}, "reporter": {"display_name": "rhodes", "uuid": "{4d2226e4-dc89-4ca5-b3c3-546fab5ff4db}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4d2226e4-dc89-4ca5-b3c3-546fab5ff4db%7D"}, "html": {"href": "https://bitbucket.org/%7B4d2226e4-dc89-4ca5-b3c3-546fab5ff4db%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9693783feeeea8c7aefcbfa1985ea9e7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-0.png"}}, "nickname": "rhodesz", "type": "user", "account_id": "5b900b911aa25f2be7d365ca"}, "title": "Segway with EGBR", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi,\r\n\r\nJust want to ask if you guys plan to include the egbr into this version. Or do you plan to update the former segway with egbr?", "markup": "markdown", "html": "<p>Hi,</p>\n<p>Just want to ask if you guys plan to include the egbr into this version. Or do you plan to update the former segway with egbr?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-05T17:03:29.303694+00:00", "milestone": null, "updated_on": "2018-09-05T17:03:29.303694+00:00", "type": "issue", "id": 129}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/130/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/130.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/130/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/130/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/130/simpleseg-jobsinstancetab-ocassionally-has"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/130/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Simpleseg jobs.instance.tab ocassionally has out of order output", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Ocassionally while testing the following lines in jobs.instance.tab of the identify task of simpleseg appear swapped:\r\n```\r\n(%[0-9]+(?:\\.[a-zA-Z0-9-]+)?%)\tvit0.identifydir-full.(%[0-9a-f]{32}%)\tgmtkViterbi\t2\t8000\t(%[0-9]+(?:\\.[0-9]+)?%)\t(%[0-9]+(?:\\.[0-9]+)?%)\t0\r\n(%[0-9]+(?:\\.[a-zA-Z0-9-]+)?%)\tjt0.identifydir-full.(%[0-9a-f]{32}%)\tgmtkJT\t2\t8000\t(%[0-9]+(?:\\.[0-9]+)?%)\t(%[0-9]+(?:\\.[0-9]+)?%)\t0\r\n```\r\nThese are lines 2 and 3. Sometimes they are in the order shown above. Sometimes they are in the opposite order. This is likely an output buffering issue.", "markup": "markdown", "html": "<p>Ocassionally while testing the following lines in jobs.instance.tab of the identify task of simpleseg appear swapped:</p>\n<div class=\"codehilite\"><pre><span></span>(%[0-9]+(?:\\.[a-zA-Z0-9-]+)?%)  vit0.identifydir-full.(%[0-9a-f]{32}%)  gmtkViterbi 2   8000    (%[0-9]+(?:\\.[0-9]+)?%) (%[0-9]+(?:\\.[0-9]+)?%) 0\n(%[0-9]+(?:\\.[a-zA-Z0-9-]+)?%)  jt0.identifydir-full.(%[0-9a-f]{32}%)   gmtkJT  2   8000    (%[0-9]+(?:\\.[0-9]+)?%) (%[0-9]+(?:\\.[0-9]+)?%) 0\n</pre></div>\n\n\n<p>These are lines 2 and 3. Sometimes they are in the order shown above. Sometimes they are in the opposite order. This is likely an output buffering issue.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-10T15:22:53.967635+00:00", "milestone": null, "updated_on": "2018-12-14T14:47:21.063640+00:00", "type": "issue", "id": 130}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/131/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/131.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/131/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/131/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/131/touchstone-exists-for-simplereverse-but-is"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/131/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Touchstone exists for simplereverse but is never checked", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In the test case `simplereverse`, a touchstone directory exists but it seems the last time it was updated was 2012 and is not actually part of the current test suite.\r\n\r\nSpecifically, in the `simplereverse` `run.sh` script, there is only the command to run train/identify for segway. The program does not to enter the run directory and compare with the touchstone afterwards:\r\n\r\n```\r\n#!python\r\n\r\n...\r\n\r\n# seed from python -c \"import random; print random.randrange(2**32)\"\r\nSEGWAY_RAND_SEED=4014068903 segway \"$cluster_arg\" \\\r\n    --include-coords=\"../include-coords.bed\" \\\r\n    --track=testtrack1A,testtrack1B --track=testtrack2A,testtrack2B \\\r\n    --num-labels=4 --reverse-world=1 \\\r\n    train \"../simpleconcat.genomedata\" traindir\r\n\r\nsegway \"$cluster_arg\" --include-coords=\"../include-coords.bed\" \\\r\n    identify \"../simpleconcat.genomedata\" traindir identifydir\r\n\r\n```", "markup": "markdown", "html": "<p>In the test case <code>simplereverse</code>, a touchstone directory exists but it seems the last time it was updated was 2012 and is not actually part of the current test suite.</p>\n<p>Specifically, in the <code>simplereverse</code> <code>run.sh</code> script, there is only the command to run train/identify for segway. The program does not to enter the run directory and compare with the touchstone afterwards:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">...</span>\n\n<span class=\"c1\"># seed from python -c &quot;import random; print random.randrange(2**32)&quot;</span>\n<span class=\"n\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"mi\">4014068903</span> <span class=\"n\">segway</span> <span class=\"s2\">&quot;$cluster_arg&quot;</span> \\\n    <span class=\"o\">--</span><span class=\"n\">include</span><span class=\"o\">-</span><span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"s2\">&quot;../include-coords.bed&quot;</span> \\\n    <span class=\"o\">--</span><span class=\"n\">track</span><span class=\"o\">=</span><span class=\"n\">testtrack1A</span><span class=\"p\">,</span><span class=\"n\">testtrack1B</span> <span class=\"o\">--</span><span class=\"n\">track</span><span class=\"o\">=</span><span class=\"n\">testtrack2A</span><span class=\"p\">,</span><span class=\"n\">testtrack2B</span> \\\n    <span class=\"o\">--</span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"mi\">4</span> <span class=\"o\">--</span><span class=\"n\">reverse</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"o\">=</span><span class=\"mi\">1</span> \\\n    <span class=\"n\">train</span> <span class=\"s2\">&quot;../simpleconcat.genomedata&quot;</span> <span class=\"n\">traindir</span>\n\n<span class=\"n\">segway</span> <span class=\"s2\">&quot;$cluster_arg&quot;</span> <span class=\"o\">--</span><span class=\"n\">include</span><span class=\"o\">-</span><span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"s2\">&quot;../include-coords.bed&quot;</span> \\\n    <span class=\"n\">identify</span> <span class=\"s2\">&quot;../simpleconcat.genomedata&quot;</span> <span class=\"n\">traindir</span> <span class=\"n\">identifydir</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-13T21:09:12.348783+00:00", "milestone": null, "updated_on": "2018-12-13T21:09:12.348783+00:00", "type": "issue", "id": 131}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/132/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/132.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/132/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/132/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/132/cannot-create-observations-before-training"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/132/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Cannot create observations before training and annotation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently when Segway was migrated over to favoring a more minibatch training support, creating the set of observations for the whole genome (since they were randomly selected from that pool) was problematic and temporary observation file creation per job was favored instead.\r\n\r\nSome workflows could still benefit from writing out their observations before training or annotation and this feature should be re-enabled.\r\n\r\nCurrent thought should be to use the --observation option to specify a directory to have observations saved/cached to for use in both training and identification.", "markup": "markdown", "html": "<p>Currently when Segway was migrated over to favoring a more minibatch training support, creating the set of observations for the whole genome (since they were randomly selected from that pool) was problematic and temporary observation file creation per job was favored instead.</p>\n<p>Some workflows could still benefit from writing out their observations before training or annotation and this feature should be re-enabled.</p>\n<p>Current thought should be to use the --observation option to specify a directory to have observations saved/cached to for use in both training and identification.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-14T15:07:24.910464+00:00", "milestone": null, "updated_on": "2018-12-14T15:07:24.910464+00:00", "type": "issue", "id": 132}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/133/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/133.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/133/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/133/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/133/disabling-gaussian-splitting-in-single"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/133/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Disabling Gaussian splitting in single-Gaussian case", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Since the mixture of Gaussians (GMM) patch, we have seen that it is possible for Gaussian models to split/vanish components once the model's confidence becomes high enough. The issue is that this behavior may not be backwards compatible with Segway pre-GMM.\r\n\r\nHowever, I am not sure how this behavior was enabled. Page 551 of GMTK's [documentation](http://melodi.ee.washington.edu/~bilmes/gmtk_docs_draft_09_08_2014.pdf) states that one just needs to add the MX table to the input.master to enable GMM. However, Segway's [commit history](#!/hoffmanlab/segway/commits/e3fc44f26689f54bf0d22d81353b628df0be00b2#chg-test/simpleseg/touchstone/traindir/params/input.master) (eg for simpleseg's input.master) indicates that the MX table has always been present in Segway. To me, this indicates that Segway was a 1D mixture model all along, and splitting/vanishing has always been possible.\r\n\r\nIn which case, is splitting/vanishing now enabled instead due to the changes to the dpmf structure? Specifically, Segway used to use a single dpmf constant 'dpmf_always' across all its Gaussians:\r\n\r\n\r\n\r\n```\r\n#!C\r\n\r\nDPMF_IN_FILE inline\r\n1\r\n\r\n0 dpmf_always 1 1.0\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack1\r\n1 1 mx_seg0_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack2\r\n2 1 mx_seg1_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg1_subseg0_testtrack1\r\n3 1 mx_seg1_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg1_subseg0_testtrack2\r\n4 1 mx_seg2_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg2_subseg0_testtrack1\r\n5 1 mx_seg2_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg2_subseg0_testtrack2\r\n6 1 mx_seg3_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg3_subseg0_testtrack1\r\n7 1 mx_seg3_subseg0_testtrack2 1 dpmf_always mc_asinh_norm_seg3_subseg0_testtrack2\r\n\r\n\r\n```\r\n\r\n If I understand GMTK structure correctly, this means that 'dpmf_always' was a dpmf constant tied across all components (labels). Does this mean that if GMTK wanted to split/vanish Gaussians, it would have had to split/vanish that one dpmf constant, resulting in all components splitting/vanishing? And it likely never obtained the confidence to do so and thus this issue only appeared now that we have separate dpmf constants/tables for every mixture?:\r\n\r\n\r\n```\r\n#!C\r\n\r\nDPMF_IN_FILE inline\r\n8\r\n\r\n0 dpmf_seg0_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n1 dpmf_seg0_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n2 dpmf_seg1_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n3 dpmf_seg1_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n4 dpmf_seg2_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n5 dpmf_seg2_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n6 dpmf_seg3_subseg0_testtrack1 1 DirichletTable dirichlet_num_mix_components  1.0\r\n7 dpmf_seg3_subseg0_testtrack2 1 DirichletTable dirichlet_num_mix_components  1.0\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_seg0_subseg0_testtrack1 mc_asinh_norm_seg0_subseg0_testtrack1_component0\r\n1 1 mx_seg0_subseg0_testtrack2 1 dpmf_seg0_subseg0_testtrack2 mc_asinh_norm_seg0_subseg0_testtrack2_component0\r\n2 1 mx_seg1_subseg0_testtrack1 1 dpmf_seg1_subseg0_testtrack1 mc_asinh_norm_seg1_subseg0_testtrack1_component0\r\n3 1 mx_seg1_subseg0_testtrack2 1 dpmf_seg1_subseg0_testtrack2 mc_asinh_norm_seg1_subseg0_testtrack2_component0\r\n4 1 mx_seg2_subseg0_testtrack1 1 dpmf_seg2_subseg0_testtrack1 mc_asinh_norm_seg2_subseg0_testtrack1_component0\r\n5 1 mx_seg2_subseg0_testtrack2 1 dpmf_seg2_subseg0_testtrack2 mc_asinh_norm_seg2_subseg0_testtrack2_component0\r\n6 1 mx_seg3_subseg0_testtrack1 1 dpmf_seg3_subseg0_testtrack1 mc_asinh_norm_seg3_subseg0_testtrack1_component0\r\n7 1 mx_seg3_subseg0_testtrack2 1 dpmf_seg3_subseg0_testtrack2 mc_asinh_norm_seg3_subseg0_testtrack2_component0\r\n```\r\n\r\n\r\n\r\nWould appreciate if anyone with Segway/GMTK knowledge could weigh in, as I could be totally wrong. Thanks!", "markup": "markdown", "html": "<p>Since the mixture of Gaussians (GMM) patch, we have seen that it is possible for Gaussian models to split/vanish components once the model's confidence becomes high enough. The issue is that this behavior may not be backwards compatible with Segway pre-GMM.</p>\n<p>However, I am not sure how this behavior was enabled. Page 551 of GMTK's <a data-is-external-link=\"true\" href=\"http://melodi.ee.washington.edu/~bilmes/gmtk_docs_draft_09_08_2014.pdf\" rel=\"nofollow\">documentation</a> states that one just needs to add the MX table to the input.master to enable GMM. However, Segway's <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/commits/e3fc44f26689f54bf0d22d81353b628df0be00b2#chg-test/simpleseg/touchstone/traindir/params/input.master\" rel=\"nofollow\">commit history</a> (eg for simpleseg's input.master) indicates that the MX table has always been present in Segway. To me, this indicates that Segway was a 1D mixture model all along, and splitting/vanishing has always been possible.</p>\n<p>In which case, is splitting/vanishing now enabled instead due to the changes to the dpmf structure? Specifically, Segway used to use a single dpmf constant 'dpmf_always' across all its Gaussians:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"n\">DPMF_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">1</span>\n\n<span class=\"mi\">0</span> <span class=\"n\">dpmf_always</span> <span class=\"mi\">1</span> <span class=\"mf\">1.0</span>\n\n<span class=\"n\">MX_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack1</span>\n<span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack2</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack1</span>\n<span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack2</span>\n<span class=\"mi\">4</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack1</span>\n<span class=\"mi\">5</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack2</span>\n<span class=\"mi\">6</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack1</span>\n<span class=\"mi\">7</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_always</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack2</span>\n</pre></div>\n\n\n<p>If I understand GMTK structure correctly, this means that 'dpmf_always' was a dpmf constant tied across all components (labels). Does this mean that if GMTK wanted to split/vanish Gaussians, it would have had to split/vanish that one dpmf constant, resulting in all components splitting/vanishing? And it likely never obtained the confidence to do so and thus this issue only appeared now that we have separate dpmf constants/tables for every mixture?:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"n\">DPMF_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">2</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">3</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">4</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">5</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">6</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n<span class=\"mi\">7</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">DirichletTable</span> <span class=\"n\">dirichlet_num_mix_components</span>  <span class=\"mf\">1.0</span>\n\n<span class=\"n\">MX_IN_FILE</span> <span class=\"kr\">inline</span>\n<span class=\"mi\">8</span>\n\n<span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack1_component0</span>\n<span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg0_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg0_subseg0_testtrack2_component0</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack1_component0</span>\n<span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg1_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg1_subseg0_testtrack2_component0</span>\n<span class=\"mi\">4</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack1_component0</span>\n<span class=\"mi\">5</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg2_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg2_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg2_subseg0_testtrack2_component0</span>\n<span class=\"mi\">6</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack1</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack1_component0</span>\n<span class=\"mi\">7</span> <span class=\"mi\">1</span> <span class=\"n\">mx_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"n\">dpmf_seg3_subseg0_testtrack2</span> <span class=\"n\">mc_asinh_norm_seg3_subseg0_testtrack2_component0</span>\n</pre></div>\n\n\n<p>Would appreciate if anyone with Segway/GMTK knowledge could weigh in, as I could be totally wrong. Thanks!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-19T18:15:56.349005+00:00", "milestone": null, "updated_on": "2019-02-19T18:15:56.349005+00:00", "type": "issue", "id": 133}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/134/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/134.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/134/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/134/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/134/error-codes-on-slurm"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/134/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Error codes on SLURM", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I had a viterbi job fail on SLURM for an unknown reason with empty error/output messages. `identfiydir/jobs.identify.tab` reports:\r\n\r\n```\r\n05 105825  vit443.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n106 105826  vit442.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n107 105827  vit441.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n108 105820  vit448.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n109 105821  vit447.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n110 105822  vit446.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n111 105823  vit445.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n112 105828  vit440.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n113 105829  vit439.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\r\n114 105587  vit401.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n115 105586  vit402.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n116 105585  vit403.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n117 105584  vit404.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n118 105583  vit405.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n119 105582  vit406.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n120 105581  vit407.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n121 105580  vit408.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\r\n```\r\n\r\nso it seems that returned nonzero error codes are not parsed properly in SLURM.", "markup": "markdown", "html": "<p>I had a viterbi job fail on SLURM for an unknown reason with empty error/output messages. <code>identfiydir/jobs.identify.tab</code> reports:</p>\n<div class=\"codehilite\"><pre><span></span>05 105825  vit443.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n106 105826  vit442.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n107 105827  vit441.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n108 105820  vit448.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n109 105821  vit447.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n110 105822  vit446.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n111 105823  vit445.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n112 105828  vit440.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n113 105829  vit439.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1983410 0   0   0\n114 105587  vit401.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n115 105586  vit402.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n116 105585  vit403.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n117 105584  vit404.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n118 105583  vit405.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n119 105582  vit406.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n120 105581  vit407.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n121 105580  vit408.20190507-1553_3.identifydir.e6ceabaa710b11e9b532525400626261 gmtkViterbi 10  1993960 0   0   unknown signal?!\n</pre></div>\n\n\n<p>so it seems that returned nonzero error codes are not parsed properly in SLURM.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-05-07T22:03:55.199844+00:00", "milestone": null, "updated_on": "2019-07-26T20:14:07.207054+00:00", "type": "issue", "id": 134}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/135/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/135.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/135/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/135/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/135/missing-copy-of-gpl-v2-license"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/135/vote"}}, "reporter": null, "title": "Missing copy of GPL v2 license", "component": null, "votes": 0, "watches": null, "content": {"raw": "Quoting the ``README.rst``,\r\n\r\n> License\r\n>\r\n> Segway is free software: you can redistribute it and/or modify it under the terms of version 2 of the GNU General Public License as published by the Free Software Foundation.\r\n> \r\n> Segway is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\nThere is no copy of the license in a text file in the root of the repository, nor in the source code folder. By GNU convention this would be something like COPYING or COPYING.txt, but equally LICENSE or LICENSE.txt or similar would be typical.", "markup": "markdown", "html": "<p>Quoting the <code>README.rst</code>,</p>\n<blockquote>\n<p>License</p>\n<p>Segway is free software: you can redistribute it and/or modify it under the terms of version 2 of the GNU General Public License as published by the Free Software Foundation.</p>\n<p>Segway is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n</blockquote>\n<p>There is no copy of the license in a text file in the root of the repository, nor in the source code folder. By GNU convention this would be something like COPYING or COPYING.txt, but equally LICENSE or LICENSE.txt or similar would be typical.</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2019-06-25T14:10:05.533582+00:00", "milestone": null, "updated_on": "2019-06-25T14:46:22.563465+00:00", "type": "issue", "id": 135}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/136/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/136.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/136/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/136/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/136/using-the-prior-strength-option-causes"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/136/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Using the '--prior-strength' option causes training to crash", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The following error is reported by GMTK:\r\n\r\n```\r\n\r\nERROR: reading file 'traindir/params/input.0.master' line 178, DenseCPT 'segCountDown_seg_segTransition' specified Dirichlet Table (dirichlet_segCountDown_seg_segTransition) that does not exist\r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>The following error is reported by GMTK:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">reading</span> <span class=\"n\">file</span> <span class=\"s1\">&#39;traindir/params/input.0.master&#39;</span> <span class=\"n\">line</span> <span class=\"mi\">178</span><span class=\"o\">,</span> <span class=\"n\">DenseCPT</span> <span class=\"s1\">&#39;segCountDown_seg_segTransition&#39;</span> <span class=\"n\">specified</span> <span class=\"n\">Dirichlet</span> <span class=\"n\">Table</span> <span class=\"o\">(</span><span class=\"n\">dirichlet_segCountDown_seg_segTransition</span><span class=\"o\">)</span> <span class=\"n\">that</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">exist</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-11-13T20:53:03.303554+00:00", "milestone": null, "updated_on": "2020-03-09T11:46:42.821649+00:00", "type": "issue", "id": 136}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segway/issues/137/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/issues/137.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/137/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segway/issues/137/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segway/issues/137/training-windows-segway-train-phase"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/issues/137/vote"}}, "reporter": null, "title": "Training windows segway train phase", "component": null, "votes": 0, "watches": null, "content": {"raw": "I have the following error: Training windows is empy\r\nI guess that the chromosomes are missing. What could cause this problem?\r\n\r\nThanks in advance", "markup": "markdown", "html": "<p>I have the following error: Training windows is empy\nI guess that the chromosomes are missing. What could cause this problem?</p>\n<p>Thanks in advance</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-03-20T15:12:42.899762+00:00", "milestone": null, "updated_on": "2020-03-20T15:12:42.899762+00:00", "type": "issue", "id": 137}], "page": 2, "size": 137}