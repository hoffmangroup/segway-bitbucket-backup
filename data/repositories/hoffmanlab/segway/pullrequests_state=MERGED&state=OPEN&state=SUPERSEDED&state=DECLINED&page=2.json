{"next": "data/repositories/hoffmanlab/segway/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=3.json", "values": [{"description": "* adding mixtures\r\n\r\n* observations.py edited online with Bitbucket, fixed save_window line.\r\n\r\n* observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.\r\n\r\n* add source to segway-wrapper class\r\n\r\n* fixed header on observations.py\r\n\r\n* segway-wrapper.sh edited online with Bitbucket\r\n\r\n* finish update, ready for the pull request", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/51/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/Shiqi_Zou/segway-mixture-resubmit:78c2d49f32f8%0D13a81c75584d?from_pullrequest_id=51"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/51/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/51.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/51/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/51/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/51"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/51/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/Shiqi_Zou/segway-mixture-resubmit:78c2d49f32f8%0D13a81c75584d?from_pullrequest_id=51"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/51/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/51/statuses_page=1.json"}}, "title": "Default", "close_source_branch": false, "type": "pullrequest", "id": 51, "destination": {"commit": {"hash": "13a81c75584d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/13a81c75584d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/13a81c75584d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-05-31T20:27:37.377445+00:00", "summary": {"raw": "* adding mixtures\r\n\r\n* observations.py edited online with Bitbucket, fixed save_window line.\r\n\r\n* observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.\r\n\r\n* add source to segway-wrapper class\r\n\r\n* fixed header on observations.py\r\n\r\n* segway-wrapper.sh edited online with Bitbucket\r\n\r\n* finish update, ready for the pull request", "markup": "markdown", "html": "<ul>\n<li>\n<p>adding mixtures</p>\n</li>\n<li>\n<p>observations.py edited online with Bitbucket, fixed save_window line.</p>\n</li>\n<li>\n<p>observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.</p>\n</li>\n<li>\n<p>add source to segway-wrapper class</p>\n</li>\n<li>\n<p>fixed header on observations.py</p>\n</li>\n<li>\n<p>segway-wrapper.sh edited online with Bitbucket</p>\n</li>\n<li>\n<p>finish update, ready for the pull request</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "78c2d49f32f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Shiqi_Zou/segway-mixture-resubmit/commit/78c2d49f32f8"}, "html": {"href": "https://bitbucket.org/Shiqi_Zou/segway-mixture-resubmit/commits/78c2d49f32f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Shiqi_Zou/segway-mixture-resubmit"}, "html": {"href": "https://bitbucket.org/Shiqi_Zou/segway-mixture-resubmit"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0f756251-22b9-4ec7-b9d0-8f390e7af40a}ts=python"}}, "type": "repository", "name": "segway-mixture-resubmit", "full_name": "Shiqi_Zou/segway-mixture-resubmit", "uuid": "{0f756251-22b9-4ec7-b9d0-8f390e7af40a}"}, "branch": {"name": "default"}}, "comment_count": 11, "state": "DECLINED", "task_count": 0, "reason": "Need to do the code review with Max first", "updated_on": "2016-05-31T20:41:30.741009+00:00", "author": {"display_name": "Shiqi Zou", "uuid": "{81944c10-4e4b-418a-bb36-5ff0b18450f6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D"}, "html": {"href": "https://bitbucket.org/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/afe0cdbd274b035f8653fa6f10ec54ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSZ-4.png"}}, "nickname": "Shiqi_Zou", "type": "user", "account_id": "557058:ed27e6f2-cfda-41a4-aff2-fa09c1e48095"}, "merge_commit": null, "closed_by": {"display_name": "Shiqi Zou", "uuid": "{81944c10-4e4b-418a-bb36-5ff0b18450f6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D"}, "html": {"href": "https://bitbucket.org/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/afe0cdbd274b035f8653fa6f10ec54ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSZ-4.png"}}, "nickname": "Shiqi_Zou", "type": "user", "account_id": "557058:ed27e6f2-cfda-41a4-aff2-fa09c1e48095"}}, {"description": "* adding mixtures\r\n\r\n* setup.py edited online with Bitbucket, removed space\r\n\r\n* observations.py edited online with Bitbucket, fixed save_window line.\r\n\r\n* observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.\r\n\r\n* add source to segway-wrapper class\r\n\r\n* fixed header on observations.py\r\n\r\n* remove the bashrc source line from the patch\r\n\r\n* segway-wrapper.sh edited online with Bitbucket\r\n\r\n* try to compare first\r\n\r\n* finish update, ready for the pull request\r\n\r\n* finish the code review", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/52/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/Shiqi_Zou/segway-mixture-resubmit:3c0dd79390a3%0Db3bf9a892356?from_pullrequest_id=52"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/52/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/52"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/Shiqi_Zou/segway-mixture-resubmit:3c0dd79390a3%0Db3bf9a892356?from_pullrequest_id=52"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/52/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/statuses_page=1.json"}}, "title": "Resubmit the mixtures of Gaussians code", "close_source_branch": false, "type": "pullrequest", "id": 52, "destination": {"commit": {"hash": "b3bf9a892356", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3bf9a892356.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3bf9a892356"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-05-31T21:16:12.766726+00:00", "summary": {"raw": "* adding mixtures\r\n\r\n* setup.py edited online with Bitbucket, removed space\r\n\r\n* observations.py edited online with Bitbucket, fixed save_window line.\r\n\r\n* observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.\r\n\r\n* add source to segway-wrapper class\r\n\r\n* fixed header on observations.py\r\n\r\n* remove the bashrc source line from the patch\r\n\r\n* segway-wrapper.sh edited online with Bitbucket\r\n\r\n* try to compare first\r\n\r\n* finish update, ready for the pull request\r\n\r\n* finish the code review", "markup": "markdown", "html": "<ul>\n<li>\n<p>adding mixtures</p>\n</li>\n<li>\n<p>setup.py edited online with Bitbucket, removed space</p>\n</li>\n<li>\n<p>observations.py edited online with Bitbucket, fixed save_window line.</p>\n</li>\n<li>\n<p>observations.py edited online with Bitbucket, edited _save_window arguments. It now agrees with _save_window call from task.py.</p>\n</li>\n<li>\n<p>add source to segway-wrapper class</p>\n</li>\n<li>\n<p>fixed header on observations.py</p>\n</li>\n<li>\n<p>remove the bashrc source line from the patch</p>\n</li>\n<li>\n<p>segway-wrapper.sh edited online with Bitbucket</p>\n</li>\n<li>\n<p>try to compare first</p>\n</li>\n<li>\n<p>finish update, ready for the pull request</p>\n</li>\n<li>\n<p>finish the code review</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "3c0dd79390a3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Shiqi_Zou/segway-mixture-resubmit/commit/3c0dd79390a3"}, "html": {"href": "https://bitbucket.org/Shiqi_Zou/segway-mixture-resubmit/commits/3c0dd79390a3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Shiqi_Zou/segway-mixture-resubmit"}, "html": {"href": "https://bitbucket.org/Shiqi_Zou/segway-mixture-resubmit"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0f756251-22b9-4ec7-b9d0-8f390e7af40a}ts=python"}}, "type": "repository", "name": "segway-mixture-resubmit", "full_name": "Shiqi_Zou/segway-mixture-resubmit", "uuid": "{0f756251-22b9-4ec7-b9d0-8f390e7af40a}"}, "branch": {"name": "default"}}, "comment_count": 68, "state": "DECLINED", "task_count": 0, "reason": "Pull request #68 was a continuation of this PR and was successfully merged", "updated_on": "2017-05-12T14:36:53.943758+00:00", "author": {"display_name": "Shiqi Zou", "uuid": "{81944c10-4e4b-418a-bb36-5ff0b18450f6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D"}, "html": {"href": "https://bitbucket.org/%7B81944c10-4e4b-418a-bb36-5ff0b18450f6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/afe0cdbd274b035f8653fa6f10ec54ced=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSZ-4.png"}}, "nickname": "Shiqi_Zou", "type": "user", "account_id": "557058:ed27e6f2-cfda-41a4-aff2-fa09c1e48095"}, "merge_commit": {"hash": "0193f4a9049b", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/0193f4a9049b.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/0193f4a9049b"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.\r\n\r\nI have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:b0cdc32d62b8%0D13a81c75584d?from_pullrequest_id=53"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/53"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:b0cdc32d62b8%0D13a81c75584d?from_pullrequest_id=53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/statuses_page=1.json"}}, "title": "Change minibatch to use numpy.random.choice to avoid need to seed two different RNGs", "close_source_branch": false, "type": "pullrequest", "id": 53, "destination": {"commit": {"hash": "13a81c75584d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/13a81c75584d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/13a81c75584d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-01T17:57:02.896788+00:00", "summary": {"raw": "numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.\r\n\r\nI have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.", "markup": "markdown", "html": "<p>numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.</p>\n<p>I have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b0cdc32d62b8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/b0cdc32d62b8"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/b0cdc32d62b8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "default"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-06-03T13:50:54.763961+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "b0cdc32d62b8f5c4603288427a75aab486c3209d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b0cdc32d62b8f5c4603288427a75aab486c3209d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b0cdc32d62b8f5c4603288427a75aab486c3209d"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This is for [issue 73](#!/hoffmanlab/segway/issues/73/segway-does-not-delete-job-templates).\r\n\r\n```createJobTemplate``` is run in ```run.py``` and never deleted. Failure to delete job templates is explicitly noted by drmaa's [documentation](http://drmaa-python.readthedocs.io/en/latest/drmaa.html) to possibly cause memory leaks. This pull request adds job template deletion to ```cluster/common.py``` and ```cluster/__init__.py```. This may fix the memory leak issues found in [issue 60](#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/54/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:1ccc56e1388a%0D02c1669515d6?from_pullrequest_id=54"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/54/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/54.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/54/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/54/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/54"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/54/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:1ccc56e1388a%0D02c1669515d6?from_pullrequest_id=54"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/54/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/54/statuses_page=1.json"}}, "title": "Add job template deletion to cluster/common.py and cluster/__init__.py", "close_source_branch": false, "type": "pullrequest", "id": 54, "destination": {"commit": {"hash": "02c1669515d6", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/02c1669515d6.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/02c1669515d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-09T14:51:17.220295+00:00", "summary": {"raw": "This is for [issue 73](#!/hoffmanlab/segway/issues/73/segway-does-not-delete-job-templates).\r\n\r\n```createJobTemplate``` is run in ```run.py``` and never deleted. Failure to delete job templates is explicitly noted by drmaa's [documentation](http://drmaa-python.readthedocs.io/en/latest/drmaa.html) to possibly cause memory leaks. This pull request adds job template deletion to ```cluster/common.py``` and ```cluster/__init__.py```. This may fix the memory leak issues found in [issue 60](#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory).", "markup": "markdown", "html": "<p>This is for <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/73/segway-does-not-delete-job-templates\" rel=\"nofollow\">issue 73</a>.</p>\n<p><code>createJobTemplate</code> is run in <code>run.py</code> and never deleted. Failure to delete job templates is explicitly noted by drmaa's <a data-is-external-link=\"true\" href=\"http://drmaa-python.readthedocs.io/en/latest/drmaa.html\" rel=\"nofollow\">documentation</a> to possibly cause memory leaks. This pull request adds job template deletion to <code>cluster/common.py</code> and <code>cluster/__init__.py</code>. This may fix the memory leak issues found in <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/60/segway-process-uses-too-much-memory\" rel=\"nofollow\">issue 60</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1ccc56e1388a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/1ccc56e1388a"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/1ccc56e1388a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "default"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-07-22T14:55:02.794209+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "1ccc56e1388acf08b9a222816a37c0bbc38b0db9", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/1ccc56e1388acf08b9a222816a37c0bbc38b0db9.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/1ccc56e1388acf08b9a222816a37c0bbc38b0db9"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.\r\n\r\nAs a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.\r\n\r\nShell files will be placed in the file system as follows:\r\n\r\n\r\n```\r\n#!python\r\n\r\ntraindir\r\n    cmdline\r\n        0 # instance number\r\n            emt0.0.0.uuid.sh\r\n    log\r\n    ...etc...\r\n\r\nidentifydir\r\n    cmdline\r\n        identify\r\n            vit.uuid.sh\r\n    log\r\n    ...etc...\r\n```\r\n\r\n\r\n\r\nThis is to fix [issue 72](#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job).\r\n\r\nTriangulation is ignored since it is locally run, not submitted through DRMAA.\r\n\r\nAll tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.\r\n\r\nArgument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.\r\n\r\nOne thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.\r\n\r\nI've also tested this on a large run (list of windows > 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:352750ba4f34%0D1ccc56e1388a?from_pullrequest_id=55"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/55"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:352750ba4f34%0D1ccc56e1388a?from_pullrequest_id=55"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/statuses_page=1.json"}}, "title": "Change queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves", "close_source_branch": false, "type": "pullrequest", "id": 55, "destination": {"commit": {"hash": "1ccc56e1388a", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/1ccc56e1388a.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/1ccc56e1388a"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-10T21:06:08.087833+00:00", "summary": {"raw": "This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.\r\n\r\nAs a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.\r\n\r\nShell files will be placed in the file system as follows:\r\n\r\n\r\n```\r\n#!python\r\n\r\ntraindir\r\n    cmdline\r\n        0 # instance number\r\n            emt0.0.0.uuid.sh\r\n    log\r\n    ...etc...\r\n\r\nidentifydir\r\n    cmdline\r\n        identify\r\n            vit.uuid.sh\r\n    log\r\n    ...etc...\r\n```\r\n\r\n\r\n\r\nThis is to fix [issue 72](#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job).\r\n\r\nTriangulation is ignored since it is locally run, not submitted through DRMAA.\r\n\r\nAll tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.\r\n\r\nArgument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.\r\n\r\nOne thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.\r\n\r\nI've also tested this on a large run (list of windows > 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.", "markup": "markdown", "html": "<p>This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.</p>\n<p>As a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.</p>\n<p>Shell files will be placed in the file system as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">traindir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"mi\">0</span> <span class=\"c1\"># instance number</span>\n            <span class=\"n\">emt0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n\n<span class=\"n\">identifydir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"n\">identify</span>\n            <span class=\"n\">vit</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n</pre></div>\n\n\n<p>This is to fix <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job\" rel=\"nofollow\">issue 72</a>.</p>\n<p>Triangulation is ignored since it is locally run, not submitted through DRMAA.</p>\n<p>All tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.</p>\n<p>Argument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.</p>\n<p>One thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.</p>\n<p>I've also tested this on a large run (list of windows &gt; 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.</p>", "type": "rendered"}, "source": {"commit": {"hash": "352750ba4f34", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/352750ba4f34"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/352750ba4f34"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "default"}}, "comment_count": 15, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-07-26T18:46:31.306003+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "352750ba4f34d4fd781212196a86434cd66fce9b", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/352750ba4f34d4fd781212196a86434cd66fce9b.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/352750ba4f34d4fd781212196a86434cd66fce9b"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request changes train_windows (in minibatch) to sort in reverse, such that the last index will not be greater than 9999.\r\n\r\nThis is to resolve [issue 75](#!/hoffmanlab/segway/issues/75/gmtk-does-not-allow-last-number-of).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/56/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:5efa8602e2a4%0Dc0f3072cc451?from_pullrequest_id=56"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/56/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/56.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/56/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/56/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/56"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/56/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:5efa8602e2a4%0Dc0f3072cc451?from_pullrequest_id=56"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/56/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/56/statuses_page=1.json"}}, "title": "Change train_windows (in minibatch) to sort in reverse, such that the last index will not be greater than 9999", "close_source_branch": false, "type": "pullrequest", "id": 56, "destination": {"commit": {"hash": "c0f3072cc451", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/c0f3072cc451.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/c0f3072cc451"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-13T15:55:07.780923+00:00", "summary": {"raw": "This pull request changes train_windows (in minibatch) to sort in reverse, such that the last index will not be greater than 9999.\r\n\r\nThis is to resolve [issue 75](#!/hoffmanlab/segway/issues/75/gmtk-does-not-allow-last-number-of).", "markup": "markdown", "html": "<p>This pull request changes train_windows (in minibatch) to sort in reverse, such that the last index will not be greater than 9999.</p>\n<p>This is to resolve <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/75/gmtk-does-not-allow-last-number-of\" rel=\"nofollow\">issue 75</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "58c8d1918e8c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/58c8d1918e8c"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/58c8d1918e8c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "75branch"}}, "comment_count": 44, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-19T19:11:12.605193+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "5efa8602e2a4", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/5efa8602e2a4.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/5efa8602e2a4"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request changes the queue message such that it alerts the user if segway is running locally (whether this is intentional or because DRMAA was installed incorrectly).\r\n\r\nThis is in relation to [issue 52](#!/hoffmanlab/segway/issues/52/segway-silently-ignores-drmaa-if-installed).\r\n\r\nI've tested this for all of: locally, DRMAA_LIBRARY_PATH set incorrectly for a cluster system, and set correctly for a cluster system, and all give the expected outputs.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/57/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:cf5b848ed46a%0Dd8bddc6b8259?from_pullrequest_id=57"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/57/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/57.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/57/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/57/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/57"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/57/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:cf5b848ed46a%0Dd8bddc6b8259?from_pullrequest_id=57"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/57/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/57/statuses_page=1.json"}}, "title": "Change the queue message such that it alerts the user if segway is running locally (whether this is intentional or because DRMAA was installed incorrectly).", "close_source_branch": false, "type": "pullrequest", "id": 57, "destination": {"commit": {"hash": "d8bddc6b8259", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/d8bddc6b8259.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/d8bddc6b8259"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-13T17:50:06.212426+00:00", "summary": {"raw": "This pull request changes the queue message such that it alerts the user if segway is running locally (whether this is intentional or because DRMAA was installed incorrectly).\r\n\r\nThis is in relation to [issue 52](#!/hoffmanlab/segway/issues/52/segway-silently-ignores-drmaa-if-installed).\r\n\r\nI've tested this for all of: locally, DRMAA_LIBRARY_PATH set incorrectly for a cluster system, and set correctly for a cluster system, and all give the expected outputs.", "markup": "markdown", "html": "<p>This pull request changes the queue message such that it alerts the user if segway is running locally (whether this is intentional or because DRMAA was installed incorrectly).</p>\n<p>This is in relation to <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/52/segway-silently-ignores-drmaa-if-installed\" rel=\"nofollow\">issue 52</a>.</p>\n<p>I've tested this for all of: locally, DRMAA_LIBRARY_PATH set incorrectly for a cluster system, and set correctly for a cluster system, and all give the expected outputs.</p>", "type": "rendered"}, "source": {"commit": {"hash": "fd5f494451b8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/fd5f494451b8"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/fd5f494451b8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "52branch"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-08-02T19:42:14.576542+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "cf5b848ed46a", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/cf5b848ed46a.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/cf5b848ed46a"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This is to resolve enhancement [issue 76](#!/hoffmanlab/segway/issues/76/add-annotate-as-an-alias-for-identify).\r\n\r\nI've tested this with the simplesemisupervised test case (using 'segway annotate' instead of 'segway identify') and it runs the identify processes as expected (though note this changes the segway.sh file, as expected. No other files change).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/58/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:7cb8368dfc10%0D815103d24acb?from_pullrequest_id=58"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/58/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/58.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/58/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/58/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/58"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/58/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:7cb8368dfc10%0D815103d24acb?from_pullrequest_id=58"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/58/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/58/statuses_page=1.json"}}, "title": "Add 'annotate' as an alias for 'identify'", "close_source_branch": false, "type": "pullrequest", "id": 58, "destination": {"commit": {"hash": "815103d24acb", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/815103d24acb.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/815103d24acb"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-13T18:12:55.610149+00:00", "summary": {"raw": "This is to resolve enhancement [issue 76](#!/hoffmanlab/segway/issues/76/add-annotate-as-an-alias-for-identify).\r\n\r\nI've tested this with the simplesemisupervised test case (using 'segway annotate' instead of 'segway identify') and it runs the identify processes as expected (though note this changes the segway.sh file, as expected. No other files change).", "markup": "markdown", "html": "<p>This is to resolve enhancement <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/76/add-annotate-as-an-alias-for-identify\" rel=\"nofollow\">issue 76</a>.</p>\n<p>I've tested this with the simplesemisupervised test case (using 'segway annotate' instead of 'segway identify') and it runs the identify processes as expected (though note this changes the segway.sh file, as expected. No other files change).</p>", "type": "rendered"}, "source": {"commit": {"hash": "7a441927e07e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/7a441927e07e"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/7a441927e07e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "76branch"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-08-09T19:51:07.210365+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "7cb8368dfc10", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/7cb8368dfc10.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/7cb8368dfc10"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Adressing issue #66\r\n\r\n* Remove empty line after the trackline in the layered bed output\r\n\r\n* Prevent the creation of overlapping blocks in the layered bed output\r\n\r\n\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/59/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:a9787255dc5d%0Dcf5b848ed46a?from_pullrequest_id=59"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/59/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/59.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/59/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/59/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/59"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/59/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:a9787255dc5d%0Dcf5b848ed46a?from_pullrequest_id=59"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/59/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/59/statuses_page=1.json"}}, "title": "Fix invalid bed12 layered input for bedToBigBed", "close_source_branch": false, "type": "pullrequest", "id": 59, "destination": {"commit": {"hash": "cf5b848ed46a", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/cf5b848ed46a.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/cf5b848ed46a"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-14T15:58:54.718168+00:00", "summary": {"raw": "Adressing issue #66\r\n\r\n* Remove empty line after the trackline in the layered bed output\r\n\r\n* Prevent the creation of overlapping blocks in the layered bed output\r\n\r\n\r\n", "markup": "markdown", "html": "<p>Adressing issue <a href=\"#!/hoffmanlab/segway/issues/66/new-versions-of-bedtobigbed-fail-to\" rel=\"nofollow\" title=\"new versions of bedToBigBed fail to convert layered BED files\" class=\"ap-connect-link\"><s>#66</s></a></p>\n<ul>\n<li>\n<p>Remove empty line after the trackline in the layered bed output</p>\n</li>\n<li>\n<p>Prevent the creation of overlapping blocks in the layered bed output</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-08-08T19:06:30.472768+00:00", "author": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "merge_commit": {"hash": "a9787255dc5d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/a9787255dc5d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/a9787255dc5d"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Remove the necessity of re-specifying genomedata archives in identify/annotate. This has been tested and verified to support multiple genomedata archives.\r\n\r\nTo do this, I took the genomedata specification in traindir/log/segway.sh (it is not in train.tab). If there is a better place to take this from, please let me know.\r\n\r\nOne question is if we should preserve the ability to specify the genomedata archive in identify (though it is not necessary). Currently this is not supported. So there would be two possible syntaxes: ```segway ... identify genomedata traindir identifydir``` and ```segway ... identify traindir identifydir```. \r\n\r\nThe documentation will also need to be updated to reflect this.\r\n\r\n\r\nAlso regarding this line:\r\n\r\n\r\n```\r\n#!python\r\n\r\n2742     usage = \"%(prog)s [OPTION]... TASK GENOMEDATA [GENOMEDATA ...] TRAINDIR \" \\\r\n2743             \"[IDENTIFYDIR]\"\r\n\r\n```\r\n\r\nwhat would be the best way to modify this to reflect that GENOMEDATA for identify is now optional? ```TASK [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]```?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/60/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway_fork2:a2ff8f65bd35%0Df04cce0da8be?from_pullrequest_id=60"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/60/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/60.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/60/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/60/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/60"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/60/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway_fork2:a2ff8f65bd35%0Df04cce0da8be?from_pullrequest_id=60"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/60/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/60/statuses_page=1.json"}}, "title": "Remove the necessity of re-specifying genomedata archives in identify/annotate", "close_source_branch": false, "type": "pullrequest", "id": 60, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-07-12T15:42:55.004668+00:00", "summary": {"raw": "Remove the necessity of re-specifying genomedata archives in identify/annotate. This has been tested and verified to support multiple genomedata archives.\r\n\r\nTo do this, I took the genomedata specification in traindir/log/segway.sh (it is not in train.tab). If there is a better place to take this from, please let me know.\r\n\r\nOne question is if we should preserve the ability to specify the genomedata archive in identify (though it is not necessary). Currently this is not supported. So there would be two possible syntaxes: ```segway ... identify genomedata traindir identifydir``` and ```segway ... identify traindir identifydir```. \r\n\r\nThe documentation will also need to be updated to reflect this.\r\n\r\n\r\nAlso regarding this line:\r\n\r\n\r\n```\r\n#!python\r\n\r\n2742     usage = \"%(prog)s [OPTION]... TASK GENOMEDATA [GENOMEDATA ...] TRAINDIR \" \\\r\n2743             \"[IDENTIFYDIR]\"\r\n\r\n```\r\n\r\nwhat would be the best way to modify this to reflect that GENOMEDATA for identify is now optional? ```TASK [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]```?", "markup": "markdown", "html": "<p>Remove the necessity of re-specifying genomedata archives in identify/annotate. This has been tested and verified to support multiple genomedata archives.</p>\n<p>To do this, I took the genomedata specification in traindir/log/segway.sh (it is not in train.tab). If there is a better place to take this from, please let me know.</p>\n<p>One question is if we should preserve the ability to specify the genomedata archive in identify (though it is not necessary). Currently this is not supported. So there would be two possible syntaxes: <code>segway ... identify genomedata traindir identifydir</code> and <code>segway ... identify traindir identifydir</code>. </p>\n<p>The documentation will also need to be updated to reflect this.</p>\n<p>Also regarding this line:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">2742</span>     <span class=\"n\">usage</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(prog)s</span><span class=\"s2\"> [OPTION]... TASK GENOMEDATA [GENOMEDATA ...] TRAINDIR &quot;</span> \\\n<span class=\"mi\">2743</span>             <span class=\"s2\">&quot;[IDENTIFYDIR]&quot;</span>\n</pre></div>\n\n\n<p>what would be the best way to modify this to reflect that GENOMEDATA for identify is now optional? <code>TASK [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]</code>?</p>", "type": "rendered"}, "source": {"commit": {"hash": "a2ff8f65bd35", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/a2ff8f65bd35"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/a2ff8f65bd35"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "infer_genomedata_identify"}}, "comment_count": 2, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2016-08-02T20:10:45.891116+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "This fixes Issue #81.\r\n\r\nNotably I don't think this requires a NEWS change since it \"fixes\" an existing news item with seeding minibatch.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/61/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:1460dc85628c%0Db348a3fe53fa?from_pullrequest_id=61"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/61/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/61.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/61/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/61/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/61"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/61/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:1460dc85628c%0Db348a3fe53fa?from_pullrequest_id=61"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/61/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/61/statuses_page=1.json"}}, "title": "Add train instance specific random number generation", "close_source_branch": false, "type": "pullrequest", "id": 61, "destination": {"commit": {"hash": "b348a3fe53fa", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b348a3fe53fa.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b348a3fe53fa"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-08-26T21:12:02.608688+00:00", "summary": {"raw": "This fixes Issue #81.\r\n\r\nNotably I don't think this requires a NEWS change since it \"fixes\" an existing news item with seeding minibatch.", "markup": "markdown", "html": "<p>This fixes Issue <a href=\"#!/hoffmanlab/segway/issues/81/different-initial-means-inputmaster-with\" rel=\"nofollow\" title=\"Different initial means (input.master) with minibatch and num-instances\" class=\"ap-connect-link\"><s>#81</s></a>.</p>\n<p>Notably I don't think this requires a NEWS change since it \"fixes\" an existing news item with seeding minibatch.</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-14T19:29:49.292978+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "1460dc85628c", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/1460dc85628c.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/1460dc85628c"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "* Sort output from segway-layer for proper big to bigbed conversion\r\n* Remove segway-layer test changes\r\n\r\nVerified to fix Issue #83", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/62/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:b348a3fe53fa%0D7cb8368dfc10?from_pullrequest_id=62"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/62/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/62.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/62/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/62/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/62"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/62/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:b348a3fe53fa%0D7cb8368dfc10?from_pullrequest_id=62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/62/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/62/statuses_page=1.json"}}, "title": "--Bigbed option fix with sorted chromosome label output", "close_source_branch": true, "type": "pullrequest", "id": 62, "destination": {"commit": {"hash": "7cb8368dfc10", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/7cb8368dfc10.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/7cb8368dfc10"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-09-12T19:28:02.345333+00:00", "summary": {"raw": "* Sort output from segway-layer for proper big to bigbed conversion\r\n* Remove segway-layer test changes\r\n\r\nVerified to fix Issue #83", "markup": "markdown", "html": "<ul>\n<li>Sort output from segway-layer for proper big to bigbed conversion</li>\n<li>Remove segway-layer test changes</li>\n</ul>\n<p>Verified to fix Issue <a href=\"#!/hoffmanlab/segway/issues/83/segway-layered-bed-file-output-is-not\" rel=\"nofollow\" title=\"Segway layered bed file output is not sorted and breaks --bigBed option\" class=\"ap-connect-link\"><s>#83</s></a></p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "bigbed-sorted-fix"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-14T15:26:57.744494+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "b348a3fe53fa", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b348a3fe53fa.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b348a3fe53fa"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Change segway documentation to reflect ruler constraints in supervision label file", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/63/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:3e1967031e22%0D5efa8602e2a4?from_pullrequest_id=63"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/63/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/63.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/63/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/63/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/63"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/63/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:3e1967031e22%0D5efa8602e2a4?from_pullrequest_id=63"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/63/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/63/statuses_page=1.json"}}, "title": "Change segway documentation to reflect ruler constraints in supervision label file", "close_source_branch": false, "type": "pullrequest", "id": 63, "destination": {"commit": {"hash": "5efa8602e2a4", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/5efa8602e2a4.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/5efa8602e2a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-09-15T17:29:11.918549+00:00", "summary": {"raw": "Change segway documentation to reflect ruler constraints in supervision label file", "markup": "markdown", "html": "<p>Change segway documentation to reflect ruler constraints in supervision label file</p>", "type": "rendered"}, "source": {"commit": {"hash": "23d1c26c82d4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway-1/commit/23d1c26c82d4"}, "html": {"href": "https://bitbucket.org/rcwchan/segway-1/commits/23d1c26c82d4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway-1"}, "html": {"href": "https://bitbucket.org/rcwchan/segway-1"}, "avatar": {"href": "data/bytebucket.org/ravatar/{cfe37561-5057-4cfe-911c-557786e4580b}ts=python"}}, "type": "repository", "name": "segway-1", "full_name": "rcwchan/segway-1", "uuid": "{cfe37561-5057-4cfe-911c-557786e4580b}"}, "branch": {"name": "rcwchan/change-segway-documentation-to-reflect-r-1473960363447"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-20T18:10:47.881860+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "3e1967031e22", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/3e1967031e22.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/3e1967031e22"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.\r\n\r\n```\r\n#!python\r\n\r\n/scratch/segway/segway/run.py:847: UserWarning: Running Segway in identify mode with non-zero verbosity is currently not supported and may result in errors.\r\n  warn(\"Running Segway in identify mode with non-zero verbosity\"\r\n\r\n```\r\n\r\nFix miscellaneous pep8 whitespace issues in run.py.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/64/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:3bc392d77d61%0D842e05e19b02?from_pullrequest_id=64"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/64/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/64.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/64/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/64/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/64"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/64/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:3bc392d77d61%0D842e05e19b02?from_pullrequest_id=64"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/64/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/64/statuses_page=1.json"}}, "title": "Raise warning if running Segway in identify mode with non-zero verbosity.", "close_source_branch": false, "type": "pullrequest", "id": 64, "destination": {"commit": {"hash": "842e05e19b02", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/842e05e19b02.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/842e05e19b02"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-10-18T18:37:10.508389+00:00", "summary": {"raw": "Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.\r\n\r\n```\r\n#!python\r\n\r\n/scratch/segway/segway/run.py:847: UserWarning: Running Segway in identify mode with non-zero verbosity is currently not supported and may result in errors.\r\n  warn(\"Running Segway in identify mode with non-zero verbosity\"\r\n\r\n```\r\n\r\nFix miscellaneous pep8 whitespace issues in run.py.", "markup": "markdown", "html": "<p>Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">scratch</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">847</span><span class=\"p\">:</span> <span class=\"ne\">UserWarning</span><span class=\"p\">:</span> <span class=\"n\">Running</span> <span class=\"n\">Segway</span> <span class=\"ow\">in</span> <span class=\"n\">identify</span> <span class=\"n\">mode</span> <span class=\"k\">with</span> <span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span> <span class=\"n\">verbosity</span> <span class=\"ow\">is</span> <span class=\"n\">currently</span> <span class=\"ow\">not</span> <span class=\"n\">supported</span> <span class=\"ow\">and</span> <span class=\"n\">may</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"o\">.</span>\n  <span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running Segway in identify mode with non-zero verbosity&quot;</span>\n</pre></div>\n\n\n<p>Fix miscellaneous pep8 whitespace issues in run.py.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3bc392d77d61", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/3bc392d77d61"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/3bc392d77d61"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "reason": "I accidentally set this to be the wrong source branch; please see pull request 67 instead", "updated_on": "2016-10-21T15:08:41.990107+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}}, {"description": "Change input.master to have ``seg_subseg`` objects only when hierarchial segmentation is enabled.\r\n\r\nDue to the way the ``DenseCPTParamSpec`` is generated, it is significantly easier to remove them from the input.master files via ``input_master.py`` than refactoring the way the param spec is generated.\r\n\r\nOther references to ``seg_subseg`` are in ``segway.str`` and already commented out via the preprocessor.\r\n\r\nAccording to ``segway.str``, ``subseg_subseg_copy`` should only be enabled when ``CARD_SUBSEG > 1``. Additionally, cardinality of ``DenseCPTParamSpec`` will also change depending on both ``CARD_SUBSEG`` and ``CARD_SUPERVISION``. I have refactored the logic in the ``input.master.tmpl`` to account for both of these points.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/65/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:95124a233113%0Df04cce0da8be?from_pullrequest_id=65"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/65/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/65.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/65/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/65/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/65"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/65/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:95124a233113%0Df04cce0da8be?from_pullrequest_id=65"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/65/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/65/statuses_page=1.json"}}, "title": "Remove hierarchial segmentation", "close_source_branch": false, "type": "pullrequest", "id": 65, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-10-20T14:50:46.580523+00:00", "summary": {"raw": "Change input.master to have ``seg_subseg`` objects only when hierarchial segmentation is enabled.\r\n\r\nDue to the way the ``DenseCPTParamSpec`` is generated, it is significantly easier to remove them from the input.master files via ``input_master.py`` than refactoring the way the param spec is generated.\r\n\r\nOther references to ``seg_subseg`` are in ``segway.str`` and already commented out via the preprocessor.\r\n\r\nAccording to ``segway.str``, ``subseg_subseg_copy`` should only be enabled when ``CARD_SUBSEG > 1``. Additionally, cardinality of ``DenseCPTParamSpec`` will also change depending on both ``CARD_SUBSEG`` and ``CARD_SUPERVISION``. I have refactored the logic in the ``input.master.tmpl`` to account for both of these points.", "markup": "markdown", "html": "<p>Change input.master to have <code>seg_subseg</code> objects only when hierarchial segmentation is enabled.</p>\n<p>Due to the way the <code>DenseCPTParamSpec</code> is generated, it is significantly easier to remove them from the input.master files via <code>input_master.py</code> than refactoring the way the param spec is generated.</p>\n<p>Other references to <code>seg_subseg</code> are in <code>segway.str</code> and already commented out via the preprocessor.</p>\n<p>According to <code>segway.str</code>, <code>subseg_subseg_copy</code> should only be enabled when <code>CARD_SUBSEG &gt; 1</code>. Additionally, cardinality of <code>DenseCPTParamSpec</code> will also change depending on both <code>CARD_SUBSEG</code> and <code>CARD_SUPERVISION</code>. I have refactored the logic in the <code>input.master.tmpl</code> to account for both of these points.</p>", "type": "rendered"}, "source": {"commit": {"hash": "95124a233113", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/95124a233113"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/95124a233113"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "remove-hierarchial-segmentation"}}, "comment_count": 10, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2016-11-04T17:54:01.350965+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "Change verbosity to 6 for training only, and leave as 0 for all other tasks.\r\n\r\nThis is regarding [issue 87](#!/hoffmanlab/segway/issues/87/enable-warnings-from-gmtk)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/66/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:66dbdfd1ad8a%0Df04cce0da8be?from_pullrequest_id=66"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/66/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/66.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/66/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/66/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/66"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/66/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:66dbdfd1ad8a%0Df04cce0da8be?from_pullrequest_id=66"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/66/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/66/statuses_page=1.json"}}, "title": "Change verbosity to 6 for training only, and leave as 0 for all other tasks", "close_source_branch": false, "type": "pullrequest", "id": 66, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-10-21T14:40:41.745990+00:00", "summary": {"raw": "Change verbosity to 6 for training only, and leave as 0 for all other tasks.\r\n\r\nThis is regarding [issue 87](#!/hoffmanlab/segway/issues/87/enable-warnings-from-gmtk)", "markup": "markdown", "html": "<p>Change verbosity to 6 for training only, and leave as 0 for all other tasks.</p>\n<p>This is regarding <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/87/enable-warnings-from-gmtk\" rel=\"nofollow\">issue 87</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "66dbdfd1ad8a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/66dbdfd1ad8a"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/66dbdfd1ad8a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "train-verbosity-6"}}, "comment_count": 5, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2016-10-27T15:08:25.757239+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.\r\n\r\n```\r\n#!python\r\n\r\n/scratch/segway/segway/run.py:847: UserWarning: Running Segway in identify mode with non-zero verbosity is currently not supported and may result in errors.\r\n  warn(\"Running Segway in identify mode with non-zero verbosity\"\r\n\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/67/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:2fa50fe94599%0D842e05e19b02?from_pullrequest_id=67"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/67/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/67.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/67/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/67/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/67"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/67/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:2fa50fe94599%0D842e05e19b02?from_pullrequest_id=67"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/67/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/67/statuses_page=1.json"}}, "title": " Raise warning if running Segway in identify mode with non-zero verbosity.", "close_source_branch": false, "type": "pullrequest", "id": 67, "destination": {"commit": {"hash": "842e05e19b02", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/842e05e19b02.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/842e05e19b02"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-10-21T15:08:01.227779+00:00", "summary": {"raw": "Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.\r\n\r\n```\r\n#!python\r\n\r\n/scratch/segway/segway/run.py:847: UserWarning: Running Segway in identify mode with non-zero verbosity is currently not supported and may result in errors.\r\n  warn(\"Running Segway in identify mode with non-zero verbosity\"\r\n\r\n```", "markup": "markdown", "html": "<p>Raise warning if running Segway in identify mode with non-zero verbosity. Update documentation to reflect this constraint.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">scratch</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">segway</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">847</span><span class=\"p\">:</span> <span class=\"ne\">UserWarning</span><span class=\"p\">:</span> <span class=\"n\">Running</span> <span class=\"n\">Segway</span> <span class=\"ow\">in</span> <span class=\"n\">identify</span> <span class=\"n\">mode</span> <span class=\"k\">with</span> <span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span> <span class=\"n\">verbosity</span> <span class=\"ow\">is</span> <span class=\"n\">currently</span> <span class=\"ow\">not</span> <span class=\"n\">supported</span> <span class=\"ow\">and</span> <span class=\"n\">may</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"o\">.</span>\n  <span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running Segway in identify mode with non-zero verbosity&quot;</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "6b8cf096a6fd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/6b8cf096a6fd"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/6b8cf096a6fd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "identify-verbosity-warn"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-10-31T18:27:10.278615+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "2fa50fe94599", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/2fa50fe94599.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/2fa50fe94599"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This is a resubmission of and continuation of [pull request 52](#!/hoffmanlab/segway/pull-requests/52/resubmit-the-mixtures-of-gaussians-code/diff) as the owner of that repository is no longer working on this project.\r\n\r\nOutstanding issues/questions include:\r\n\r\n* All tests will have to be modified due to the changes in ```input.master``` and ```params.*.params.*``` files as well as checked that they still give the expected segmentation.\r\n\r\nCompleted:\r\n\r\n* The default varFloor value (when enabled) of 0.001 is arbitrary --> changed to 10^-5 based on discussion on segway-internal and convergence testing done on simpleseg\r\n* Remove ```--zscore``` from this pull request and move it into a separate one --> see [pull request #69](#!/hoffmanlab/segway/pull-requests/69/using-zscore-to-normalise-datatracks/diff)\r\n* Testing that implementation of multiple genomedata archives is working as expected\r\n* Setting ```varFloor``` option to be turned on by default in all cases (if GMM) to ensure convergence\r\n* Value of ```MIX_PSEUDOCOUNT``` (currently 1, suggested 100?) --> is now 100, as per discussion on segway-internal\r\n\r\nCurrently varFloor is passed to GMTK only if either specified (with or without GMM) or it's not specified and mixture models is run (in which case, a default value of 10^-5 is passed to ensure convergence).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/68/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:0193f4a9049b%0Dfd22b5dcced8?from_pullrequest_id=68"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/68/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/68.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/68/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/68/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/68"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/68/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:0193f4a9049b%0Dfd22b5dcced8?from_pullrequest_id=68"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/68/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/68/statuses_page=1.json"}}, "title": "Gaussian mixture models", "close_source_branch": false, "type": "pullrequest", "id": 68, "destination": {"commit": {"hash": "fd22b5dcced8", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/fd22b5dcced8.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/fd22b5dcced8"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-11-10T20:24:12.120842+00:00", "summary": {"raw": "This is a resubmission of and continuation of [pull request 52](#!/hoffmanlab/segway/pull-requests/52/resubmit-the-mixtures-of-gaussians-code/diff) as the owner of that repository is no longer working on this project.\r\n\r\nOutstanding issues/questions include:\r\n\r\n* All tests will have to be modified due to the changes in ```input.master``` and ```params.*.params.*``` files as well as checked that they still give the expected segmentation.\r\n\r\nCompleted:\r\n\r\n* The default varFloor value (when enabled) of 0.001 is arbitrary --> changed to 10^-5 based on discussion on segway-internal and convergence testing done on simpleseg\r\n* Remove ```--zscore``` from this pull request and move it into a separate one --> see [pull request #69](#!/hoffmanlab/segway/pull-requests/69/using-zscore-to-normalise-datatracks/diff)\r\n* Testing that implementation of multiple genomedata archives is working as expected\r\n* Setting ```varFloor``` option to be turned on by default in all cases (if GMM) to ensure convergence\r\n* Value of ```MIX_PSEUDOCOUNT``` (currently 1, suggested 100?) --> is now 100, as per discussion on segway-internal\r\n\r\nCurrently varFloor is passed to GMTK only if either specified (with or without GMM) or it's not specified and mixture models is run (in which case, a default value of 10^-5 is passed to ensure convergence).", "markup": "markdown", "html": "<p>This is a resubmission of and continuation of <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/pull-requests/52/resubmit-the-mixtures-of-gaussians-code/diff\" rel=\"nofollow\">pull request 52</a> as the owner of that repository is no longer working on this project.</p>\n<p>Outstanding issues/questions include:</p>\n<ul>\n<li>All tests will have to be modified due to the changes in <code>input.master</code> and <code>params.*.params.*</code> files as well as checked that they still give the expected segmentation.</li>\n</ul>\n<p>Completed:</p>\n<ul>\n<li>The default varFloor value (when enabled) of 0.001 is arbitrary --&gt; changed to 10^-5 based on discussion on segway-internal and convergence testing done on simpleseg</li>\n<li>Remove <code>--zscore</code> from this pull request and move it into a separate one --&gt; see <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/pull-requests/69/using-zscore-to-normalise-datatracks/diff\" rel=\"nofollow\">pull request #69</a></li>\n<li>Testing that implementation of multiple genomedata archives is working as expected</li>\n<li>Setting <code>varFloor</code> option to be turned on by default in all cases (if GMM) to ensure convergence</li>\n<li>Value of <code>MIX_PSEUDOCOUNT</code> (currently 1, suggested 100?) --&gt; is now 100, as per discussion on segway-internal</li>\n</ul>\n<p>Currently varFloor is passed to GMTK only if either specified (with or without GMM) or it's not specified and mixture models is run (in which case, a default value of 10^-5 is passed to ensure convergence).</p>", "type": "rendered"}, "source": {"commit": {"hash": "0193f4a9049b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway-gmm/commit/0193f4a9049b"}, "html": {"href": "https://bitbucket.org/rcwchan/segway-gmm/commits/0193f4a9049b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway-gmm"}, "html": {"href": "https://bitbucket.org/rcwchan/segway-gmm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1c264938-98af-4329-8742-d5efac935a24}ts=python"}}, "type": "repository", "name": "segway-GMM", "full_name": "rcwchan/segway-gmm", "uuid": "{1c264938-98af-4329-8742-d5efac935a24}"}, "branch": {"name": "default"}}, "comment_count": 56, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-12T14:42:29.452472+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "0193f4a9049b", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/0193f4a9049b.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/0193f4a9049b"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request separates the --zscore option from [pull request #68](#!/hoffmanlab/segway/pull-requests/68/gaussian-mixture-models/). Note: I have not changed anything about the zscore functionality except attempting to adapt it for the multiple genomedata case.\r\n\r\nIt was suggested to move the zscore option to a separate distribution, ie, ```DISTRIBUTION_ZSCORE_ASINH```.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/69/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:0e26b73e82ae%0Df04cce0da8be?from_pullrequest_id=69"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/69/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/69"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:0e26b73e82ae%0Df04cce0da8be?from_pullrequest_id=69"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/69/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69/statuses_page=1.json"}}, "title": "Using --zscore to normalise datatracks", "close_source_branch": false, "type": "pullrequest", "id": 69, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-12-09T16:40:41.446030+00:00", "summary": {"raw": "This pull request separates the --zscore option from [pull request #68](#!/hoffmanlab/segway/pull-requests/68/gaussian-mixture-models/). Note: I have not changed anything about the zscore functionality except attempting to adapt it for the multiple genomedata case.\r\n\r\nIt was suggested to move the zscore option to a separate distribution, ie, ```DISTRIBUTION_ZSCORE_ASINH```.", "markup": "markdown", "html": "<p>This pull request separates the --zscore option from <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/pull-requests/68/gaussian-mixture-models/\" rel=\"nofollow\">pull request #68</a>. Note: I have not changed anything about the zscore functionality except attempting to adapt it for the multiple genomedata case.</p>\n<p>It was suggested to move the zscore option to a separate distribution, ie, <code>DISTRIBUTION_ZSCORE_ASINH</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0e26b73e82ae", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/0e26b73e82ae"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/0e26b73e82ae"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "segway-zscore"}}, "comment_count": 17, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2017-05-01T18:14:00.217778+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "* Change training to submit as a segway-task and have observations written out to a temporary directory\r\n\r\n* Remove dead code from observations.write\r\n\r\n* Update train bundle task and use temporary observation lists\r\n\r\n* Add error messages when the --observations or --dinucleotide option is set\r\n\r\n* Re add segway-task usage string", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/70/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:4403e8f7e643%0D2fa50fe94599?from_pullrequest_id=70"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/70/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/70.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/70/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/70/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/70"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/70/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:4403e8f7e643%0D2fa50fe94599?from_pullrequest_id=70"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/70/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/70/statuses_page=1.json"}}, "title": "Add training as a segway-task and create observations in a temporary directory", "close_source_branch": false, "type": "pullrequest", "id": 70, "destination": {"commit": {"hash": "2fa50fe94599", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/2fa50fe94599.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/2fa50fe94599"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-01-06T19:04:15.137723+00:00", "summary": {"raw": "* Change training to submit as a segway-task and have observations written out to a temporary directory\r\n\r\n* Remove dead code from observations.write\r\n\r\n* Update train bundle task and use temporary observation lists\r\n\r\n* Add error messages when the --observations or --dinucleotide option is set\r\n\r\n* Re add segway-task usage string", "markup": "markdown", "html": "<ul>\n<li>\n<p>Change training to submit as a segway-task and have observations written out to a temporary directory</p>\n</li>\n<li>\n<p>Remove dead code from observations.write</p>\n</li>\n<li>\n<p>Update train bundle task and use temporary observation lists</p>\n</li>\n<li>\n<p>Add error messages when the --observations or --dinucleotide option is set</p>\n</li>\n<li>\n<p>Re add segway-task usage string</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 21, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-01-20T16:50:23.995415+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "4403e8f7e64372637c7fb80fa08e988002f65cd6", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/4403e8f7e64372637c7fb80fa08e988002f65cd6.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/4403e8f7e64372637c7fb80fa08e988002f65cd6"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This PR seems to fix Issue #77\r\n\r\nIt does the following strategies:\r\n\r\n- Opens the file with the correct permissions instead of chmod'ing it later. This seems to fix the error from happening on local machines\r\n\r\n- Runs the produced script with an explicit bash invocation instead of relying on the \"shebang\" comment at the top of the file. This seems to fix the issue when running on a cluster on a single node.\r\n\r\nIt also leaves the \"#!/usr/bin/env bash\" line in cmdline for convenience sake if the specific job needs to be run again", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/71/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:78c7d0d7b050%0D3039b02e2e3d?from_pullrequest_id=71"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/71/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/71.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/71/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/71/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/71"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/71/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:78c7d0d7b050%0D3039b02e2e3d?from_pullrequest_id=71"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/71/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/71/statuses_page=1.json"}}, "title": "Fix \"bad interprter: Text file busy\" error from submitted jobs", "close_source_branch": false, "type": "pullrequest", "id": 71, "destination": {"commit": {"hash": "3039b02e2e3d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/3039b02e2e3d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/3039b02e2e3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-01-24T21:04:21.550818+00:00", "summary": {"raw": "This PR seems to fix Issue #77\r\n\r\nIt does the following strategies:\r\n\r\n- Opens the file with the correct permissions instead of chmod'ing it later. This seems to fix the error from happening on local machines\r\n\r\n- Runs the produced script with an explicit bash invocation instead of relying on the \"shebang\" comment at the top of the file. This seems to fix the issue when running on a cluster on a single node.\r\n\r\nIt also leaves the \"#!/usr/bin/env bash\" line in cmdline for convenience sake if the specific job needs to be run again", "markup": "markdown", "html": "<p>This PR seems to fix Issue <a href=\"#!/hoffmanlab/segway/issues/77/gmtk-jobs-report-bad-interpreter-text-file\" rel=\"nofollow\" title=\"GMTK jobs report &quot;bad interpreter: Text file busy&quot;\" class=\"ap-connect-link\"><s>#77</s></a></p>\n<p>It does the following strategies:</p>\n<ul>\n<li>\n<p>Opens the file with the correct permissions instead of chmod'ing it later. This seems to fix the error from happening on local machines</p>\n</li>\n<li>\n<p>Runs the produced script with an explicit bash invocation instead of relying on the \"shebang\" comment at the top of the file. This seems to fix the issue when running on a cluster on a single node.</p>\n</li>\n</ul>\n<p>It also leaves the \"#!/usr/bin/env bash\" line in cmdline for convenience sake if the specific job needs to be run again</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-02-03T14:20:36.224113+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "78c7d0d7b050", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/78c7d0d7b050.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/78c7d0d7b050"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "shorten links", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/72/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:83abb62a9da4%0D258bab23a6b2?from_pullrequest_id=72"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/72/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/72.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/72/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/72/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/72"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/72/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:83abb62a9da4%0D258bab23a6b2?from_pullrequest_id=72"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/72/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/72/statuses_page=1.json"}}, "title": "shorten links", "close_source_branch": false, "type": "pullrequest", "id": 72, "destination": {"commit": {"hash": "258bab23a6b2", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/258bab23a6b2.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/258bab23a6b2"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-02-03T17:12:36.435862+00:00", "summary": {"raw": "shorten links", "markup": "markdown", "html": "<p>shorten links</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "mmendez12/shorten-links-1486141947180"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-12T14:46:42.401371+00:00", "author": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "merge_commit": {"hash": "83abb62a9da4", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/83abb62a9da4.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/83abb62a9da4"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "typo", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/73/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:258bab23a6b2%0D0193f4a9049b?from_pullrequest_id=73"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/73/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/73.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/73/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/73/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/73"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/73/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:258bab23a6b2%0D0193f4a9049b?from_pullrequest_id=73"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/73/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/73/statuses_page=1.json"}}, "title": "typo", "close_source_branch": false, "type": "pullrequest", "id": 73, "destination": {"commit": {"hash": "0193f4a9049b", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/0193f4a9049b.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/0193f4a9049b"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-02-03T17:13:58.387063+00:00", "summary": {"raw": "typo", "markup": "markdown", "html": "<p>typo</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "mmendez12/typo-1486142028974"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-12T14:45:13.330842+00:00", "author": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "merge_commit": {"hash": "258bab23a6b2", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/258bab23a6b2.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/258bab23a6b2"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Currently activated using ```--validation-fraction```, or ```--validation-coords```.\r\n\r\n* Using ```--validation-fraction```:\r\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.\r\n\r\n* Using ```--validation-coords```:\r\nThe validation set is whatever is specified in ```--validation-coords```, with ```--exclude-coords``` subtracted. Training set is whatever is specified in ```--include-coords```, with ```--exclude-coords``` subtracted.\r\n\r\nValidation set creation and validation itself are queued and submitted through ```segway-task```.\r\n\r\nIf validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.\r\n\r\nIf the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).\r\n\r\nSegway file structure remains intact with some additions: ```observations/validation``` contains the observations files/lists for the validation set. \r\n\r\n```log``` folder now additionally contains the following .tab files:\r\n\r\n* ```validation.output.xx.tab``` logs all validation windows, size, and log(prob(E)) for each round for instance xx\r\n* ```validation.sum.xx.tab``` logs the sum of log(prob(E))'s for each round for instance xx\r\n\r\n```likelihood``` folder now additionally contains the following .ll files:\r\n\r\n* ```validation.output.xx.ll``` logs the last validation output for instance xx (note: this is the full gmtkJT output)\r\n* ```validation.output.winner.xx.ll``` logs the so-far best validation output for instance xx\r\n* ```validation.sum.xx.ll``` logs the last full validation set log(prob(E)) for instance xx\r\n* ```validation.sum.winner.xx.ll``` logs the so-far best full validation set log(prob(E)) for instance xx\r\n\r\nAnd finally, at the end, ```validation.output.ll``` and ```validation.sum.ll``` will simply log the final best full validation set log(prob(E)) overall across all instances.\r\n\r\nI've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.\r\n\r\nA typical set of submitted tasks might look like this:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway-validate/test/data ]$ ./run.sh\r\nentering directory ./test-20170510.uhxw33\r\n+ SEGWAY_RAND_SEED=203078386\r\n+ segway --num-labels=4 --max-train-rounds=2 --validation-fraction=0.10 --split-sequences=7300 --cluster-opt= train ../test.genomedata traindir\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Wednesday May 10 2017, 12:48:04 EDT ____\r\nrunning locally 1: create_validation_set_chr21_9439553_9446643 ()\r\nrunning locally 2: create_validation_set_chr21_9552993_9560083 ()\r\nrunning locally 3: create_validation_set_chr21_9517543_9524633 ()\r\nrunning locally 1: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 2: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 3: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 4: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 5: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 6: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 7: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 8: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 9: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 10: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 11: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 12: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 13: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 14: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 15: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 16: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 17: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 18: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 19: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 20: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 21: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 22: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 23: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 24: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 25: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\n\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:baba755e090d%0D515ad3227556?from_pullrequest_id=74"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/74"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:baba755e090d%0D515ad3227556?from_pullrequest_id=74"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/statuses_page=1.json"}}, "title": "Validation on holdout set", "close_source_branch": true, "type": "pullrequest", "id": 74, "destination": {"commit": {"hash": "515ad3227556", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/515ad3227556.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/515ad3227556"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-05-10T17:43:47.518206+00:00", "summary": {"raw": "Currently activated using ```--validation-fraction```, or ```--validation-coords```.\r\n\r\n* Using ```--validation-fraction```:\r\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.\r\n\r\n* Using ```--validation-coords```:\r\nThe validation set is whatever is specified in ```--validation-coords```, with ```--exclude-coords``` subtracted. Training set is whatever is specified in ```--include-coords```, with ```--exclude-coords``` subtracted.\r\n\r\nValidation set creation and validation itself are queued and submitted through ```segway-task```.\r\n\r\nIf validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.\r\n\r\nIf the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).\r\n\r\nSegway file structure remains intact with some additions: ```observations/validation``` contains the observations files/lists for the validation set. \r\n\r\n```log``` folder now additionally contains the following .tab files:\r\n\r\n* ```validation.output.xx.tab``` logs all validation windows, size, and log(prob(E)) for each round for instance xx\r\n* ```validation.sum.xx.tab``` logs the sum of log(prob(E))'s for each round for instance xx\r\n\r\n```likelihood``` folder now additionally contains the following .ll files:\r\n\r\n* ```validation.output.xx.ll``` logs the last validation output for instance xx (note: this is the full gmtkJT output)\r\n* ```validation.output.winner.xx.ll``` logs the so-far best validation output for instance xx\r\n* ```validation.sum.xx.ll``` logs the last full validation set log(prob(E)) for instance xx\r\n* ```validation.sum.winner.xx.ll``` logs the so-far best full validation set log(prob(E)) for instance xx\r\n\r\nAnd finally, at the end, ```validation.output.ll``` and ```validation.sum.ll``` will simply log the final best full validation set log(prob(E)) overall across all instances.\r\n\r\nI've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.\r\n\r\nA typical set of submitted tasks might look like this:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway-validate/test/data ]$ ./run.sh\r\nentering directory ./test-20170510.uhxw33\r\n+ SEGWAY_RAND_SEED=203078386\r\n+ segway --num-labels=4 --max-train-rounds=2 --validation-fraction=0.10 --split-sequences=7300 --cluster-opt= train ../test.genomedata traindir\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Wednesday May 10 2017, 12:48:04 EDT ____\r\nrunning locally 1: create_validation_set_chr21_9439553_9446643 ()\r\nrunning locally 2: create_validation_set_chr21_9552993_9560083 ()\r\nrunning locally 3: create_validation_set_chr21_9517543_9524633 ()\r\nrunning locally 1: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 2: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 3: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 4: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 5: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 6: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 7: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 8: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 9: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 10: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 11: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 12: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 13: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 14: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 15: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 16: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 17: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 18: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 19: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 20: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 21: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 22: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 23: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 24: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 25: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\n\r\n```", "markup": "markdown", "html": "<p>Currently activated using <code>--validation-fraction</code>, or <code>--validation-coords</code>.</p>\n<ul>\n<li>\n<p>Using <code>--validation-fraction</code>:\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.</p>\n</li>\n<li>\n<p>Using <code>--validation-coords</code>:\nThe validation set is whatever is specified in <code>--validation-coords</code>, with <code>--exclude-coords</code> subtracted. Training set is whatever is specified in <code>--include-coords</code>, with <code>--exclude-coords</code> subtracted.</p>\n</li>\n</ul>\n<p>Validation set creation and validation itself are queued and submitted through <code>segway-task</code>.</p>\n<p>If validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.</p>\n<p>If the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).</p>\n<p>Segway file structure remains intact with some additions: <code>observations/validation</code> contains the observations files/lists for the validation set. </p>\n<p><code>log</code> folder now additionally contains the following .tab files:</p>\n<ul>\n<li><code>validation.output.xx.tab</code> logs all validation windows, size, and log(prob(E)) for each round for instance xx</li>\n<li><code>validation.sum.xx.tab</code> logs the sum of log(prob(E))'s for each round for instance xx</li>\n</ul>\n<p><code>likelihood</code> folder now additionally contains the following .ll files:</p>\n<ul>\n<li><code>validation.output.xx.ll</code> logs the last validation output for instance xx (note: this is the full gmtkJT output)</li>\n<li><code>validation.output.winner.xx.ll</code> logs the so-far best validation output for instance xx</li>\n<li><code>validation.sum.xx.ll</code> logs the last full validation set log(prob(E)) for instance xx</li>\n<li><code>validation.sum.winner.xx.ll</code> logs the so-far best full validation set log(prob(E)) for instance xx</li>\n</ul>\n<p>And finally, at the end, <code>validation.output.ll</code> and <code>validation.sum.ll</code> will simply log the final best full validation set log(prob(E)) overall across all instances.</p>\n<p>I've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.</p>\n<p>A typical set of submitted tasks might look like this:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway-validate/test/data <span class=\"o\">]</span>$ ./run.sh\nentering directory ./test-20170510.uhxw33\n+ <span class=\"nv\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"m\">203078386</span>\n+ segway --num-labels<span class=\"o\">=</span><span class=\"m\">4</span> --max-train-rounds<span class=\"o\">=</span><span class=\"m\">2</span> --validation-fraction<span class=\"o\">=</span><span class=\"m\">0</span>.10 --split-sequences<span class=\"o\">=</span><span class=\"m\">7300</span> --cluster-opt<span class=\"o\">=</span> train ../test.genomedata traindir\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS <span class=\"m\">0</span> AT Wednesday May <span class=\"m\">10</span> <span class=\"m\">2017</span>, <span class=\"m\">12</span>:48:04 EDT ____\nrunning locally <span class=\"m\">1</span>: create_validation_set_chr21_9439553_9446643 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: create_validation_set_chr21_9552993_9560083 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: create_validation_set_chr21_9517543_9524633 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">1</span>: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">4</span>: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">5</span>: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">6</span>: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">7</span>: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">8</span>: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">9</span>: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">10</span>: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">11</span>: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">12</span>: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">13</span>: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">14</span>: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">15</span>: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">16</span>: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">17</span>: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">18</span>: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">19</span>: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">20</span>: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">21</span>: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">22</span>: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">23</span>: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">24</span>: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">25</span>: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "c8b4d17a324f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/c8b4d17a324f"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/c8b4d17a324f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "segway-validate"}}, "comment_count": 204, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-08T15:07:33.633935+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "baba755e090d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/baba755e090d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/baba755e090d"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/75/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:3857dfb9beac%0Df4733393f233?from_pullrequest_id=75"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/75/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/75.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/75/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/75/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/75"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/75/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:3857dfb9beac%0Df4733393f233?from_pullrequest_id=75"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/75/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/75/statuses_page=1.json"}}, "title": "Modify regex in simplesubseg's jt_info files to account for different order in lists", "close_source_branch": false, "type": "pullrequest", "id": 75, "destination": {"commit": {"hash": "f4733393f233", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f4733393f233.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f4733393f233"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-05-12T16:13:44.382890+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "df477eaf2508", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/df477eaf2508"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/df477eaf2508"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "update-simplesubseg-jtinfo"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-12T16:39:50.507297+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "3857dfb9beac", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/3857dfb9beac.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/3857dfb9beac"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/76/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:13d4e9a1de8f%0D3857dfb9beac?from_pullrequest_id=76"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/76/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/76.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/76/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/76/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/76"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/76/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:13d4e9a1de8f%0D3857dfb9beac?from_pullrequest_id=76"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/76/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/76/statuses_page=1.json"}}, "title": "Update documentation to reflect addition of mixture of Gaussians and variance floor option", "close_source_branch": false, "type": "pullrequest", "id": 76, "destination": {"commit": {"hash": "3857dfb9beac", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/3857dfb9beac.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/3857dfb9beac"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-05-12T18:28:33.288452+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "7a21629918a4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/7a21629918a4"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/7a21629918a4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "gmm-documentation"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-16T14:59:12.719900+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "13d4e9a1de8f", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/13d4e9a1de8f.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/13d4e9a1de8f"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request adds the `simplevalidationcoords` testcase, intended to test the `--validation-coords` and `--minibatch-fraction` options. It is a clone of the `data` testcase, with the genomedata archive partitioned into non-overlapping training and validation coordinates. Training is done using minibatch.\r\n\r\n**Note**: this test case is affected by [Issue #114](#!/hoffmanlab/segway/issues/114/standard-output-not-being-captured) and will need to be updated once that is fixed.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/77/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:f0abbf484ea1%0Df04cce0da8be?from_pullrequest_id=77"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/77/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/77.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/77/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/77/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/77"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/77/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:f0abbf484ea1%0Df04cce0da8be?from_pullrequest_id=77"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/77/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/77/statuses_page=1.json"}}, "title": "Add simplevalidationcoords testcase", "close_source_branch": false, "type": "pullrequest", "id": 77, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-06-26T17:20:53.155963+00:00", "summary": {"raw": "This pull request adds the `simplevalidationcoords` testcase, intended to test the `--validation-coords` and `--minibatch-fraction` options. It is a clone of the `data` testcase, with the genomedata archive partitioned into non-overlapping training and validation coordinates. Training is done using minibatch.\r\n\r\n**Note**: this test case is affected by [Issue #114](#!/hoffmanlab/segway/issues/114/standard-output-not-being-captured) and will need to be updated once that is fixed.", "markup": "markdown", "html": "<p>This pull request adds the <code>simplevalidationcoords</code> testcase, intended to test the <code>--validation-coords</code> and <code>--minibatch-fraction</code> options. It is a clone of the <code>data</code> testcase, with the genomedata archive partitioned into non-overlapping training and validation coordinates. Training is done using minibatch.</p>\n<p><strong>Note</strong>: this test case is affected by <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/114/standard-output-not-being-captured\" rel=\"nofollow\">Issue #114</a> and will need to be updated once that is fixed.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f0abbf484ea1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/f0abbf484ea1"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/f0abbf484ea1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "validation-test"}}, "comment_count": 11, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2017-07-27T15:48:28.037980+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "Currently Segway fails to check it's training output when validation is *not* used. Specifically this case only occurs when running multiple instances.\r\n\r\nThis bug occurred since the default filename parameters for validation are \"None\" and Segway would assume that since \"None\" existed in the set of filenames to check when training was completed that something had gone wrong.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/78/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:d3189fa7b2b7%0Dd152512c92fb?from_pullrequest_id=78"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/78/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/78.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/78/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/78/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/78"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/78/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:d3189fa7b2b7%0Dd152512c92fb?from_pullrequest_id=78"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/78/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/78/statuses_page=1.json"}}, "title": "Fix validation output being checked erroneously", "close_source_branch": false, "type": "pullrequest", "id": 78, "destination": {"commit": {"hash": "d152512c92fb", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/d152512c92fb.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/d152512c92fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-07-11T21:46:18.065123+00:00", "summary": {"raw": "Currently Segway fails to check it's training output when validation is *not* used. Specifically this case only occurs when running multiple instances.\r\n\r\nThis bug occurred since the default filename parameters for validation are \"None\" and Segway would assume that since \"None\" existed in the set of filenames to check when training was completed that something had gone wrong.", "markup": "markdown", "html": "<p>Currently Segway fails to check it's training output when validation is <em>not</em> used. Specifically this case only occurs when running multiple instances.</p>\n<p>This bug occurred since the default filename parameters for validation are \"None\" and Segway would assume that since \"None\" existed in the set of filenames to check when training was completed that something had gone wrong.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d3189fa7b2b7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/d3189fa7b2b7"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/d3189fa7b2b7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "default"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-14T16:59:07.604120+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "d3189fa7b2b7", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/d3189fa7b2b7.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/d3189fa7b2b7"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Summary of changes:\r\n\r\n* DPMF, MC, and MX tables are now derived from the input params file instead of input master, if it is after the first iteration\r\n* DPMF tables now use a Dirichlet constant value instead of a uniform Dirichlet table\r\n\r\nIn theory, using a constant Dirichlet value instead of a uniform Dirichlet table (of the same value) should be mathematically equivalent.\r\n\r\nDPMF/MC/MX tables are now derived from the input params file for all jobs after the first iteration, instead of the input.master. This change to the DPMF table in particular may change parameter evolution slightly (you can think of the MC/MX tables as simply specifying cardinalities).\r\n\r\nAll tests retain their same annotation and parameter evolution except simplesemisupervised. Not sure if it's a numerical stability issue or something. One of the changes in the first params files is that a number is 2e-98 instead of 5e-120 (and other similar changes). My guess is that the parameter evolution spirals out of control from there. If I switch simplesemisupervised to use simpleseg's seed, it works fine again and produces a coherent annotation.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/79/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:7648e34cab1e%0Dc655b8ab2ba2?from_pullrequest_id=79"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/79/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/79"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:7648e34cab1e%0Dc655b8ab2ba2?from_pullrequest_id=79"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/79/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79/statuses_page=1.json"}}, "title": "Handle vanishing/splitting gaussians", "close_source_branch": true, "type": "pullrequest", "id": 79, "destination": {"commit": {"hash": "c655b8ab2ba2", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/c655b8ab2ba2.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/c655b8ab2ba2"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-08-17T20:13:27.634424+00:00", "summary": {"raw": "Summary of changes:\r\n\r\n* DPMF, MC, and MX tables are now derived from the input params file instead of input master, if it is after the first iteration\r\n* DPMF tables now use a Dirichlet constant value instead of a uniform Dirichlet table\r\n\r\nIn theory, using a constant Dirichlet value instead of a uniform Dirichlet table (of the same value) should be mathematically equivalent.\r\n\r\nDPMF/MC/MX tables are now derived from the input params file for all jobs after the first iteration, instead of the input.master. This change to the DPMF table in particular may change parameter evolution slightly (you can think of the MC/MX tables as simply specifying cardinalities).\r\n\r\nAll tests retain their same annotation and parameter evolution except simplesemisupervised. Not sure if it's a numerical stability issue or something. One of the changes in the first params files is that a number is 2e-98 instead of 5e-120 (and other similar changes). My guess is that the parameter evolution spirals out of control from there. If I switch simplesemisupervised to use simpleseg's seed, it works fine again and produces a coherent annotation.", "markup": "markdown", "html": "<p>Summary of changes:</p>\n<ul>\n<li>DPMF, MC, and MX tables are now derived from the input params file instead of input master, if it is after the first iteration</li>\n<li>DPMF tables now use a Dirichlet constant value instead of a uniform Dirichlet table</li>\n</ul>\n<p>In theory, using a constant Dirichlet value instead of a uniform Dirichlet table (of the same value) should be mathematically equivalent.</p>\n<p>DPMF/MC/MX tables are now derived from the input params file for all jobs after the first iteration, instead of the input.master. This change to the DPMF table in particular may change parameter evolution slightly (you can think of the MC/MX tables as simply specifying cardinalities).</p>\n<p>All tests retain their same annotation and parameter evolution except simplesemisupervised. Not sure if it's a numerical stability issue or something. One of the changes in the first params files is that a number is 2e-98 instead of 5e-120 (and other similar changes). My guess is that the parameter evolution spirals out of control from there. If I switch simplesemisupervised to use simpleseg's seed, it works fine again and produces a coherent annotation.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1d0e4ced97bf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/1d0e4ced97bf"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/1d0e4ced97bf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "handle-vanishing-gaussians"}}, "comment_count": 31, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-04T17:12:59.811277+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "7648e34cab1e", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/7648e34cab1e.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/7648e34cab1e"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This fixes https://bitbucket.org/hoffmanlab/segtools/issues/52, where component names were being outputted the analysis when it wasn't necessary for single gaussian models.\r\n\r\nAll models had to have their names updated since tools like Segtools rely on common naming conventions across the model file.\r\n\r\nTests will be updated if the PR is approved. All tests need to be updated with the now missing component number. The changes will come from a revert to the previous revision before the mixture of components changes.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/80/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:6374f52c206c%0D522de7ec5fd0?from_pullrequest_id=80"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/80/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/80.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/80/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/80/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/80"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/80/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:6374f52c206c%0D522de7ec5fd0?from_pullrequest_id=80"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/80/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/80/statuses_page=1.json"}}, "title": "Update GMTK model file to exclude component names when only 1 mixture component present", "close_source_branch": false, "type": "pullrequest", "id": 80, "destination": {"commit": {"hash": "522de7ec5fd0", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/522de7ec5fd0.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/522de7ec5fd0"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-10-26T18:47:40.396653+00:00", "summary": {"raw": "This fixes https://bitbucket.org/hoffmanlab/segtools/issues/52, where component names were being outputted the analysis when it wasn't necessary for single gaussian models.\r\n\r\nAll models had to have their names updated since tools like Segtools rely on common naming conventions across the model file.\r\n\r\nTests will be updated if the PR is approved. All tests need to be updated with the now missing component number. The changes will come from a revert to the previous revision before the mixture of components changes.", "markup": "markdown", "html": "<p>This fixes <a href=\"https://bitbucket.org/hoffmanlab/segtools/issues/52\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/hoffmanlab/segtools/issues/52</a>, where component names were being outputted the analysis when it wasn't necessary for single gaussian models.</p>\n<p>All models had to have their names updated since tools like Segtools rely on common naming conventions across the model file.</p>\n<p>Tests will be updated if the PR is approved. All tests need to be updated with the now missing component number. The changes will come from a revert to the previous revision before the mixture of components changes.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6374f52c206c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/6374f52c206c"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/6374f52c206c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-08T19:00:43.214797+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "6374f52c206c", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/6374f52c206c.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/6374f52c206c"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request outputs a \"window.bed\" into the working directory that contains the chromosome region and the segway index as the \"name\" field. This allows cross-referencing of problematic regions to specific Segway jobs and possibly troubleshooting how windows are selected.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/81/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:0e831c3836a9%0D6374f52c206c?from_pullrequest_id=81"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/81/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/81.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/81/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/81/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/81"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/81/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:0e831c3836a9%0D6374f52c206c?from_pullrequest_id=81"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/81/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/81/statuses_page=1.json"}}, "title": "Write out a window list showing chromosome regions and their respective index", "close_source_branch": true, "type": "pullrequest", "id": 81, "destination": {"commit": {"hash": "6374f52c206c", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/6374f52c206c.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/6374f52c206c"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-11-10T19:20:51.785877+00:00", "summary": {"raw": "This pull request outputs a \"window.bed\" into the working directory that contains the chromosome region and the segway index as the \"name\" field. This allows cross-referencing of problematic regions to specific Segway jobs and possibly troubleshooting how windows are selected.", "markup": "markdown", "html": "<p>This pull request outputs a \"window.bed\" into the working directory that contains the chromosome region and the segway index as the \"name\" field. This allows cross-referencing of problematic regions to specific Segway jobs and possibly troubleshooting how windows are selected.</p>", "type": "rendered"}, "source": {"commit": {"hash": "eed590145898", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/eed590145898"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/eed590145898"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "save-window-list"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-16T17:14:35.439907+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "0e831c3836a9", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/0e831c3836a9.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/0e831c3836a9"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Addresses Issue #117", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/82/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:9a17339b309e%0D25bd979b33dd?from_pullrequest_id=82"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/82/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/82.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/82/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/82/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/82"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/82/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:9a17339b309e%0D25bd979b33dd?from_pullrequest_id=82"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/82/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/82/statuses_page=1.json"}}, "title": "Merge chunks from all genomedata archives for window selection", "close_source_branch": true, "type": "pullrequest", "id": 82, "destination": {"commit": {"hash": "25bd979b33dd", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/25bd979b33dd.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/25bd979b33dd"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-11-20T21:09:21.834482+00:00", "summary": {"raw": "Addresses Issue #117", "markup": "markdown", "html": "<p>Addresses Issue <a href=\"#!/hoffmanlab/segway/issues/117/windows-with-multiple-genomedata-archives\" rel=\"nofollow\" title=\"Windows with multiple Genomedata archives are erroneously chosen with missing data\" class=\"ap-connect-link\"><s>#117</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "bc8d8fb34886", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/bc8d8fb34886"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/bc8d8fb34886"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "chunk-merge"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-26T22:09:51.328838+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "9a17339b309e", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/9a17339b309e.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/9a17339b309e"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request prevents users from running Segway with incorrect include-coords or validation-coords files.\r\n\r\nSpecifically in the current version Segway runs and crashes after hours of computation if the coord files contain chromosomes that are not in the genomedata archive.\r\n\r\nThis PR aims to solve this issue by\r\n\r\n- comparing the chromosomes from the coord files with the a genomdata archive before running a task\r\n- raising a Value Error if the coord file has extra chromosomes\r\n- reporting the chromosomes causing the issue to help users fixing it\r\n\r\nThis PR does not verify if the regions defined in the coord files exceed the chromosome sizes of the genomedata archives as it might be more relevant to issue #31. However it can be easily added if needed.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/83/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/mmendez12/segway:3731262e263c%0Df04cce0da8be?from_pullrequest_id=83"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/83/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/83.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/83/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/83/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/83"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/83/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mmendez12/segway:3731262e263c%0Df04cce0da8be?from_pullrequest_id=83"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/83/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/83/statuses_page=1.json"}}, "title": "Check external chrom", "close_source_branch": true, "type": "pullrequest", "id": 83, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-01-16T14:38:49.262348+00:00", "summary": {"raw": "This pull request prevents users from running Segway with incorrect include-coords or validation-coords files.\r\n\r\nSpecifically in the current version Segway runs and crashes after hours of computation if the coord files contain chromosomes that are not in the genomedata archive.\r\n\r\nThis PR aims to solve this issue by\r\n\r\n- comparing the chromosomes from the coord files with the a genomdata archive before running a task\r\n- raising a Value Error if the coord file has extra chromosomes\r\n- reporting the chromosomes causing the issue to help users fixing it\r\n\r\nThis PR does not verify if the regions defined in the coord files exceed the chromosome sizes of the genomedata archives as it might be more relevant to issue #31. However it can be easily added if needed.", "markup": "markdown", "html": "<p>This pull request prevents users from running Segway with incorrect include-coords or validation-coords files.</p>\n<p>Specifically in the current version Segway runs and crashes after hours of computation if the coord files contain chromosomes that are not in the genomedata archive.</p>\n<p>This PR aims to solve this issue by</p>\n<ul>\n<li>comparing the chromosomes from the coord files with the a genomdata archive before running a task</li>\n<li>raising a Value Error if the coord file has extra chromosomes</li>\n<li>reporting the chromosomes causing the issue to help users fixing it</li>\n</ul>\n<p>This PR does not verify if the regions defined in the coord files exceed the chromosome sizes of the genomedata archives as it might be more relevant to issue <a href=\"#!/hoffmanlab/segway/issues/31/better-warning-message-when-include-coords\" rel=\"nofollow\" title=\"Better warning message when --include-coords includes a region not in the genomedata assembly\" class=\"ap-connect-link\">#31</a>. However it can be easily added if needed.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3731262e263c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mmendez12/segway/commit/3731262e263c"}, "html": {"href": "https://bitbucket.org/mmendez12/segway/commits/3731262e263c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mmendez12/segway"}, "html": {"href": "https://bitbucket.org/mmendez12/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ae65acc-5f46-4a8c-aa7b-dd289c5488a4}ts=python"}}, "type": "repository", "name": "segway", "full_name": "mmendez12/segway", "uuid": "{4ae65acc-5f46-4a8c-aa7b-dd289c5488a4}"}, "branch": {"name": "check_external_chrom"}}, "comment_count": 18, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2018-05-16T21:08:59.477373+00:00", "author": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "merge_commit": null, "closed_by": null}, {"description": "* Create a job log file for each instance\r\n\r\n* Update doc and NEWS on job specific instance log files\r\n\r\nThis is to fix Issue #93", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/84/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:ec102e84a5ee%0De3f58159485f?from_pullrequest_id=84"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/84/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/84.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/84/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/84/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/84"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/84/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:ec102e84a5ee%0De3f58159485f?from_pullrequest_id=84"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/84/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/84/statuses_page=1.json"}}, "title": "Create job instance log files", "close_source_branch": true, "type": "pullrequest", "id": 84, "destination": {"commit": {"hash": "e3f58159485f", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/e3f58159485f.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/e3f58159485f"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-02-15T21:33:33.992294+00:00", "summary": {"raw": "* Create a job log file for each instance\r\n\r\n* Update doc and NEWS on job specific instance log files\r\n\r\nThis is to fix Issue #93", "markup": "markdown", "html": "<ul>\n<li>\n<p>Create a job log file for each instance</p>\n</li>\n<li>\n<p>Update doc and NEWS on job specific instance log files</p>\n</li>\n</ul>\n<p>This is to fix Issue <a href=\"#!/hoffmanlab/segway/issues/93/jobstab-occassionally-missing-lines-line\" rel=\"nofollow\" title=\"Jobs.tab occassionally missing lines - line Buffering for jobs.tab\" class=\"ap-connect-link\">#93</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "81faa7927882", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/81faa7927882"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/81faa7927882"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "job-instance-log-files"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-21T19:57:31.719932+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "ec102e84a5ee", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/ec102e84a5ee.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/ec102e84a5ee"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/85/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:d834f2586015%0Db142d973cdf5?from_pullrequest_id=85"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/85/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/85.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/85/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/85/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/85"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/85/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:d834f2586015%0Db142d973cdf5?from_pullrequest_id=85"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/85/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/85/statuses_page=1.json"}}, "title": "Add older numpy scalar and vector printing support for newer versions of numpy", "close_source_branch": true, "type": "pullrequest", "id": 85, "destination": {"commit": {"hash": "b142d973cdf5", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b142d973cdf5.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b142d973cdf5"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-02-21T20:27:01.263501+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "3545d692b74e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/3545d692b74e"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/3545d692b74e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "legacy-print-fix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T19:00:07.982347+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "d834f2586015", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/d834f2586015.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/d834f2586015"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Fixes Issue #114", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/86/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:b142d973cdf5%0D6238f505a679?from_pullrequest_id=86"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/86/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/86.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/86/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/86/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/86"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/86/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:b142d973cdf5%0D6238f505a679?from_pullrequest_id=86"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/86/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/86/statuses_page=1.json"}}, "title": "Fix regression of stdout not being captured when training", "close_source_branch": true, "type": "pullrequest", "id": 86, "destination": {"commit": {"hash": "6238f505a679", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/6238f505a679.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/6238f505a679"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-02-23T21:56:49.846202+00:00", "summary": {"raw": "Fixes Issue #114", "markup": "markdown", "html": "<p>Fixes Issue <a href=\"#!/hoffmanlab/segway/issues/114/standard-output-not-being-captured\" rel=\"nofollow\" title=\"Standard output not being captured\" class=\"ap-connect-link\"><s>#114</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "af12dbd370df", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/af12dbd370df"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/af12dbd370df"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "train-stdout-fix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T13:43:39.916560+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "b142d973cdf5", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b142d973cdf5.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b142d973cdf5"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Bugfix for Issue#125 by fixing the number of arguments to the Results tuple during dry runs.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/87/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:50c798f683cf%0D654034756682?from_pullrequest_id=87"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/87/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/87.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/87/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/87/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/87"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/87/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:50c798f683cf%0D654034756682?from_pullrequest_id=87"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/87/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/87/statuses_page=1.json"}}, "title": "Bugfix for Issue#125 by fixing the number of arguments to the Results tuple during dry runs.", "close_source_branch": false, "type": "pullrequest", "id": 87, "destination": {"commit": {"hash": "654034756682", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/654034756682.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/654034756682"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T19:20:14.442674+00:00", "summary": {"raw": "Bugfix for Issue#125 by fixing the number of arguments to the Results tuple during dry runs.", "markup": "markdown", "html": "<p>Bugfix for Issue<a href=\"#!/hoffmanlab/segway/issues/125/dry-run-fatal-typeerror\" rel=\"nofollow\" title=\"--dry-run fatal TypeError\" class=\"ap-connect-link\"><s>#125</s></a> by fixing the number of arguments to the Results tuple during dry runs.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a3f6fcd2d0b5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/OrdiNeu/segway-1/commit/a3f6fcd2d0b5"}, "html": {"href": "https://bitbucket.org/OrdiNeu/segway-1/commits/a3f6fcd2d0b5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/OrdiNeu/segway-1"}, "html": {"href": "https://bitbucket.org/OrdiNeu/segway-1"}, "avatar": {"href": "data/bytebucket.org/ravatar/{010f53eb-7554-4a59-909d-0cfc1b41a9eb}ts=python"}}, "type": "repository", "name": "segway-1", "full_name": "OrdiNeu/segway-1", "uuid": "{010f53eb-7554-4a59-909d-0cfc1b41a9eb}"}, "branch": {"name": "OrdiNeu/bugfix-for-issue125-by-fixing-the-number-1521228000892"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-28T13:59:01.464153+00:00", "author": {"display_name": "Francis Nguyen", "uuid": "{06de6dec-2820-4695-b0e3-b8c48232677f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D"}, "html": {"href": "https://bitbucket.org/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:503caffc-22fe-47ba-8947-a81aec8f3bd6/b41d6226-076e-4353-8327-c08d1a612552/128"}}, "nickname": "Francis Nguyen", "type": "user", "account_id": "557058:503caffc-22fe-47ba-8947-a81aec8f3bd6"}, "merge_commit": {"hash": "50c798f683cf", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/50c798f683cf.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/50c798f683cf"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "NEWS update with --dry-run fix", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/88/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/OrdiNeu/segway:a736bae899bb%0D654034756682?from_pullrequest_id=88"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/88/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/88.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/88/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/88/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/88"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/88/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/OrdiNeu/segway:a736bae899bb%0D654034756682?from_pullrequest_id=88"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/88/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/88/statuses_page=1.json"}}, "title": "NEWS update with --dry-run fix", "close_source_branch": false, "type": "pullrequest", "id": 88, "destination": {"commit": {"hash": "654034756682", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/654034756682.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/654034756682"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T19:42:54.530308+00:00", "summary": {"raw": "NEWS update with --dry-run fix", "markup": "markdown", "html": "<p>NEWS update with --dry-run fix</p>", "type": "rendered"}, "source": {"commit": {"hash": "a736bae899bb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/OrdiNeu/segway/commit/a736bae899bb"}, "html": {"href": "https://bitbucket.org/OrdiNeu/segway/commits/a736bae899bb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/OrdiNeu/segway"}, "html": {"href": "https://bitbucket.org/OrdiNeu/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0a1a5294-4834-4709-9979-142c31f9ec2d}ts=python"}}, "type": "repository", "name": "segway", "full_name": "OrdiNeu/segway", "uuid": "{0a1a5294-4834-4709-9979-142c31f9ec2d}"}, "branch": {"name": "OrdiNeu/news-update-with-dryrun-fix-1521229363347"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "This should be merged in with PR #87", "updated_on": "2018-03-16T19:53:58.283151+00:00", "author": {"display_name": "Francis Nguyen", "uuid": "{06de6dec-2820-4695-b0e3-b8c48232677f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D"}, "html": {"href": "https://bitbucket.org/%7B06de6dec-2820-4695-b0e3-b8c48232677f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:503caffc-22fe-47ba-8947-a81aec8f3bd6/b41d6226-076e-4353-8327-c08d1a612552/128"}}, "nickname": "Francis Nguyen", "type": "user", "account_id": "557058:503caffc-22fe-47ba-8947-a81aec8f3bd6"}, "merge_commit": null, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "* Initial Python3 updates\r\n* Fix modernize style issues\r\n* Update likelihood and trifiles to match variability\r\n* Fixed log order changes\r\n* Fixed gmtk version in pipeline", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/89/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:034dd283e238%0Dbea7c32c32e6?from_pullrequest_id=89"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/89/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/89"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:034dd283e238%0Dbea7c32c32e6?from_pullrequest_id=89"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/89/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/statuses_page=1.json"}}, "title": "Python 3 Compatibility", "close_source_branch": false, "type": "pullrequest", "id": 89, "destination": {"commit": {"hash": "bea7c32c32e6", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/bea7c32c32e6.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/bea7c32c32e6"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-06-20T13:04:14.317394+00:00", "summary": {"raw": "* Initial Python3 updates\r\n* Fix modernize style issues\r\n* Update likelihood and trifiles to match variability\r\n* Fixed log order changes\r\n* Fixed gmtk version in pipeline", "markup": "markdown", "html": "<ul>\n<li>Initial Python3 updates</li>\n<li>Fix modernize style issues</li>\n<li>Update likelihood and trifiles to match variability</li>\n<li>Fixed log order changes</li>\n<li>Fixed gmtk version in pipeline</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f3e85f1fb200", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/f3e85f1fb200"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/f3e85f1fb200"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "default"}}, "comment_count": 59, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-06T16:24:35.902583+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": {"hash": "034dd283e238", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/034dd283e238.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/034dd283e238"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Addresses Issue #128\r\n\r\nCurrently observation files are specified from the main Segway process to segway-task.\r\n\r\nThey were being submitted based on the main Segway process\u2019s temporary directory had filenames that started with \u201c/tmp/\u2026\u201d. When attempting to concatenate to path objects with the specified \u201c/tmp/\u2026\u201d, since there was the root \u201c/\u201d it would ignore the temporary directory prefix specifed by segway-task. This was only true of the observation files themselves and not the observation list files specifying the files. Some files were being cleaned up \\(based on segway-task\u2019s temporary current working directory\\) while others were not.\r\n\r\nThe following changes were made to address the issues around temporary observation files:\r\n\r\n1. Observation files, including their names, are solely specified in the segway-task process.\r\n2. All observation files are now all created using mkstemp which includes \u2018O\\_EXCL\u2019 access \\(available on NFS\\) and a secure naming scheme as not to interfere with other processes in case multiple processes are using the same genomic window. No special environment TMPDIR should be necessary \\(from segway-wrapper\\) but is probably still worth keeping.\r\n3. File exceptions are allowed to be raised during file creation or closure \\(e.g. quota issues on NFS\\)\r\n4. All observation files created in this manner are removed after the task is completed or it runs into an exception.\r\n5. All this observation file handling was refactored out and shared across the tasks so all tasks should have the same functionality.\r\n\r\nThe user's `TMPDIR` environment variable will still be the root for where observation files are created since it is set specifically by `segway-wrapper.sh` which spawns segway-task.\r\n\r\nIn `segway-wrapper.sh` as well there is some consideration for removing dead code but may be kept to be extra cautious, but the for loop inside the exit handler, `on_exit`, does nothing:\r\n\r\n        # delete any arguments that begin with $submit_tmpdir\r\n        for arg in \"$@\"; do\r\n            if [[ \"$arg\" == \"$submit_tmpdir\"* ]]; then\r\n                rm -rf \"$TMPDIR\" 2>/dev/null || true\r\n            fi\r\n        done\r\n\r\nThe `$submit_tmpdir` is the parent process Segway's tmpdir. No arguments are supplied \\(in `$@`\\) since the command being run is the script created in the cmdline folder which takes no arguments.\r\n\r\nAfter finishing review, the tests will need to be updated for the cmdline/details/log differences since observation arguments have either been removed or have a different naming scheme \\(no longer based on window ID\\).\r\n\r\n\u200c", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/90/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:50f116fc1fdd%0D40e5016c3fbe?from_pullrequest_id=90"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/90/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/90"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:50f116fc1fdd%0D40e5016c3fbe?from_pullrequest_id=90"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/90/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/statuses_page=1.json"}}, "title": "Fix observation files being temporarly and securely created in segway task", "close_source_branch": true, "type": "pullrequest", "id": 90, "destination": {"commit": {"hash": "40e5016c3fbe", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/40e5016c3fbe.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/40e5016c3fbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-07-12T19:02:00.099406+00:00", "summary": {"raw": "Addresses Issue #128\r\n\r\nCurrently observation files are specified from the main Segway process to segway-task.\r\n\r\nThey were being submitted based on the main Segway process\u2019s temporary directory had filenames that started with \u201c/tmp/\u2026\u201d. When attempting to concatenate to path objects with the specified \u201c/tmp/\u2026\u201d, since there was the root \u201c/\u201d it would ignore the temporary directory prefix specifed by segway-task. This was only true of the observation files themselves and not the observation list files specifying the files. Some files were being cleaned up \\(based on segway-task\u2019s temporary current working directory\\) while others were not.\r\n\r\nThe following changes were made to address the issues around temporary observation files:\r\n\r\n1. Observation files, including their names, are solely specified in the segway-task process.\r\n2. All observation files are now all created using mkstemp which includes \u2018O\\_EXCL\u2019 access \\(available on NFS\\) and a secure naming scheme as not to interfere with other processes in case multiple processes are using the same genomic window. No special environment TMPDIR should be necessary \\(from segway-wrapper\\) but is probably still worth keeping.\r\n3. File exceptions are allowed to be raised during file creation or closure \\(e.g. quota issues on NFS\\)\r\n4. All observation files created in this manner are removed after the task is completed or it runs into an exception.\r\n5. All this observation file handling was refactored out and shared across the tasks so all tasks should have the same functionality.\r\n\r\nThe user's `TMPDIR` environment variable will still be the root for where observation files are created since it is set specifically by `segway-wrapper.sh` which spawns segway-task.\r\n\r\nIn `segway-wrapper.sh` as well there is some consideration for removing dead code but may be kept to be extra cautious, but the for loop inside the exit handler, `on_exit`, does nothing:\r\n\r\n        # delete any arguments that begin with $submit_tmpdir\r\n        for arg in \"$@\"; do\r\n            if [[ \"$arg\" == \"$submit_tmpdir\"* ]]; then\r\n                rm -rf \"$TMPDIR\" 2>/dev/null || true\r\n            fi\r\n        done\r\n\r\nThe `$submit_tmpdir` is the parent process Segway's tmpdir. No arguments are supplied \\(in `$@`\\) since the command being run is the script created in the cmdline folder which takes no arguments.\r\n\r\nAfter finishing review, the tests will need to be updated for the cmdline/details/log differences since observation arguments have either been removed or have a different naming scheme \\(no longer based on window ID\\).\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Addresses Issue <a href=\"#!/hoffmanlab/segway/issues/128/stale-file-handle-error\" rel=\"nofollow\" title=\"Stale file handle error\" class=\"ap-connect-link\">#128</a></p>\n<p>Currently observation files are specified from the main Segway process to segway-task.</p>\n<p>They were being submitted based on the main Segway process\u2019s temporary directory had filenames that started with \u201c/tmp/\u2026\u201d. When attempting to concatenate to path objects with the specified \u201c/tmp/\u2026\u201d, since there was the root \u201c/\u201d it would ignore the temporary directory prefix specifed by segway-task. This was only true of the observation files themselves and not the observation list files specifying the files. Some files were being cleaned up (based on segway-task\u2019s temporary current working directory) while others were not.</p>\n<p>The following changes were made to address the issues around temporary observation files:</p>\n<ol>\n<li>Observation files, including their names, are solely specified in the segway-task process.</li>\n<li>All observation files are now all created using mkstemp which includes \u2018O_EXCL\u2019 access (available on NFS) and a secure naming scheme as not to interfere with other processes in case multiple processes are using the same genomic window. No special environment TMPDIR should be necessary (from segway-wrapper) but is probably still worth keeping.</li>\n<li>File exceptions are allowed to be raised during file creation or closure (e.g. quota issues on NFS)</li>\n<li>All observation files created in this manner are removed after the task is completed or it runs into an exception.</li>\n<li>All this observation file handling was refactored out and shared across the tasks so all tasks should have the same functionality.</li>\n</ol>\n<p>The user's <code>TMPDIR</code> environment variable will still be the root for where observation files are created since it is set specifically by <code>segway-wrapper.sh</code> which spawns segway-task.</p>\n<p>In <code>segway-wrapper.sh</code> as well there is some consideration for removing dead code but may be kept to be extra cautious, but the for loop inside the exit handler, <code>on_exit</code>, does nothing:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"cp\"># delete any arguments that begin with $submit_tmpdir</span>\n    <span class=\"k\">for</span> <span class=\"n\">arg</span> <span class=\"k\">in</span> <span class=\"s\">&quot;$@&quot;</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n        <span class=\"k\">if</span> <span class=\"p\">[[</span> <span class=\"s\">&quot;$arg&quot;</span> <span class=\"o\">==</span> <span class=\"s\">&quot;$submit_tmpdir&quot;</span><span class=\"o\">*</span> <span class=\"p\">]];</span> <span class=\"n\">then</span>\n            <span class=\"n\">rm</span> <span class=\"o\">-</span><span class=\"n\">rf</span> <span class=\"s\">&quot;$TMPDIR&quot;</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span> <span class=\"o\">||</span> <span class=\"nb\">true</span>\n        <span class=\"n\">fi</span>\n    <span class=\"n\">done</span>\n</pre></div>\n\n\n<p>The <code>$submit_tmpdir</code> is the parent process Segway's tmpdir. No arguments are supplied (in <code>$@</code>) since the command being run is the script created in the cmdline folder which takes no arguments.</p>\n<p>After finishing review, the tests will need to be updated for the cmdline/details/log differences since observation arguments have either been removed or have a different naming scheme (no longer based on window ID).</p>\n<p>\u200c</p>", "type": "rendered"}, "source": {"commit": {"hash": "1e0a0949075d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/1e0a0949075d"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/1e0a0949075d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "temporary-observation-files"}}, "comment_count": 43, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-04T17:24:53.624901+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "50f116fc1fdd", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/50f116fc1fdd.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/50f116fc1fdd"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "* Removed all subdir creation from train\\_run\r\n* Train\\_run loads options from train.tab\r\n* Add function to load windows from bed file\r\n* Import Window class from util\r\n* Train has been split\r\n* Added train steps test case\r\n* Produce input.master for each train instance in init\r\n* Save and reload the identify options\r\n* Save train\\_results files to their own directories\r\n* revert function parse\\_options back to pre steps code. Change was accidental\r\n* Fixed saving bug in results file where it doubled the work dirname\r\n* Used identify.tab to pass options between steps and prevent train.tab from overwriting\r\n* Added identify steps test case\r\n* Changed parse\\_options to only allow the correct options to be applied to each of the steps and added train-run-round\r\n* Fixed fromoptions in cases where the options were not compatible with the step given\r\n* Updated simpleidentifysteps test case for new command line changes\r\n* Updated all test cases to match new command line order\r\n* fixed touchstone for simpleconcat\r\n* Revisions to step seperation code\r\n* Remove resolution from identify\r\n* Fix test cases for resolution changes\r\n* Added train-run-round functionality to recover\\_train\\_instance\r\n* some how got rid of tri file creation\r\n* Updated train.tab files for new train options\r\n* Checked for specific errno instead of just 2\r\n* Changed dockerfile to hoffmanlab one in pipeline\r\n* removed new line in \\_util imports\r\n* fixed configparser imports\r\n* Python 3 revision performed in the wrong branch\r\n* Fixed argument order in command line\r\n* Fixed functionaliy of cmdline\r\n* Fixed track\\_indexes in task.py\r\n* Updated test cases for different cmdline order\r\n* Fixed docker image in pipeline\r\n* added setup.py from default segway", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/91/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/mjmm13/segway_python23:0fe8356e684d%0D924c16530bd3?from_pullrequest_id=91"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/91/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/91.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/91/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/91/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/91"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/91/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mjmm13/segway_python23:0fe8356e684d%0D924c16530bd3?from_pullrequest_id=91"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/91/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/91/statuses_page=1.json"}}, "title": "Split Steps", "close_source_branch": false, "type": "pullrequest", "id": 91, "destination": {"commit": {"hash": "924c16530bd3", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/924c16530bd3.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/924c16530bd3"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-09-10T17:19:23.770997+00:00", "summary": {"raw": "* Removed all subdir creation from train\\_run\r\n* Train\\_run loads options from train.tab\r\n* Add function to load windows from bed file\r\n* Import Window class from util\r\n* Train has been split\r\n* Added train steps test case\r\n* Produce input.master for each train instance in init\r\n* Save and reload the identify options\r\n* Save train\\_results files to their own directories\r\n* revert function parse\\_options back to pre steps code. Change was accidental\r\n* Fixed saving bug in results file where it doubled the work dirname\r\n* Used identify.tab to pass options between steps and prevent train.tab from overwriting\r\n* Added identify steps test case\r\n* Changed parse\\_options to only allow the correct options to be applied to each of the steps and added train-run-round\r\n* Fixed fromoptions in cases where the options were not compatible with the step given\r\n* Updated simpleidentifysteps test case for new command line changes\r\n* Updated all test cases to match new command line order\r\n* fixed touchstone for simpleconcat\r\n* Revisions to step seperation code\r\n* Remove resolution from identify\r\n* Fix test cases for resolution changes\r\n* Added train-run-round functionality to recover\\_train\\_instance\r\n* some how got rid of tri file creation\r\n* Updated train.tab files for new train options\r\n* Checked for specific errno instead of just 2\r\n* Changed dockerfile to hoffmanlab one in pipeline\r\n* removed new line in \\_util imports\r\n* fixed configparser imports\r\n* Python 3 revision performed in the wrong branch\r\n* Fixed argument order in command line\r\n* Fixed functionaliy of cmdline\r\n* Fixed track\\_indexes in task.py\r\n* Updated test cases for different cmdline order\r\n* Fixed docker image in pipeline\r\n* added setup.py from default segway", "markup": "markdown", "html": "<ul>\n<li>Removed all subdir creation from train_run</li>\n<li>Train_run loads options from train.tab</li>\n<li>Add function to load windows from bed file</li>\n<li>Import Window class from util</li>\n<li>Train has been split</li>\n<li>Added train steps test case</li>\n<li>Produce input.master for each train instance in init</li>\n<li>Save and reload the identify options</li>\n<li>Save train_results files to their own directories</li>\n<li>revert function parse_options back to pre steps code. Change was accidental</li>\n<li>Fixed saving bug in results file where it doubled the work dirname</li>\n<li>Used identify.tab to pass options between steps and prevent train.tab from overwriting</li>\n<li>Added identify steps test case</li>\n<li>Changed parse_options to only allow the correct options to be applied to each of the steps and added train-run-round</li>\n<li>Fixed fromoptions in cases where the options were not compatible with the step given</li>\n<li>Updated simpleidentifysteps test case for new command line changes</li>\n<li>Updated all test cases to match new command line order</li>\n<li>fixed touchstone for simpleconcat</li>\n<li>Revisions to step seperation code</li>\n<li>Remove resolution from identify</li>\n<li>Fix test cases for resolution changes</li>\n<li>Added train-run-round functionality to recover_train_instance</li>\n<li>some how got rid of tri file creation</li>\n<li>Updated train.tab files for new train options</li>\n<li>Checked for specific errno instead of just 2</li>\n<li>Changed dockerfile to hoffmanlab one in pipeline</li>\n<li>removed new line in _util imports</li>\n<li>fixed configparser imports</li>\n<li>Python 3 revision performed in the wrong branch</li>\n<li>Fixed argument order in command line</li>\n<li>Fixed functionaliy of cmdline</li>\n<li>Fixed track_indexes in task.py</li>\n<li>Updated test cases for different cmdline order</li>\n<li>Fixed docker image in pipeline</li>\n<li>added setup.py from default segway</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "0fe8356e684d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/0fe8356e684d"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/0fe8356e684d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "step_split"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2018-11-20T17:54:43.102662+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": null, "closed_by": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}}, {"description": "This fix updates the function `run_posterior_save_bed` such that it can handle multiple genomedata archives as input.\r\n\r\nThe updated code is almost identical to the `run_viterbi_save_bed`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/92/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/mmendez12/segway:bc26c8a4e050%0Df04cce0da8be?from_pullrequest_id=92"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/92/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/92.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/92/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/92/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/92"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/92/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mmendez12/segway:bc26c8a4e050%0Df04cce0da8be?from_pullrequest_id=92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/92/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/92/statuses_page=1.json"}}, "title": "Allow run_posterior_save_bed to handle multiple genomedata archives", "close_source_branch": true, "type": "pullrequest", "id": 92, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-09-12T21:27:53.034164+00:00", "summary": {"raw": "This fix updates the function `run_posterior_save_bed` such that it can handle multiple genomedata archives as input.\r\n\r\nThe updated code is almost identical to the `run_viterbi_save_bed`", "markup": "markdown", "html": "<p>This fix updates the function <code>run_posterior_save_bed</code> such that it can handle multiple genomedata archives as input.</p>\n<p>The updated code is almost identical to the <code>run_viterbi_save_bed</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "bc26c8a4e050", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mmendez12/segway/commit/bc26c8a4e050"}, "html": {"href": "https://bitbucket.org/mmendez12/segway/commits/bc26c8a4e050"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mmendez12/segway"}, "html": {"href": "https://bitbucket.org/mmendez12/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ae65acc-5f46-4a8c-aa7b-dd289c5488a4}ts=python"}}, "type": "repository", "name": "segway", "full_name": "mmendez12/segway", "uuid": "{4ae65acc-5f46-4a8c-aa7b-dd289c5488a4}"}, "branch": {"name": "fix_posterior_with_multiple_GDA"}}, "comment_count": 0, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2018-09-12T21:27:53.077866+00:00", "author": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "merge_commit": null, "closed_by": null}, {"description": "# Segway Modular API Updates\r\n\r\n## Introduction of Steps\r\n\r\nThis introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:\r\n\r\n* init: Generates all input files, but does not submit any jobs to GMTK \\(besides triangulate\\). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.\r\n* run: Submits jobs to GMTK. Produces params and viterbi files.\r\n* finish: Selects the best training and identify instances and uses these to generate the output files.\r\n* train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.\r\n\r\n## User Interface Changes\r\n\r\nUsers wishing to run all steps of a task together may continue to do so the same way they do now, writing segway <task>. \r\n\r\nTo run a single step, use the command segway <task>-<step>. For example, segway identify-run will run the identify associated programs. \r\n\r\nA change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:\r\n\r\n`\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"`\r\n\r\nWhere global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:4e3898f31fb7%0Dcad3fd722588?from_pullrequest_id=93"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/93"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:4e3898f31fb7%0Dcad3fd722588?from_pullrequest_id=93"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/statuses_page=1.json"}}, "title": "Split Segway Tasks into Steps", "close_source_branch": false, "type": "pullrequest", "id": 93, "destination": {"commit": {"hash": "cad3fd722588", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/cad3fd722588.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/cad3fd722588"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-11-20T17:56:09.226053+00:00", "summary": {"raw": "# Segway Modular API Updates\r\n\r\n## Introduction of Steps\r\n\r\nThis introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:\r\n\r\n* init: Generates all input files, but does not submit any jobs to GMTK \\(besides triangulate\\). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.\r\n* run: Submits jobs to GMTK. Produces params and viterbi files.\r\n* finish: Selects the best training and identify instances and uses these to generate the output files.\r\n* train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.\r\n\r\n## User Interface Changes\r\n\r\nUsers wishing to run all steps of a task together may continue to do so the same way they do now, writing segway <task>. \r\n\r\nTo run a single step, use the command segway <task>-<step>. For example, segway identify-run will run the identify associated programs. \r\n\r\nA change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:\r\n\r\n`\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"`\r\n\r\nWhere global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.", "markup": "markdown", "html": "<h1 id=\"markdown-header-segway-modular-api-updates\">Segway Modular API Updates</h1>\n<h2 id=\"markdown-header-introduction-of-steps\">Introduction of Steps</h2>\n<p>This introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:</p>\n<ul>\n<li>init: Generates all input files, but does not submit any jobs to GMTK (besides triangulate). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.</li>\n<li>run: Submits jobs to GMTK. Produces params and viterbi files.</li>\n<li>finish: Selects the best training and identify instances and uses these to generate the output files.</li>\n<li>train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.</li>\n</ul>\n<h2 id=\"markdown-header-user-interface-changes\">User Interface Changes</h2>\n<p>Users wishing to run all steps of a task together may continue to do so the same way they do now, writing segway &lt;task&gt;. </p>\n<p>To run a single step, use the command segway &lt;task&gt;-&lt;step&gt;. For example, segway identify-run will run the identify associated programs. </p>\n<p>A change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:</p>\n<p><code>\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"</code></p>\n<p>Where global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7979932f6d34", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/7979932f6d34"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/7979932f6d34"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "step_split"}}, "comment_count": 228, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-07-02T15:36:01.318340+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": {"hash": "4e3898f31fb7", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/4e3898f31fb7.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/4e3898f31fb7"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "technical.rst: change ``jobs.instance.tab`` to use same format as other multi-instance filenames", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/94/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:cad3fd722588%0D5b3322baf8c6?from_pullrequest_id=94"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/94/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/94.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/94/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/94/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/94"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/94/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:cad3fd722588%0D5b3322baf8c6?from_pullrequest_id=94"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/94/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/94/statuses_page=1.json"}}, "title": "technical.rst: change ``jobs.instance.tab`` to use same format as other multi-instance filenames", "close_source_branch": true, "type": "pullrequest", "id": 94, "destination": {"commit": {"hash": "5b3322baf8c6", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/5b3322baf8c6.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/5b3322baf8c6"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-12-07T22:26:16.096470+00:00", "summary": {"raw": "technical.rst: change ``jobs.instance.tab`` to use same format as other multi-instance filenames", "markup": "markdown", "html": "<p>technical.rst: change <code>jobs.instance.tab</code> to use same format as other multi-instance filenames</p>", "type": "rendered"}, "source": {"commit": {"hash": "bd6b9c57df25", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/bd6b9c57df25.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/bd6b9c57df25"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "hoffman/technicalrst-1544221549710"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-25T14:44:53.211505+00:00", "author": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "merge_commit": {"hash": "cad3fd722588", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/cad3fd722588.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/cad3fd722588"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "This pull request adds support for the SLURM cluster system \\(18.08\\).\r\n\r\n[Current DRMAA driver used for testing](https://github.com/natefoo/slurm-drmaa/releases/tag/1.2.0-dev.107b432). Note that this driver is the only currently maintained driver that works with SLURM 18.08.\r\n\r\nThere are two native specification options that are not included that may be worth considering for future improvements:\r\n\r\n* --mem-per-cpu, maximum memory to be requested per cpu\r\n* --tmp, minimum temporary disk space \\(must specify size unit\\)\r\n\r\nAddresses Issue #4", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/95/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:c655b8ab2ba2%0D924c16530bd3?from_pullrequest_id=95"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/95/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/95.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/95/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/95/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/95"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/95/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:c655b8ab2ba2%0D924c16530bd3?from_pullrequest_id=95"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/95/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/95/statuses_page=1.json"}}, "title": "Add support for SLURM 18.08", "close_source_branch": true, "type": "pullrequest", "id": 95, "destination": {"commit": {"hash": "924c16530bd3", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/924c16530bd3.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/924c16530bd3"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-02-04T16:49:24.459151+00:00", "summary": {"raw": "This pull request adds support for the SLURM cluster system \\(18.08\\).\r\n\r\n[Current DRMAA driver used for testing](https://github.com/natefoo/slurm-drmaa/releases/tag/1.2.0-dev.107b432). Note that this driver is the only currently maintained driver that works with SLURM 18.08.\r\n\r\nThere are two native specification options that are not included that may be worth considering for future improvements:\r\n\r\n* --mem-per-cpu, maximum memory to be requested per cpu\r\n* --tmp, minimum temporary disk space \\(must specify size unit\\)\r\n\r\nAddresses Issue #4", "markup": "markdown", "html": "<p>This pull request adds support for the SLURM cluster system (18.08).</p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/natefoo/slurm-drmaa/releases/tag/1.2.0-dev.107b432\" rel=\"nofollow\">Current DRMAA driver used for testing</a>. Note that this driver is the only currently maintained driver that works with SLURM 18.08.</p>\n<p>There are two native specification options that are not included that may be worth considering for future improvements:</p>\n<ul>\n<li>--mem-per-cpu, maximum memory to be requested per cpu</li>\n<li>--tmp, minimum temporary disk space (must specify size unit)</li>\n</ul>\n<p>Addresses Issue <a href=\"#!/hoffmanlab/segway/issues/4/add-slurm-cluster-system\" rel=\"nofollow\" title=\"Add Slurm cluster system\" class=\"ap-connect-link\"><s>#4</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "4e48886b46c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/4e48886b46c5"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/4e48886b46c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "slurm-18"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-26T15:48:12.463767+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "c655b8ab2ba2", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/c655b8ab2ba2.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/c655b8ab2ba2"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "These changes fix numerical and line-ordering issues that have arisen due to newer GLIBC versions.\r\n\r\nTo deal with current and future lines printing out-of-order a `(%__ANY_LINE__%)` option when placed at the beginning of the line allows the remainder of the line \\(which may have regex escapes in it\\) to be matched in any line in the queried file.\r\n\r\nNumeric issues from [different rounding rules of arcsinh](https://stackoverflow.com/questions/53088270/why-is-there-different-asinh-output-from-numpy-depending-on-os/53090288) were addressed with more permissive floating point precision in the output. Some posterior probabilities were changed as a result but only be a single percentage point.\r\n\r\nThe testing image used in Bitbucket will be updated after this pull request is merged.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/96/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:aa1d4172af29%0D7648e34cab1e?from_pullrequest_id=96"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/96/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/96.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/96/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/96/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/96"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/96/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:aa1d4172af29%0D7648e34cab1e?from_pullrequest_id=96"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/96/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/96/statuses_page=1.json"}}, "title": "GLIBC test touchstone update", "close_source_branch": true, "type": "pullrequest", "id": 96, "destination": {"commit": {"hash": "7648e34cab1e", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/7648e34cab1e.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/7648e34cab1e"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-02-27T21:08:39.345650+00:00", "summary": {"raw": "These changes fix numerical and line-ordering issues that have arisen due to newer GLIBC versions.\r\n\r\nTo deal with current and future lines printing out-of-order a `(%__ANY_LINE__%)` option when placed at the beginning of the line allows the remainder of the line \\(which may have regex escapes in it\\) to be matched in any line in the queried file.\r\n\r\nNumeric issues from [different rounding rules of arcsinh](https://stackoverflow.com/questions/53088270/why-is-there-different-asinh-output-from-numpy-depending-on-os/53090288) were addressed with more permissive floating point precision in the output. Some posterior probabilities were changed as a result but only be a single percentage point.\r\n\r\nThe testing image used in Bitbucket will be updated after this pull request is merged.", "markup": "markdown", "html": "<p>These changes fix numerical and line-ordering issues that have arisen due to newer GLIBC versions.</p>\n<p>To deal with current and future lines printing out-of-order a <code>(%__ANY_LINE__%)</code> option when placed at the beginning of the line allows the remainder of the line (which may have regex escapes in it) to be matched in any line in the queried file.</p>\n<p>Numeric issues from <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/53088270/why-is-there-different-asinh-output-from-numpy-depending-on-os/53090288\" rel=\"nofollow\">different rounding rules of arcsinh</a> were addressed with more permissive floating point precision in the output. Some posterior probabilities were changed as a result but only be a single percentage point.</p>\n<p>The testing image used in Bitbucket will be updated after this pull request is merged.</p>", "type": "rendered"}, "source": {"commit": {"hash": "84c929a40dbf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/84c929a40dbf"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/84c929a40dbf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "glibc-test-update"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-04T17:14:10.361043+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "aa1d4172af29", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/aa1d4172af29.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/aa1d4172af29"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "Currently each GMTK mixture contains a dense probability mass function which specifies component responsibilities. This changes makes it so that the dense probability mass function only has a single value of 1 when the number of mixture components is one. This effectively stops components from splitting.\r\n\r\nThis PR effectively reverts the DPMF changes to before the initial addition of mixture components for the case of a single component.\r\n\r\nThe new DPMF and MX definitions for a single mixture now look something like this:\r\n\r\n```\r\nDPMF_IN_FILE inline\r\n1\r\n-0 dpmf_always 1 1.0\r\n\r\n...\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack1\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/97/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:9fd8733f00f2%0D3a04329392bf?from_pullrequest_id=97"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/97/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/97.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/97/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/97/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/97"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/97/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:9fd8733f00f2%0D3a04329392bf?from_pullrequest_id=97"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/97/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/97/statuses_page=1.json"}}, "title": "Prevent a single gaussian mixture from splitting", "close_source_branch": true, "type": "pullrequest", "id": 97, "destination": {"commit": {"hash": "3a04329392bf", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/3a04329392bf.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/3a04329392bf"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-03-21T19:21:39.859433+00:00", "summary": {"raw": "Currently each GMTK mixture contains a dense probability mass function which specifies component responsibilities. This changes makes it so that the dense probability mass function only has a single value of 1 when the number of mixture components is one. This effectively stops components from splitting.\r\n\r\nThis PR effectively reverts the DPMF changes to before the initial addition of mixture components for the case of a single component.\r\n\r\nThe new DPMF and MX definitions for a single mixture now look something like this:\r\n\r\n```\r\nDPMF_IN_FILE inline\r\n1\r\n-0 dpmf_always 1 1.0\r\n\r\n...\r\n\r\nMX_IN_FILE inline\r\n8\r\n\r\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack1\r\n```", "markup": "markdown", "html": "<p>Currently each GMTK mixture contains a dense probability mass function which specifies component responsibilities. This changes makes it so that the dense probability mass function only has a single value of 1 when the number of mixture components is one. This effectively stops components from splitting.</p>\n<p>This PR effectively reverts the DPMF changes to before the initial addition of mixture components for the case of a single component.</p>\n<p>The new DPMF and MX definitions for a single mixture now look something like this:</p>\n<div class=\"codehilite\"><pre><span></span>DPMF_IN_FILE inline\n1\n-0 dpmf_always 1 1.0\n\n...\n\nMX_IN_FILE inline\n8\n\n0 1 mx_seg0_subseg0_testtrack1 1 dpmf_always mc_asinh_norm_seg0_subseg0_testtrack1\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "8036a6a77eb7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway/commit/8036a6a77eb7"}, "html": {"href": "https://bitbucket.org/ericr86/segway/commits/8036a6a77eb7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ericr86/segway"}, "html": {"href": "https://bitbucket.org/ericr86/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e4afec35-c393-4c1b-9d35-155fcd95ef33}ts=python"}}, "type": "repository", "name": "segway", "full_name": "ericr86/segway", "uuid": "{e4afec35-c393-4c1b-9d35-155fcd95ef33}"}, "branch": {"name": "no-single-mixutre-split"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-25T16:07:48.446365+00:00", "author": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "merge_commit": {"hash": "9fd8733f00f2", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/9fd8733f00f2.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/9fd8733f00f2"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "## Introduction\r\n\r\nThis pull request implements virtual evidence during training \\(disabled during identification\\). It is partly \\(namely the VE structure\\) based off of Max Libbrecht's measure-prop branch.  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\) \r\n\r\n![](data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n## User changes\r\n\r\nThere are no changes to users without VE.\r\n\r\nIf a user wishes to use virtual evidence, they should supply a 'virtual evidence file' to Segway with the option `--virtual-evidence`. This virtual evidence file should be of BED3 format where the 4th column is a string containing the label:prior pairs the user wishes to specify, delimited by commas. For example,\r\n\r\n```\r\nchr1    0    1000    0:0.9,1:0.05\r\n```\r\n\r\nSpecifies a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n```\r\nchr1    0    1000    0:0.4\r\n```\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## How it works\r\n\r\nVirtual evidence is similar to supervision in that values need to be supplied at each GMTK frame \\(with multiple frames per Segway window\\). However, the values supplied are CPTs, not observations, and so it does not work \\(as far as I know\\) to place them in the usual int/float observation files.\r\n\r\nTo this end, I used Segway's existing temporary observation files framework to create temporary CPTs \\(one large CPT per window, with one vector of priors for each GMTK frame in that window\\) and a list of these CPTs \\(`virtual_evidence_list_filename`\\).\r\n\r\nDuring training, the cpp directive `VIRTUAL_EVIDENCE_LIST_FILENAME` is given a value of `VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER` when creating the task to send to segway-task. `VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER` is then replaced within the cppCommand string with the temporarily created `virtual_evidence_list_filename` \\(with its list of CPTs per window\\).\r\n\r\nThe presence for virtual evidence is supplied identically as for data and supervision labels--appended to the int block and subsequently passed forwards to GMTK for use.\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n```\r\nchr1    0   1    0:0.5,1:0.2\r\nchr1    1    2    1:0.4\r\n```\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n```\r\nlabel           0   1   2\r\nchr1    0   1   0.5 0.2 0.3\r\nchr1    1   2   0.3 0.4 0.3\r\n```\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n```\r\nchr1    0   10  0.4 0.3 0.4\r\n```\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nFollowing discussion with Eric, I created the following virtual evidence bedfile and supplied it to simpleseg:\r\n\r\n```\r\nchr1    0   1000    0:0.9\r\nchr1    4000    5000    0:0.9\r\n```\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n```\r\nchr1    0   1000    0   1000    .   0   1000    27,158,119\r\nchr1    1000    2000    1   1000    .   1000    2000    217,95,2\r\nchr1    2000    3000    2   1000    .   2000    3000    117,112,179\r\nchr1    3000    4000    3   1000    .   3000    4000    231,41,138\r\nchr1    4000    5000    0   1000    .   4000    5000    27,158,119\r\nchr1    5000    6000    1   1000    .   5000    6000    217,95,2\r\nchr1    6000    7000    2   1000    .   6000    7000    117,112,179\r\nchr1    7000    8000    3   1000    .   7000    8000    231,41,138\r\n```\r\n\r\nI have named this test case `simplevirtualevidence`.\r\n\r\n## Remaining work\r\n\r\nAs discussed with Max Libbrecht over email, it might be interesting to enable VE during identification \\(allowing priors to influence Viterbi\\) in a future PR.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/98/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/rcwchan/segway:1defedc4139a%0Df04cce0da8be?from_pullrequest_id=98"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/98/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/98"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:1defedc4139a%0Df04cce0da8be?from_pullrequest_id=98"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/98/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/statuses_page=1.json"}}, "title": "Implement virtual evidence during training", "close_source_branch": true, "type": "pullrequest", "id": 98, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-04-04T15:48:33.028561+00:00", "summary": {"raw": "## Introduction\r\n\r\nThis pull request implements virtual evidence during training \\(disabled during identification\\). It is partly \\(namely the VE structure\\) based off of Max Libbrecht's measure-prop branch.  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\) \r\n\r\n![](data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n## User changes\r\n\r\nThere are no changes to users without VE.\r\n\r\nIf a user wishes to use virtual evidence, they should supply a 'virtual evidence file' to Segway with the option `--virtual-evidence`. This virtual evidence file should be of BED3 format where the 4th column is a string containing the label:prior pairs the user wishes to specify, delimited by commas. For example,\r\n\r\n```\r\nchr1    0    1000    0:0.9,1:0.05\r\n```\r\n\r\nSpecifies a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n```\r\nchr1    0    1000    0:0.4\r\n```\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## How it works\r\n\r\nVirtual evidence is similar to supervision in that values need to be supplied at each GMTK frame \\(with multiple frames per Segway window\\). However, the values supplied are CPTs, not observations, and so it does not work \\(as far as I know\\) to place them in the usual int/float observation files.\r\n\r\nTo this end, I used Segway's existing temporary observation files framework to create temporary CPTs \\(one large CPT per window, with one vector of priors for each GMTK frame in that window\\) and a list of these CPTs \\(`virtual_evidence_list_filename`\\).\r\n\r\nDuring training, the cpp directive `VIRTUAL_EVIDENCE_LIST_FILENAME` is given a value of `VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER` when creating the task to send to segway-task. `VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER` is then replaced within the cppCommand string with the temporarily created `virtual_evidence_list_filename` \\(with its list of CPTs per window\\).\r\n\r\nThe presence for virtual evidence is supplied identically as for data and supervision labels--appended to the int block and subsequently passed forwards to GMTK for use.\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n```\r\nchr1    0   1    0:0.5,1:0.2\r\nchr1    1    2    1:0.4\r\n```\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n```\r\nlabel           0   1   2\r\nchr1    0   1   0.5 0.2 0.3\r\nchr1    1   2   0.3 0.4 0.3\r\n```\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n```\r\nchr1    0   10  0.4 0.3 0.4\r\n```\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nFollowing discussion with Eric, I created the following virtual evidence bedfile and supplied it to simpleseg:\r\n\r\n```\r\nchr1    0   1000    0:0.9\r\nchr1    4000    5000    0:0.9\r\n```\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n```\r\nchr1    0   1000    0   1000    .   0   1000    27,158,119\r\nchr1    1000    2000    1   1000    .   1000    2000    217,95,2\r\nchr1    2000    3000    2   1000    .   2000    3000    117,112,179\r\nchr1    3000    4000    3   1000    .   3000    4000    231,41,138\r\nchr1    4000    5000    0   1000    .   4000    5000    27,158,119\r\nchr1    5000    6000    1   1000    .   5000    6000    217,95,2\r\nchr1    6000    7000    2   1000    .   6000    7000    117,112,179\r\nchr1    7000    8000    3   1000    .   7000    8000    231,41,138\r\n```\r\n\r\nI have named this test case `simplevirtualevidence`.\r\n\r\n## Remaining work\r\n\r\nAs discussed with Max Libbrecht over email, it might be interesting to enable VE during identification \\(allowing priors to influence Viterbi\\) in a future PR.", "markup": "markdown", "html": "<h2 id=\"markdown-header-introduction\">Introduction</h2>\n<p>This pull request implements virtual evidence during training (disabled during identification). It is partly (namely the VE structure) based off of Max Libbrecht's measure-prop branch.<br />\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent (segment label) A at a particular position is a particular label (ie P(C=1|A=a)).</p>\n<p>In other words, the binary virtual child C exists only to constrain the parent (segment label) to be a particular value (supervised label) with the specified prior probability.</p>\n<p>I have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.</p>\n<p>The revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence (as there is a different Ct|Qt CPT at each t.) </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png\" /></p>\n<h2 id=\"markdown-header-user-changes\">User changes</h2>\n<p>There are no changes to users without VE.</p>\n<p>If a user wishes to use virtual evidence, they should supply a 'virtual evidence file' to Segway with the option <code>--virtual-evidence</code>. This virtual evidence file should be of BED3 format where the 4th column is a string containing the label:prior pairs the user wishes to specify, delimited by commas. For example,</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0    1000    0:0.9,1:0.05\n</pre></div>\n\n\n<p>Specifies a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1(0,1000).</p>\n<p>At positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0    1000    0:0.4\n</pre></div>\n\n\n<p>all labels but label 0 would be given a prior probability of (1-0.4)/3=0.2.</p>\n<p>For positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels (though given 0 weight by Segway later due to the presence variable).</p>\n<h2 id=\"markdown-header-how-it-works\">How it works</h2>\n<p>Virtual evidence is similar to supervision in that values need to be supplied at each GMTK frame (with multiple frames per Segway window). However, the values supplied are CPTs, not observations, and so it does not work (as far as I know) to place them in the usual int/float observation files.</p>\n<p>To this end, I used Segway's existing temporary observation files framework to create temporary CPTs (one large CPT per window, with one vector of priors for each GMTK frame in that window) and a list of these CPTs (<code>virtual_evidence_list_filename</code>).</p>\n<p>During training, the cpp directive <code>VIRTUAL_EVIDENCE_LIST_FILENAME</code> is given a value of <code>VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER</code> when creating the task to send to segway-task. <code>VIRTUAL_EVIDENCE_LIST_FILENAME_PLACEHOLDER</code> is then replaced within the cppCommand string with the temporarily created <code>virtual_evidence_list_filename</code> (with its list of CPTs per window).</p>\n<p>The presence for virtual evidence is supplied identically as for data and supervision labels--appended to the int block and subsequently passed forwards to GMTK for use.</p>\n<h2 id=\"markdown-header-resolution-and-downsampling\">Resolution and downsampling</h2>\n<p>In order to downsample virtual evidence (<code>get_downsampled_virtual_evidence_data_and_presence</code>), I decided to implement the following rule:</p>\n<p>Let resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability (over the position axis) over these positions. The presence is then the number of positions that have any priors specified.</p>\n<p>For example, with 3 total labels with resolution 10:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0   1    0:0.5,1:0.2\nchr1    1    2    1:0.4\n</pre></div>\n\n\n<p>this expands (inferring uniform priors for remaining labels) into:</p>\n<div class=\"codehilite\"><pre><span></span>label           0   1   2\nchr1    0   1   0.5 0.2 0.3\nchr1    1   2   0.3 0.4 0.3\n</pre></div>\n\n\n<p>we take the average over these positions to obtain:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0   10  0.4 0.3 0.4\n</pre></div>\n\n\n<p>with presence 2.</p>\n<p>Now let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.</p>\n<p>In both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.</p>\n<h2 id=\"markdown-header-test-case\">Test case</h2>\n<p>Following discussion with Eric, I created the following virtual evidence bedfile and supplied it to simpleseg:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0   1000    0:0.9\nchr1    4000    5000    0:0.9\n</pre></div>\n\n\n<p>This is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:</p>\n<div class=\"codehilite\"><pre><span></span>chr1    0   1000    0   1000    .   0   1000    27,158,119\nchr1    1000    2000    1   1000    .   1000    2000    217,95,2\nchr1    2000    3000    2   1000    .   2000    3000    117,112,179\nchr1    3000    4000    3   1000    .   3000    4000    231,41,138\nchr1    4000    5000    0   1000    .   4000    5000    27,158,119\nchr1    5000    6000    1   1000    .   5000    6000    217,95,2\nchr1    6000    7000    2   1000    .   6000    7000    117,112,179\nchr1    7000    8000    3   1000    .   7000    8000    231,41,138\n</pre></div>\n\n\n<p>I have named this test case <code>simplevirtualevidence</code>.</p>\n<h2 id=\"markdown-header-remaining-work\">Remaining work</h2>\n<p>As discussed with Max Libbrecht over email, it might be interesting to enable VE during identification (allowing priors to influence Viterbi) in a future PR.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1defedc4139a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/1defedc4139a"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/1defedc4139a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "virtualevidence"}}, "comment_count": 54, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2019-07-29T15:00:39.023794+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": null, "closed_by": null}, {"description": "Changed method of passing genomedata archive names and track indexes to segway task during the identify and posterior tasks to match train. Before identify would pass the unique archive names separated by commas and the track indexes separated by commas for one archive, and semi-colons between archives. Meaning two archives with one and two tracks would be passed as:\r\n\r\n> \u201c../gd\\_archive1,../gd\\_archive2\u201c \u201c0,1;0\u201c\r\n\r\nThis was changed to match train, which passes an archive multiple times, once for each track present. The previous example therefore becomes\r\n\r\n> \u201c../gd\\_archive1,../gd\\_archive1,../gd\\_archive2\u201c \u201c0,1,0\u201c\r\n\r\nThis solves a previously described bug, where segway would fail during identify if given archives with different number of tracks.\r\n\r\nModified the multiple datasets test case, by adding an additional track to two of the four genomedata archives provided. This gives a situation where two worlds are trained, each with two genomedata archives with one and two tracks in them. The added track is a clone of one of the existing ones, meaning the finally viterbi output remained unchanged, though the params obviousl did.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/99/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:e9c52989b680%0Db3646a21705d?from_pullrequest_id=99"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/99/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/99.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/99/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/99/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/99"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/99/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:e9c52989b680%0Db3646a21705d?from_pullrequest_id=99"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/99/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/99/statuses_page=1.json"}}, "title": "Multiple gd archive", "close_source_branch": false, "type": "pullrequest", "id": 99, "destination": {"commit": {"hash": "b3646a21705d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3646a21705d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3646a21705d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-05-15T20:26:41.844245+00:00", "summary": {"raw": "Changed method of passing genomedata archive names and track indexes to segway task during the identify and posterior tasks to match train. Before identify would pass the unique archive names separated by commas and the track indexes separated by commas for one archive, and semi-colons between archives. Meaning two archives with one and two tracks would be passed as:\r\n\r\n> \u201c../gd\\_archive1,../gd\\_archive2\u201c \u201c0,1;0\u201c\r\n\r\nThis was changed to match train, which passes an archive multiple times, once for each track present. The previous example therefore becomes\r\n\r\n> \u201c../gd\\_archive1,../gd\\_archive1,../gd\\_archive2\u201c \u201c0,1,0\u201c\r\n\r\nThis solves a previously described bug, where segway would fail during identify if given archives with different number of tracks.\r\n\r\nModified the multiple datasets test case, by adding an additional track to two of the four genomedata archives provided. This gives a situation where two worlds are trained, each with two genomedata archives with one and two tracks in them. The added track is a clone of one of the existing ones, meaning the finally viterbi output remained unchanged, though the params obviousl did.", "markup": "markdown", "html": "<p>Changed method of passing genomedata archive names and track indexes to segway task during the identify and posterior tasks to match train. Before identify would pass the unique archive names separated by commas and the track indexes separated by commas for one archive, and semi-colons between archives. Meaning two archives with one and two tracks would be passed as:</p>\n<blockquote>\n<p>\u201c../gd_archive1,../gd_archive2\u201c \u201c0,1;0\u201c</p>\n</blockquote>\n<p>This was changed to match train, which passes an archive multiple times, once for each track present. The previous example therefore becomes</p>\n<blockquote>\n<p>\u201c../gd_archive1,../gd_archive1,../gd_archive2\u201c \u201c0,1,0\u201c</p>\n</blockquote>\n<p>This solves a previously described bug, where segway would fail during identify if given archives with different number of tracks.</p>\n<p>Modified the multiple datasets test case, by adding an additional track to two of the four genomedata archives provided. This gives a situation where two worlds are trained, each with two genomedata archives with one and two tracks in them. The added track is a clone of one of the existing ones, meaning the finally viterbi output remained unchanged, though the params obviousl did.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b65d5f0a0554", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/b65d5f0a0554"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/b65d5f0a0554"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "multiple-gd-archive"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-24T15:04:29.739928+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": {"hash": "e9c52989b680", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/e9c52989b680.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/e9c52989b680"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"description": "## Introduction\r\n\r\nThis pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.\r\n\r\nDescription provided by Rachel Chan in her original [pull request](#!/hoffmanlab/segway/pull-requests/98) is as follows:  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\)\r\n\r\n![](data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n\u200c\r\n\r\n## User Interface\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.\r\n\r\nDuring annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n## Input File\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\n## Resolution and downsampling\r\n\r\nSection taken from Rachel Chan\u2019s original PR, with very slight modification for new interface:\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`1 chr1 0 10 0.4 0.3 0.4`\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nThis is a test case created and described by Rachel Chan. We supply the following virtual evidence priors to the simpleseg test case:\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n`chr1 4000 5000 0 0.9`\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n`chr1 0 1000 0 1000 . 0 1000 27,158,119`\r\n\r\n`chr1 1000 2000 1 1000 . 1000 2000 217,95,2`\r\n\r\n`chr1 2000 3000 2 1000 . 2000 3000 117,112,179`\r\n\r\n`chr1 3000 4000 3 1000 . 3000 4000 231,41,138`\r\n\r\n`chr1 4000 5000 0 1000 . 4000 5000 27,158,119`\r\n\r\n`chr1 5000 6000 1 1000 . 5000 6000 217,95,2`\r\n\r\n`chr1 6000 7000 2 1000 . 6000 7000 117,112,179`\r\n\r\n`chr1 7000 8000 3 1000 . 7000 8000 231,41,138`\r\n\r\nThis test case has been named `simplevirtualevidence`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/100/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:05ab48931538%0D8cbdd3f79d65?from_pullrequest_id=100"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/100/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:05ab48931538%0D8cbdd3f79d65?from_pullrequest_id=100"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/100/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/statuses_page=1.json"}}, "title": "Implement virtual evidence for all segway tasks", "close_source_branch": false, "type": "pullrequest", "id": 100, "destination": {"commit": {"hash": "8cbdd3f79d65", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/8cbdd3f79d65.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/8cbdd3f79d65"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2019-05-24T14:11:09.122989+00:00", "summary": {"raw": "## Introduction\r\n\r\nThis pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.\r\n\r\nDescription provided by Rachel Chan in her original [pull request](#!/hoffmanlab/segway/pull-requests/98) is as follows:  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\)\r\n\r\n![](data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n\u200c\r\n\r\n## User Interface\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.\r\n\r\nDuring annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n## Input File\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\n## Resolution and downsampling\r\n\r\nSection taken from Rachel Chan\u2019s original PR, with very slight modification for new interface:\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`1 chr1 0 10 0.4 0.3 0.4`\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nThis is a test case created and described by Rachel Chan. We supply the following virtual evidence priors to the simpleseg test case:\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n`chr1 4000 5000 0 0.9`\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n`chr1 0 1000 0 1000 . 0 1000 27,158,119`\r\n\r\n`chr1 1000 2000 1 1000 . 1000 2000 217,95,2`\r\n\r\n`chr1 2000 3000 2 1000 . 2000 3000 117,112,179`\r\n\r\n`chr1 3000 4000 3 1000 . 3000 4000 231,41,138`\r\n\r\n`chr1 4000 5000 0 1000 . 4000 5000 27,158,119`\r\n\r\n`chr1 5000 6000 1 1000 . 5000 6000 217,95,2`\r\n\r\n`chr1 6000 7000 2 1000 . 6000 7000 117,112,179`\r\n\r\n`chr1 7000 8000 3 1000 . 7000 8000 231,41,138`\r\n\r\nThis test case has been named `simplevirtualevidence`.", "markup": "markdown", "html": "<h2 id=\"markdown-header-introduction\">Introduction</h2>\n<p>This pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.</p>\n<p>Description provided by Rachel Chan in her original <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/pull-requests/98\" rel=\"nofollow\">pull request</a> is as follows:<br />\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent (segment label) A at a particular position is a particular label (ie P(C=1|A=a)).</p>\n<p>In other words, the binary virtual child C exists only to constrain the parent (segment label) to be a particular value (supervised label) with the specified prior probability.</p>\n<p>I have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.</p>\n<p>The revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence (as there is a different Ct|Qt CPT at each t.)</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png\" />\n\u200c</p>\n<h2 id=\"markdown-header-user-interface\">User Interface</h2>\n<p>No change for users not running Virtual Evidence.</p>\n<p>Users supplying virtual evidence while running an entire task together (ie segway train or segway annotate) will supply the virtual evidence file with --virtual-evidence.</p>\n<p>Users supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.</p>\n<p>During annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.</p>\n<p>In addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.</p>\n<h2 id=\"markdown-header-input-file\">Input File</h2>\n<p>The virtual evidence file should be of BED3+2 format where the 4th column is the label index and the fifth column is the prior. For example,</p>\n<p><code>chr1 0 1000 0 0.9</code></p>\n<p>If running on multiple worlds, the VE file is in BED3+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,</p>\n<p><code>chr1 0 1000 0 0.9 1</code></p>\n<p>These examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1(0,1000).</p>\n<p>At positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:</p>\n<p><code>chr1 0 1000 0 0.4</code></p>\n<p>all labels but label 0 would be given a prior probability of (1-0.4)/3=0.2.</p>\n<h2 id=\"markdown-header-resolution-and-downsampling\">Resolution and downsampling</h2>\n<p>Section taken from Rachel Chan\u2019s original PR, with very slight modification for new interface:</p>\n<p>In order to downsample virtual evidence (<code>get_downsampled_virtual_evidence_data_and_presence</code>), I decided to implement the following rule:</p>\n<p>Let resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability (over the position axis) over these positions. The presence is then the number of positions that have any priors specified.</p>\n<p>For example, with 3 total labels with resolution 10:</p>\n<p><code>chr1 0 1 0 0.5</code></p>\n<p><code>chr1 0 1 1 0.2</code></p>\n<p><code>chr1 1 2 1 0.4</code></p>\n<p>this expands (inferring uniform priors for remaining labels) into:</p>\n<p><code>label 0 1 2</code></p>\n<p><code>chr1 0 1 0.5 0.2 0.3</code></p>\n<p><code>chr1 1 2 0.3 0.4 0.3</code></p>\n<p>we take the average over these positions to obtain:</p>\n<p><code>1 chr1 0 10 0.4 0.3 0.4</code></p>\n<p>with presence 2.</p>\n<p>Now let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.</p>\n<p>In both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.</p>\n<h2 id=\"markdown-header-test-case\">Test case</h2>\n<p>This is a test case created and described by Rachel Chan. We supply the following virtual evidence priors to the simpleseg test case:</p>\n<p><code>chr1 0 1000 0 0.9</code></p>\n<p><code>chr1 4000 5000 0 0.9</code></p>\n<p>This is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:</p>\n<p><code>chr1 0 1000 0 1000 . 0 1000 27,158,119</code></p>\n<p><code>chr1 1000 2000 1 1000 . 1000 2000 217,95,2</code></p>\n<p><code>chr1 2000 3000 2 1000 . 2000 3000 117,112,179</code></p>\n<p><code>chr1 3000 4000 3 1000 . 3000 4000 231,41,138</code></p>\n<p><code>chr1 4000 5000 0 1000 . 4000 5000 27,158,119</code></p>\n<p><code>chr1 5000 6000 1 1000 . 5000 6000 217,95,2</code></p>\n<p><code>chr1 6000 7000 2 1000 . 6000 7000 117,112,179</code></p>\n<p><code>chr1 7000 8000 3 1000 . 7000 8000 231,41,138</code></p>\n<p>This test case has been named <code>simplevirtualevidence</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a1503e066cd1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/a1503e066cd1"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/a1503e066cd1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "comment_count": 132, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2020-01-23T19:43:08.577302+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": {"hash": "05ab48931538", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/05ab48931538.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/05ab48931538"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}], "pagelen": 50, "size": 111, "page": 2, "previous": "data/repositories/hoffmanlab/segway/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=1.json"}