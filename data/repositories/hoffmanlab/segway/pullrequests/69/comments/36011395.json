{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69/comments/36011395.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/69/_/diff#comment-36011395"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 69, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/69.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/69"}}, "title": "Using --zscore to normalise datatracks"}, "content": {"raw": "Testing what values --zscore gives for simpleseg after transformation, using pdb:\n\n```\n#!python\n\n(Pdb) tracks_means\narray([ 0.44068674,  0.44068674])\n(Pdb) tracks_vars\narray([ 0.19420484,  0.19420484])\n```\n\nBefore transformation:\n\n```\n#!python\n\n(Pdb) float_data[:,track]\narray([ 0.        ,  0.        ,  0.        , ...,  0.88137358,\n        0.88137358,  0.88137358], dtype=float32)\n```\n\nAfter transformation:\n\n```\n#!python\n\n(Pdb) float_data[:,track]\narray([-0.99999988, -0.99999988, -0.99999988, ...,  1.00000012,\n        1.00000012,  1.00000012], dtype=float32)\n```\n\nRunning --zscore with simpleseg's touchstone's input.master, we find oscillatory non-convergence.\n\nIf we try to 'manually' implement z-score (eg, switch all 0's in simpleseg's test tracks to -1 and leave 1s as is) and set ``distribution=norm`` (eg no asinh transform), and use simpleseg's touchstone's input.master, we get convergence.\n\nThe difference between the params files at round 5 is as follows:\n\n\n```\n#!python\n\n50c50\n< mean_seg0_subseg0_testtrack1 1 9.9998921156e-01 \n---\n> mean_seg0_subseg0_testtrack1 1 9.9999564886e-01 \n52c52\n< mean_seg0_subseg0_testtrack2 1 9.9921458960e-01 \n---\n> mean_seg0_subseg0_testtrack2 1 9.9849396944e-01 \n56c56\n< mean_seg1_subseg0_testtrack2 1 -3.3236573493e-09 \n---\n> mean_seg1_subseg0_testtrack2 1 6.1064490353e-08 \n58c58\n< mean_seg2_subseg0_testtrack1 1 1.0000000000e+00 \n---\n> mean_seg2_subseg0_testtrack1 1 9.9999994040e-01 \n62c62\n< mean_seg3_subseg0_testtrack1 1 9.9999988079e-01 \n---\n> mean_seg3_subseg0_testtrack1 1 9.9999946356e-01 \n64c64\n< mean_seg3_subseg0_testtrack2 1 9.9998778105e-01 \n---\n> mean_seg3_subseg0_testtrack2 1 9.9996304512e-01 \n70c70\n< covar_testtrack1 1 4.2357182650e-08 \n---\n> covar_testtrack1 1 1.4555391203e-07 \n72c72\n< covar_testtrack2 1 5.0001829863e-01 \n---\n> covar_testtrack2 1 5.0003665686e-01 \n\n```\n", "markup": "markdown", "html": "<p>Testing what values --zscore gives for simpleseg after transformation, using pdb:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">Pdb</span><span class=\"p\">)</span> <span class=\"n\">tracks_means</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.44068674</span><span class=\"p\">,</span>  <span class=\"mf\">0.44068674</span><span class=\"p\">])</span>\n<span class=\"p\">(</span><span class=\"n\">Pdb</span><span class=\"p\">)</span> <span class=\"n\">tracks_vars</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.19420484</span><span class=\"p\">,</span>  <span class=\"mf\">0.19420484</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>Before transformation:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">Pdb</span><span class=\"p\">)</span> <span class=\"n\">float_data</span><span class=\"p\">[:,</span><span class=\"n\">track</span><span class=\"p\">]</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.</span>        <span class=\"p\">,</span>  <span class=\"mf\">0.</span>        <span class=\"p\">,</span>  <span class=\"mf\">0.</span>        <span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>  <span class=\"mf\">0.88137358</span><span class=\"p\">,</span>\n        <span class=\"mf\">0.88137358</span><span class=\"p\">,</span>  <span class=\"mf\">0.88137358</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>After transformation:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">Pdb</span><span class=\"p\">)</span> <span class=\"n\">float_data</span><span class=\"p\">[:,</span><span class=\"n\">track</span><span class=\"p\">]</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">0.99999988</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.99999988</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.99999988</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>  <span class=\"mf\">1.00000012</span><span class=\"p\">,</span>\n        <span class=\"mf\">1.00000012</span><span class=\"p\">,</span>  <span class=\"mf\">1.00000012</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Running --zscore with simpleseg's touchstone's input.master, we find oscillatory non-convergence.</p>\n<p>If we try to 'manually' implement z-score (eg, switch all 0's in simpleseg's test tracks to -1 and leave 1s as is) and set <code>distribution=norm</code> (eg no asinh transform), and use simpleseg's touchstone's input.master, we get convergence.</p>\n<p>The difference between the params files at round 5 is as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">50</span><span class=\"n\">c50</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9998921156e-01</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg0_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9999564886e-01</span> \n<span class=\"mi\">52</span><span class=\"n\">c52</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9921458960e-01</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg0_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9849396944e-01</span> \n<span class=\"mi\">56</span><span class=\"n\">c56</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mf\">3.3236573493e-09</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg1_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">6.1064490353e-08</span> \n<span class=\"mi\">58</span><span class=\"n\">c58</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">1.0000000000e+00</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg2_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9999994040e-01</span> \n<span class=\"mi\">62</span><span class=\"n\">c62</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9999988079e-01</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg3_subseg0_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9999946356e-01</span> \n<span class=\"mi\">64</span><span class=\"n\">c64</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">mean_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9998778105e-01</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">mean_seg3_subseg0_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">9.9996304512e-01</span> \n<span class=\"mi\">70</span><span class=\"n\">c70</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">covar_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">4.2357182650e-08</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">covar_testtrack1</span> <span class=\"mi\">1</span> <span class=\"mf\">1.4555391203e-07</span> \n<span class=\"mi\">72</span><span class=\"n\">c72</span>\n<span class=\"o\">&lt;</span> <span class=\"n\">covar_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">5.0001829863e-01</span> \n<span class=\"o\">---</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">covar_testtrack2</span> <span class=\"mi\">1</span> <span class=\"mf\">5.0003665686e-01</span> \n</pre></div>", "type": "rendered"}, "created_on": "2017-05-01T18:13:40.293139+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": "2017-05-01T18:14:00.180803+00:00", "type": "pullrequest_comment", "id": 36011395}