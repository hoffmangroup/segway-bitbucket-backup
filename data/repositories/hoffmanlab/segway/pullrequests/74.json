{"rendered": {"description": {"raw": "Currently activated using ```--validation-fraction```, or ```--validation-coords```.\r\n\r\n* Using ```--validation-fraction```:\r\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.\r\n\r\n* Using ```--validation-coords```:\r\nThe validation set is whatever is specified in ```--validation-coords```, with ```--exclude-coords``` subtracted. Training set is whatever is specified in ```--include-coords```, with ```--exclude-coords``` subtracted.\r\n\r\nValidation set creation and validation itself are queued and submitted through ```segway-task```.\r\n\r\nIf validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.\r\n\r\nIf the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).\r\n\r\nSegway file structure remains intact with some additions: ```observations/validation``` contains the observations files/lists for the validation set. \r\n\r\n```log``` folder now additionally contains the following .tab files:\r\n\r\n* ```validation.output.xx.tab``` logs all validation windows, size, and log(prob(E)) for each round for instance xx\r\n* ```validation.sum.xx.tab``` logs the sum of log(prob(E))'s for each round for instance xx\r\n\r\n```likelihood``` folder now additionally contains the following .ll files:\r\n\r\n* ```validation.output.xx.ll``` logs the last validation output for instance xx (note: this is the full gmtkJT output)\r\n* ```validation.output.winner.xx.ll``` logs the so-far best validation output for instance xx\r\n* ```validation.sum.xx.ll``` logs the last full validation set log(prob(E)) for instance xx\r\n* ```validation.sum.winner.xx.ll``` logs the so-far best full validation set log(prob(E)) for instance xx\r\n\r\nAnd finally, at the end, ```validation.output.ll``` and ```validation.sum.ll``` will simply log the final best full validation set log(prob(E)) overall across all instances.\r\n\r\nI've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.\r\n\r\nA typical set of submitted tasks might look like this:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway-validate/test/data ]$ ./run.sh\r\nentering directory ./test-20170510.uhxw33\r\n+ SEGWAY_RAND_SEED=203078386\r\n+ segway --num-labels=4 --max-train-rounds=2 --validation-fraction=0.10 --split-sequences=7300 --cluster-opt= train ../test.genomedata traindir\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Wednesday May 10 2017, 12:48:04 EDT ____\r\nrunning locally 1: create_validation_set_chr21_9439553_9446643 ()\r\nrunning locally 2: create_validation_set_chr21_9552993_9560083 ()\r\nrunning locally 3: create_validation_set_chr21_9517543_9524633 ()\r\nrunning locally 1: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 2: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 3: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 4: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 5: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 6: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 7: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 8: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 9: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 10: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 11: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 12: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 13: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 14: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 15: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 16: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 17: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 18: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 19: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 20: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 21: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 22: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 23: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 24: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 25: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\n\r\n```", "markup": "markdown", "html": "<p>Currently activated using <code>--validation-fraction</code>, or <code>--validation-coords</code>.</p>\n<ul>\n<li>\n<p>Using <code>--validation-fraction</code>:\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.</p>\n</li>\n<li>\n<p>Using <code>--validation-coords</code>:\nThe validation set is whatever is specified in <code>--validation-coords</code>, with <code>--exclude-coords</code> subtracted. Training set is whatever is specified in <code>--include-coords</code>, with <code>--exclude-coords</code> subtracted.</p>\n</li>\n</ul>\n<p>Validation set creation and validation itself are queued and submitted through <code>segway-task</code>.</p>\n<p>If validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.</p>\n<p>If the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).</p>\n<p>Segway file structure remains intact with some additions: <code>observations/validation</code> contains the observations files/lists for the validation set. </p>\n<p><code>log</code> folder now additionally contains the following .tab files:</p>\n<ul>\n<li><code>validation.output.xx.tab</code> logs all validation windows, size, and log(prob(E)) for each round for instance xx</li>\n<li><code>validation.sum.xx.tab</code> logs the sum of log(prob(E))'s for each round for instance xx</li>\n</ul>\n<p><code>likelihood</code> folder now additionally contains the following .ll files:</p>\n<ul>\n<li><code>validation.output.xx.ll</code> logs the last validation output for instance xx (note: this is the full gmtkJT output)</li>\n<li><code>validation.output.winner.xx.ll</code> logs the so-far best validation output for instance xx</li>\n<li><code>validation.sum.xx.ll</code> logs the last full validation set log(prob(E)) for instance xx</li>\n<li><code>validation.sum.winner.xx.ll</code> logs the so-far best full validation set log(prob(E)) for instance xx</li>\n</ul>\n<p>And finally, at the end, <code>validation.output.ll</code> and <code>validation.sum.ll</code> will simply log the final best full validation set log(prob(E)) overall across all instances.</p>\n<p>I've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.</p>\n<p>A typical set of submitted tasks might look like this:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway-validate/test/data <span class=\"o\">]</span>$ ./run.sh\nentering directory ./test-20170510.uhxw33\n+ <span class=\"nv\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"m\">203078386</span>\n+ segway --num-labels<span class=\"o\">=</span><span class=\"m\">4</span> --max-train-rounds<span class=\"o\">=</span><span class=\"m\">2</span> --validation-fraction<span class=\"o\">=</span><span class=\"m\">0</span>.10 --split-sequences<span class=\"o\">=</span><span class=\"m\">7300</span> --cluster-opt<span class=\"o\">=</span> train ../test.genomedata traindir\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS <span class=\"m\">0</span> AT Wednesday May <span class=\"m\">10</span> <span class=\"m\">2017</span>, <span class=\"m\">12</span>:48:04 EDT ____\nrunning locally <span class=\"m\">1</span>: create_validation_set_chr21_9439553_9446643 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: create_validation_set_chr21_9552993_9560083 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: create_validation_set_chr21_9517543_9524633 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">1</span>: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">4</span>: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">5</span>: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">6</span>: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">7</span>: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">8</span>: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">9</span>: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">10</span>: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">11</span>: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">12</span>: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">13</span>: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">14</span>: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">15</span>: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">16</span>: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">17</span>: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">18</span>: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">19</span>: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">20</span>: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">21</span>: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">22</span>: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">23</span>: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">24</span>: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">25</span>: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Validation on holdout set", "markup": "markdown", "html": "<p>Validation on holdout set</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Currently activated using ```--validation-fraction```, or ```--validation-coords```.\r\n\r\n* Using ```--validation-fraction```:\r\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.\r\n\r\n* Using ```--validation-coords```:\r\nThe validation set is whatever is specified in ```--validation-coords```, with ```--exclude-coords``` subtracted. Training set is whatever is specified in ```--include-coords```, with ```--exclude-coords``` subtracted.\r\n\r\nValidation set creation and validation itself are queued and submitted through ```segway-task```.\r\n\r\nIf validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.\r\n\r\nIf the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).\r\n\r\nSegway file structure remains intact with some additions: ```observations/validation``` contains the observations files/lists for the validation set. \r\n\r\n```log``` folder now additionally contains the following .tab files:\r\n\r\n* ```validation.output.xx.tab``` logs all validation windows, size, and log(prob(E)) for each round for instance xx\r\n* ```validation.sum.xx.tab``` logs the sum of log(prob(E))'s for each round for instance xx\r\n\r\n```likelihood``` folder now additionally contains the following .ll files:\r\n\r\n* ```validation.output.xx.ll``` logs the last validation output for instance xx (note: this is the full gmtkJT output)\r\n* ```validation.output.winner.xx.ll``` logs the so-far best validation output for instance xx\r\n* ```validation.sum.xx.ll``` logs the last full validation set log(prob(E)) for instance xx\r\n* ```validation.sum.winner.xx.ll``` logs the so-far best full validation set log(prob(E)) for instance xx\r\n\r\nAnd finally, at the end, ```validation.output.ll``` and ```validation.sum.ll``` will simply log the final best full validation set log(prob(E)) overall across all instances.\r\n\r\nI've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.\r\n\r\nA typical set of submitted tasks might look like this:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway-validate/test/data ]$ ./run.sh\r\nentering directory ./test-20170510.uhxw33\r\n+ SEGWAY_RAND_SEED=203078386\r\n+ segway --num-labels=4 --max-train-rounds=2 --validation-fraction=0.10 --split-sequences=7300 --cluster-opt= train ../test.genomedata traindir\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Wednesday May 10 2017, 12:48:04 EDT ____\r\nrunning locally 1: create_validation_set_chr21_9439553_9446643 ()\r\nrunning locally 2: create_validation_set_chr21_9552993_9560083 ()\r\nrunning locally 3: create_validation_set_chr21_9517543_9524633 ()\r\nrunning locally 1: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 2: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 3: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 4: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 5: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 6: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 7: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 8: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 9: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 10: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 11: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 12: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 13: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 14: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 15: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 16: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 17: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 18: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 19: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 20: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 21: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 22: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 23: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 24: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 25: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\n\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:baba755e090d%0D515ad3227556?from_pullrequest_id=74"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/74"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:baba755e090d%0D515ad3227556?from_pullrequest_id=74"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/74/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/74/statuses_page=1.json"}}, "title": "Validation on holdout set", "close_source_branch": true, "reviewers": [{"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}], "id": 74, "destination": {"commit": {"hash": "515ad3227556", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/515ad3227556.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/515ad3227556"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2017-05-10T17:43:47.518206+00:00", "summary": {"raw": "Currently activated using ```--validation-fraction```, or ```--validation-coords```.\r\n\r\n* Using ```--validation-fraction```:\r\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.\r\n\r\n* Using ```--validation-coords```:\r\nThe validation set is whatever is specified in ```--validation-coords```, with ```--exclude-coords``` subtracted. Training set is whatever is specified in ```--include-coords```, with ```--exclude-coords``` subtracted.\r\n\r\nValidation set creation and validation itself are queued and submitted through ```segway-task```.\r\n\r\nIf validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.\r\n\r\nIf the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).\r\n\r\nSegway file structure remains intact with some additions: ```observations/validation``` contains the observations files/lists for the validation set. \r\n\r\n```log``` folder now additionally contains the following .tab files:\r\n\r\n* ```validation.output.xx.tab``` logs all validation windows, size, and log(prob(E)) for each round for instance xx\r\n* ```validation.sum.xx.tab``` logs the sum of log(prob(E))'s for each round for instance xx\r\n\r\n```likelihood``` folder now additionally contains the following .ll files:\r\n\r\n* ```validation.output.xx.ll``` logs the last validation output for instance xx (note: this is the full gmtkJT output)\r\n* ```validation.output.winner.xx.ll``` logs the so-far best validation output for instance xx\r\n* ```validation.sum.xx.ll``` logs the last full validation set log(prob(E)) for instance xx\r\n* ```validation.sum.winner.xx.ll``` logs the so-far best full validation set log(prob(E)) for instance xx\r\n\r\nAnd finally, at the end, ```validation.output.ll``` and ```validation.sum.ll``` will simply log the final best full validation set log(prob(E)) overall across all instances.\r\n\r\nI've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.\r\n\r\nA typical set of submitted tasks might look like this:\r\n\r\n\r\n```\r\n#!bash\r\n\r\nrachelc [ /scratch/segway-validate/test/data ]$ ./run.sh\r\nentering directory ./test-20170510.uhxw33\r\n+ SEGWAY_RAND_SEED=203078386\r\n+ segway --num-labels=4 --max-train-rounds=2 --validation-fraction=0.10 --split-sequences=7300 --cluster-opt= train ../test.genomedata traindir\r\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS 0 AT Wednesday May 10 2017, 12:48:04 EDT ____\r\nrunning locally 1: create_validation_set_chr21_9439553_9446643 ()\r\nrunning locally 2: create_validation_set_chr21_9552993_9560083 ()\r\nrunning locally 3: create_validation_set_chr21_9517543_9524633 ()\r\nrunning locally 1: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 2: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 3: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 4: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 5: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 6: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 7: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 8: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 9: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 10: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 11: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 12: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 13: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 14: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 15: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 16: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 17: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 18: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 19: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 20: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 21: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 22: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 23: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 24: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\nrunning locally 25: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e ()\r\n\r\n```", "markup": "markdown", "html": "<p>Currently activated using <code>--validation-fraction</code>, or <code>--validation-coords</code>.</p>\n<ul>\n<li>\n<p>Using <code>--validation-fraction</code>:\nThe validation set is chosen once, before training, from a random subset of the include coordinates satisfying the size given by the validation fraction. This subset is 'held out' from the training set. The remaining set of the include coords become the training windows.</p>\n</li>\n<li>\n<p>Using <code>--validation-coords</code>:\nThe validation set is whatever is specified in <code>--validation-coords</code>, with <code>--exclude-coords</code> subtracted. Training set is whatever is specified in <code>--include-coords</code>, with <code>--exclude-coords</code> subtracted.</p>\n</li>\n</ul>\n<p>Validation set creation and validation itself are queued and submitted through <code>segway-task</code>.</p>\n<p>If validation is on, then the winner will be chosen (for both fixed and minibatch) from the params set (across all instances) that gives the best posterior log probability of evidence.</p>\n<p>If the validation set consists of multiple validation windows, then the sum taken to be the log(prob(evidence)) for the entire set (such that we obtain the intersection of partial prob(E)'s).</p>\n<p>Segway file structure remains intact with some additions: <code>observations/validation</code> contains the observations files/lists for the validation set. </p>\n<p><code>log</code> folder now additionally contains the following .tab files:</p>\n<ul>\n<li><code>validation.output.xx.tab</code> logs all validation windows, size, and log(prob(E)) for each round for instance xx</li>\n<li><code>validation.sum.xx.tab</code> logs the sum of log(prob(E))'s for each round for instance xx</li>\n</ul>\n<p><code>likelihood</code> folder now additionally contains the following .ll files:</p>\n<ul>\n<li><code>validation.output.xx.ll</code> logs the last validation output for instance xx (note: this is the full gmtkJT output)</li>\n<li><code>validation.output.winner.xx.ll</code> logs the so-far best validation output for instance xx</li>\n<li><code>validation.sum.xx.ll</code> logs the last full validation set log(prob(E)) for instance xx</li>\n<li><code>validation.sum.winner.xx.ll</code> logs the so-far best full validation set log(prob(E)) for instance xx</li>\n</ul>\n<p>And finally, at the end, <code>validation.output.ll</code> and <code>validation.sum.ll</code> will simply log the final best full validation set log(prob(E)) overall across all instances.</p>\n<p>I've tested this primarily using the data test using a small split sequences, as it has non-trivial data, and it appears to work as expected.</p>\n<p>A typical set of submitted tasks might look like this:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>rachelc <span class=\"o\">[</span> /scratch/segway-validate/test/data <span class=\"o\">]</span>$ ./run.sh\nentering directory ./test-20170510.uhxw33\n+ <span class=\"nv\">SEGWAY_RAND_SEED</span><span class=\"o\">=</span><span class=\"m\">203078386</span>\n+ segway --num-labels<span class=\"o\">=</span><span class=\"m\">4</span> --max-train-rounds<span class=\"o\">=</span><span class=\"m\">2</span> --validation-fraction<span class=\"o\">=</span><span class=\"m\">0</span>.10 --split-sequences<span class=\"o\">=</span><span class=\"m\">7300</span> --cluster-opt<span class=\"o\">=</span> train ../test.genomedata traindir\n____ PROGRAM ENDED SUCCESSFULLY WITH STATUS <span class=\"m\">0</span> AT Wednesday May <span class=\"m\">10</span> <span class=\"m\">2017</span>, <span class=\"m\">12</span>:48:04 EDT ____\nrunning locally <span class=\"m\">1</span>: create_validation_set_chr21_9439553_9446643 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: create_validation_set_chr21_9552993_9560083 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: create_validation_set_chr21_9517543_9524633 <span class=\"o\">()</span>\nrunning locally <span class=\"m\">1</span>: emt0.0.7.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">2</span>: emt0.0.22.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">3</span>: emt0.0.21.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">4</span>: emt0.0.20.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">5</span>: emt0.0.19.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">6</span>: emt0.0.18.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">7</span>: emt0.0.17.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">8</span>: emt0.0.16.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">9</span>: emt0.0.15.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">10</span>: emt0.0.14.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">11</span>: emt0.0.13.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">12</span>: emt0.0.12.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">13</span>: emt0.0.11.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">14</span>: emt0.0.10.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">15</span>: emt0.0.9.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">16</span>: emt0.0.8.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">17</span>: emt0.0.6.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">18</span>: emt0.0.5.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">19</span>: emt0.0.4.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">20</span>: emt0.0.3.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">21</span>: emt0.0.2.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">22</span>: emt0.0.1.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">23</span>: emt0.0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">24</span>: emt0.0.bundle.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\nrunning locally <span class=\"m\">25</span>: validate0.0.traindir.6fa2ad7c35a011e78ed8989096b2d04e <span class=\"o\">()</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "c8b4d17a324f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/c8b4d17a324f"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/c8b4d17a324f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "segway-validate"}}, "comment_count": 204, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-06-07T19:33:24.522510+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}}, {"role": "REVIEWER", "participated_on": "2017-06-08T14:56:13.650138+00:00", "type": "participant", "approved": true, "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-07T20:27:57.612567+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}], "reason": "", "updated_on": "2017-06-08T15:07:33.633935+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "baba755e090d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/baba755e090d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/baba755e090d"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}