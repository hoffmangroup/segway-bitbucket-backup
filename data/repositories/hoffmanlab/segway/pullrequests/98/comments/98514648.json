{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/comments/98514648.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:0ec5ee955fd5..be63c5ecae34?path=segway%2Fobservations.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/98/_/diff#comment-98514648"}}, "parent": {"id": 98510784, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98/comments/98510784.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/98/_/diff#comment-98510784"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/98.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/98"}}, "title": "Implement virtual evidence during training"}, "content": {"raw": "I initialized a list of empty dictionaries so that the type of all objects in the list are the same. I am returning the list 'res' at the end. `[data]*(number of positions)` broadcasts data to the specified number of positions, for example:\n\n```\n>>> import numpy as np\n>>> data = {1: 0.1}\n>>> end=10\n>>> start = 2\n>>> res = [{} for _ in range(end-start)]\n>>> res\n[{}, {}, {}, {}, {}, {}, {}, {}]\n>>> res[3:5] = [data] * (2)\n>>> res\n[{}, {}, {}, {1: 0.1}, {1: 0.1}, {}, {}, {}]\n```", "markup": "markdown", "html": "<p>I initialized a list of empty dictionaries so that the type of all objects in the list are the same. I am returning the list 'res' at the end. <code>[data]*(number of positions)</code> broadcasts data to the specified number of positions, for example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"mi\">10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"p\">[{}</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">end</span><span class=\"o\">-</span><span class=\"n\">start</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">res</span>\n<span class=\"p\">[{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{}]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">res</span>\n<span class=\"p\">[{},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">},</span> <span class=\"p\">{},</span> <span class=\"p\">{},</span> <span class=\"p\">{}]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-11T17:45:06.887501+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "inline": {"to": 524, "from": null, "outdated": true, "path": "segway/observations.py"}, "updated_on": "2019-04-11T17:45:06.911918+00:00", "type": "pullrequest_comment", "id": 98514648}