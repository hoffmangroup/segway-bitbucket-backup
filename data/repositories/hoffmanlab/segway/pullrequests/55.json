{"rendered": {"description": {"raw": "This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.\r\n\r\nAs a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.\r\n\r\nShell files will be placed in the file system as follows:\r\n\r\n\r\n```\r\n#!python\r\n\r\ntraindir\r\n    cmdline\r\n        0 # instance number\r\n            emt0.0.0.uuid.sh\r\n    log\r\n    ...etc...\r\n\r\nidentifydir\r\n    cmdline\r\n        identify\r\n            vit.uuid.sh\r\n    log\r\n    ...etc...\r\n```\r\n\r\n\r\n\r\nThis is to fix [issue 72](#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job).\r\n\r\nTriangulation is ignored since it is locally run, not submitted through DRMAA.\r\n\r\nAll tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.\r\n\r\nArgument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.\r\n\r\nOne thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.\r\n\r\nI've also tested this on a large run (list of windows > 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.", "markup": "markdown", "html": "<p>This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.</p>\n<p>As a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.</p>\n<p>Shell files will be placed in the file system as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">traindir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"mi\">0</span> <span class=\"c1\"># instance number</span>\n            <span class=\"n\">emt0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n\n<span class=\"n\">identifydir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"n\">identify</span>\n            <span class=\"n\">vit</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n</pre></div>\n\n\n<p>This is to fix <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job\" rel=\"nofollow\">issue 72</a>.</p>\n<p>Triangulation is ignored since it is locally run, not submitted through DRMAA.</p>\n<p>All tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.</p>\n<p>Argument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.</p>\n<p>One thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.</p>\n<p>I've also tested this on a large run (list of windows &gt; 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.</p>", "type": "rendered"}, "title": {"raw": "Change queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves", "markup": "markdown", "html": "<p>Change queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.\r\n\r\nAs a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.\r\n\r\nShell files will be placed in the file system as follows:\r\n\r\n\r\n```\r\n#!python\r\n\r\ntraindir\r\n    cmdline\r\n        0 # instance number\r\n            emt0.0.0.uuid.sh\r\n    log\r\n    ...etc...\r\n\r\nidentifydir\r\n    cmdline\r\n        identify\r\n            vit.uuid.sh\r\n    log\r\n    ...etc...\r\n```\r\n\r\n\r\n\r\nThis is to fix [issue 72](#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job).\r\n\r\nTriangulation is ignored since it is locally run, not submitted through DRMAA.\r\n\r\nAll tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.\r\n\r\nArgument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.\r\n\r\nOne thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.\r\n\r\nI've also tested this on a large run (list of windows > 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:352750ba4f34%0D1ccc56e1388a?from_pullrequest_id=55"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/55"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:352750ba4f34%0D1ccc56e1388a?from_pullrequest_id=55"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/55/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/55/statuses_page=1.json"}}, "title": "Change queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves", "close_source_branch": false, "reviewers": [{"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}], "id": 55, "destination": {"commit": {"hash": "1ccc56e1388a", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/1ccc56e1388a.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/1ccc56e1388a"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-10T21:06:08.087833+00:00", "summary": {"raw": "This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.\r\n\r\nAs a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.\r\n\r\nShell files will be placed in the file system as follows:\r\n\r\n\r\n```\r\n#!python\r\n\r\ntraindir\r\n    cmdline\r\n        0 # instance number\r\n            emt0.0.0.uuid.sh\r\n    log\r\n    ...etc...\r\n\r\nidentifydir\r\n    cmdline\r\n        identify\r\n            vit.uuid.sh\r\n    log\r\n    ...etc...\r\n```\r\n\r\n\r\n\r\nThis is to fix [issue 72](#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job).\r\n\r\nTriangulation is ignored since it is locally run, not submitted through DRMAA.\r\n\r\nAll tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.\r\n\r\nArgument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.\r\n\r\nOne thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.\r\n\r\nI've also tested this on a large run (list of windows > 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.", "markup": "markdown", "html": "<p>This pull request changes queueing functionality such that segway queues a shell file containing the to-be-queued arguments, instead of queueing the arguments themselves.</p>\n<p>As a quick/rough example, rather than sending 'software/gmtkEMtrain [params]' to DRMAA to run, segway will send the path to a shell file 'emt0.0.0.uuid.sh' to DRMAA to run, where 'emt0.0.0.uuid.sh' contains 'software/gmtkEMtrain [params]'.</p>\n<p>Shell files will be placed in the file system as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">traindir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"mi\">0</span> <span class=\"c1\"># instance number</span>\n            <span class=\"n\">emt0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n\n<span class=\"n\">identifydir</span>\n    <span class=\"n\">cmdline</span>\n        <span class=\"n\">identify</span>\n            <span class=\"n\">vit</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">sh</span>\n    <span class=\"n\">log</span>\n    <span class=\"o\">...</span><span class=\"n\">etc</span><span class=\"o\">...</span>\n</pre></div>\n\n\n<p>This is to fix <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/segway/issues/72/segway-on-sge-does-not-submit-job\" rel=\"nofollow\">issue 72</a>.</p>\n<p>Triangulation is ignored since it is locally run, not submitted through DRMAA.</p>\n<p>All tests have been changed to accommodate for the additional shell files. I have verified that they all pass locally.</p>\n<p>Argument parameters are also now double-quotation-mark escaped, to ensure they can be run with bash. run.sh and details.sh in the traindir/identifydir for every test has been changed to accommodate for this.</p>\n<p>One thing I was not sure about was what permissions to give the shell file segway creates. By default I set permissions to be 0775 (octal) but I am not sure if this should be changed.</p>\n<p>I've also tested this on a large run (list of windows &gt; 1024 chars) that previously failed, and it successfully passes bundling to continue into the next round.</p>", "type": "rendered"}, "source": {"commit": {"hash": "352750ba4f34", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2/commit/352750ba4f34"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2/commits/352750ba4f34"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway_fork2"}, "html": {"href": "https://bitbucket.org/rcwchan/segway_fork2"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c2115ab6-b760-46a1-8e37-c9de6605f0b0}ts=python"}}, "type": "repository", "name": "segway_fork2", "full_name": "rcwchan/segway_fork2", "uuid": "{c2115ab6-b760-46a1-8e37-c9de6605f0b0}"}, "branch": {"name": "default"}}, "comment_count": 15, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2016-07-26T18:08:14.846221+00:00", "type": "participant", "approved": false, "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"role": "PARTICIPANT", "participated_on": "2016-07-26T18:22:43.365027+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}}, {"role": "PARTICIPANT", "participated_on": "2016-07-22T14:54:58.182566+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}], "reason": "", "updated_on": "2016-07-26T18:46:31.306003+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "352750ba4f34d4fd781212196a86434cd66fce9b", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/352750ba4f34d4fd781212196a86434cd66fce9b.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/352750ba4f34d4fd781212196a86434cd66fce9b"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}