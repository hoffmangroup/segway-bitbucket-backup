{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/comments/20537462.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/52/_/diff#comment-20537462"}}, "parent": {"id": 20537210, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52/comments/20537210.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/52/_/diff#comment-20537210"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 52, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/52.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/52"}}, "title": "Resubmit the mixtures of Gaussians code"}, "content": {"raw": "I'm not sure ironing out the differences between our respective patches is productive. You can go ahead and start with whatever implementation you like and try to get it working. That said:\n\n(1) The previous conditions cover (z_score==True and DISTRIBUTION_ASINH_NORMAL) and (z_score==True and not DISTRIBUTION_ASINH_NORMAL), so the extra condition is redundant.\n\n(4) One version pre-allocates arrays and one builds an array using append(). You can use whichever you prefer.\n\n(5) make_continuous_cells() is complicated (due to multiple worlds, multiple archives, etc), so I would rather not implement the same logic multiple times. I think the simplest way is for all code that gets continuous signals out of genomedata to go through make_continuous_cells(). ", "markup": "markdown", "html": "<p>I'm not sure ironing out the differences between our respective patches is productive. You can go ahead and start with whatever implementation you like and try to get it working. That said:</p>\n<p>(1) The previous conditions cover (z_score==True and DISTRIBUTION_ASINH_NORMAL) and (z_score==True and not DISTRIBUTION_ASINH_NORMAL), so the extra condition is redundant.</p>\n<p>(4) One version pre-allocates arrays and one builds an array using append(). You can use whichever you prefer.</p>\n<p>(5) make_continuous_cells() is complicated (due to multiple worlds, multiple archives, etc), so I would rather not implement the same logic multiple times. I think the simplest way is for all code that gets continuous signals out of genomedata to go through make_continuous_cells(). </p>", "type": "rendered"}, "created_on": "2016-07-03T19:12:09.258083+00:00", "user": {"display_name": "mlibbrecht", "uuid": "{5386772a-11f2-40a6-922a-1557e4210ce0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D"}, "html": {"href": "https://bitbucket.org/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4f04fb35d1668084963524c0e908eac9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-5.png"}}, "nickname": "mlibbrecht", "type": "user", "account_id": "557058:1c71e8bb-defa-4b90-b75b-f9517c35ceb8"}, "updated_on": "2016-07-03T19:12:09.260142+00:00", "type": "pullrequest_comment", "id": 20537462}