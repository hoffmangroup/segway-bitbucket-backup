{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79/comments/43053761.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/79/_/diff#comment-43053761"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 79, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/79.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/79"}}, "title": "Handle vanishing/splitting gaussians"}, "content": {"raw": "An alternative to all of this is setting a very high MCVR/MCSR value to prevent vanishing/splitting altogether; however, as per Prof Bilmes on segway-internal:\n\n\"Note that you actually *can* adjust the mcvr and mcsr so that vanishing never happens, I wouldn't advise turning it off completely since in that case you could get components with essentially zero responsibility (which will mean you'll be doing more redundant computation consisting of multiplying possibly numerically less stable computations (e.g., small variance Gaussians) by zero, and adding zeros). If you do the Dirichlet constant stuff I sent in the previous email, you can safely do vanishing with Dirichlet priors.\"", "markup": "markdown", "html": "<p>An alternative to all of this is setting a very high MCVR/MCSR value to prevent vanishing/splitting altogether; however, as per Prof Bilmes on segway-internal:</p>\n<p>\"Note that you actually <em>can</em> adjust the mcvr and mcsr so that vanishing never happens, I wouldn't advise turning it off completely since in that case you could get components with essentially zero responsibility (which will mean you'll be doing more redundant computation consisting of multiplying possibly numerically less stable computations (e.g., small variance Gaussians) by zero, and adding zeros). If you do the Dirichlet constant stuff I sent in the previous email, you can safely do vanishing with Dirichlet priors.\"</p>", "type": "rendered"}, "created_on": "2017-08-17T20:47:00.951549+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "updated_on": "2017-08-17T20:47:13.791061+00:00", "type": "pullrequest_comment", "id": 43053761}