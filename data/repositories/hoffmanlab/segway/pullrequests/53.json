{"rendered": {"description": {"raw": "numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.\r\n\r\nI have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.", "markup": "markdown", "html": "<p>numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.</p>\n<p>I have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.</p>", "type": "rendered"}, "title": {"raw": "Change minibatch to use numpy.random.choice to avoid need to seed two different RNGs", "markup": "markdown", "html": "<p>Change minibatch to use numpy.random.choice to avoid need to seed two different RNGs</p>", "type": "rendered"}}, "type": "pullrequest", "description": "numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.\r\n\r\nI have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:b0cdc32d62b8%0D13a81c75584d?from_pullrequest_id=53"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/53"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:b0cdc32d62b8%0D13a81c75584d?from_pullrequest_id=53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/53/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/53/statuses_page=1.json"}}, "title": "Change minibatch to use numpy.random.choice to avoid need to seed two different RNGs", "close_source_branch": false, "reviewers": [{"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}], "id": 53, "destination": {"commit": {"hash": "13a81c75584d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/13a81c75584d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/13a81c75584d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2016-06-01T17:57:02.896788+00:00", "summary": {"raw": "numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.\r\n\r\nI have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.", "markup": "markdown", "html": "<p>numpy.random.choice has essentially the same function as random.sample, as it will take from an input array and choose some specified number of values.</p>\n<p>I have tested the threading on this in two different ways: 1) I've run simplesemisupervised with --num-instances=5 (multithreaded), --minibatch-fraction=0.5, --split-sequences=500 and verified the chosen windows for each thread are the same across different runs with the same seed, and 2) I've written an independent test to verify that a specified numpy seed is propagated across threads such that running numpy.random.choice on each thread will create reproducible results on all threads.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b0cdc32d62b8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway/commit/b0cdc32d62b8"}, "html": {"href": "https://bitbucket.org/rcwchan/segway/commits/b0cdc32d62b8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rcwchan/segway"}, "html": {"href": "https://bitbucket.org/rcwchan/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}ts=python"}}, "type": "repository", "name": "segway", "full_name": "rcwchan/segway", "uuid": "{285886c8-7a4a-4d80-8fe1-3d4b0d9146f6}"}, "branch": {"name": "default"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2016-06-03T13:50:54.749022+00:00", "type": "participant", "approved": false, "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"role": "PARTICIPANT", "participated_on": "2016-06-01T22:06:42.908925+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}}, {"role": "REVIEWER", "participated_on": "2016-06-02T19:26:52.406965+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}], "reason": "", "updated_on": "2016-06-03T13:50:54.763961+00:00", "author": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "merge_commit": {"hash": "b0cdc32d62b8f5c4603288427a75aab486c3209d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b0cdc32d62b8f5c4603288427a75aab486c3209d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b0cdc32d62b8f5c4603288427a75aab486c3209d"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}