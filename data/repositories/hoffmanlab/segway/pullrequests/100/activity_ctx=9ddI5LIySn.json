{"pagelen": 50, "values": [{"update": {"description": "## Introduction\r\n\r\nThis pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\)\r\n\r\n![](https://bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n\u200c\r\n\r\n## User Interface\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.\r\n\r\nDuring annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n## Input File\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`1 chr1 0 10 0.4 0.3 0.4`\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nThis is a slight modification of the test case added locally by Rachel. We supply the following virtual evidence priors to the simpleseg test case:\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n`chr1 4000 5000 0 0.9`\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n`chr1 0 1000 0 1000 . 0 1000 27,158,119`\r\n\r\n`chr1 1000 2000 1 1000 . 1000 2000 217,95,2`\r\n\r\n`chr1 2000 3000 2 1000 . 2000 3000 117,112,179`\r\n\r\n`chr1 3000 4000 3 1000 . 3000 4000 231,41,138`\r\n\r\n`chr1 4000 5000 0 1000 . 4000 5000 27,158,119`\r\n\r\n`chr1 5000 6000 1 1000 . 5000 6000 217,95,2`\r\n\r\n`chr1 6000 7000 2 1000 . 6000 7000 117,112,179`\r\n\r\n`chr1 7000 8000 3 1000 . 7000 8000 231,41,138`\r\n\r\nThis test case has been named `simplevirtualevidence`.", "title": "Implement virtual evidence for all segway tasks", "destination": {"commit": {"hash": "e035d27fc406", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/e035d27fc406.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/e035d27fc406"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c3cae4648e82", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/c3cae4648e82"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/c3cae4648e82"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-07-17T16:26:54.650519+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109671695.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109671695"}}, "parent": {"id": 109671078, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109671078.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109671078"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "Sorry I didn\u2019t notice. This file must be leftover from my initial merge with Rachel\u2019s code. It will be deleted.", "markup": "markdown", "html": "<p>Sorry I didn\u2019t notice. This file must be leftover from my initial merge with Rachel\u2019s code. It will be deleted.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:25:40.707143+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "inline": {}, "updated_on": "2019-07-17T16:25:40.720208+00:00", "type": "pullrequest_comment", "id": 109671695}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109671462.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109671462"}}, "parent": {"id": 109670808, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109670808.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109670808"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "Sorry I didn\u2019t notice the probabilities. Yes it will raise an error saying that VE probabilities must sum to <=1 at all positions. A small allowance \\(0.001\\) was put in for EGPR which can sometimes produce labels just above 1 due to rounding.", "markup": "markdown", "html": "<p>Sorry I didn\u2019t notice the probabilities. Yes it will raise an error saying that VE probabilities must sum to &lt;=1 at all positions. A small allowance (0.001) was put in for EGPR which can sometimes produce labels just above 1 due to rounding.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:24:19.032080+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "updated_on": "2019-07-17T16:24:19.044336+00:00", "type": "pullrequest_comment", "id": 109671462}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109671078.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109671078"}}, "parent": {"id": 109669830, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669830.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669830"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "I meant this _file_ in particular since above you have \\`virtual\\_evidence.tmpl\\` and in here `virtual_evidence_nopresence.tmpl`. I\u2019m not sure why this file in particular exists since I can\u2019t even find where specifically it\u2019s used used in the code.", "markup": "markdown", "html": "<p>I meant this <em>file</em> in particular since above you have `virtual_evidence.tmpl` and in here <code>virtual_evidence_nopresence.tmpl</code>. I\u2019m not sure why this file in particular exists since I can\u2019t even find where specifically it\u2019s used used in the code.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:21:59.552269+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {}, "updated_on": "2019-07-17T16:21:59.565877+00:00", "type": "pullrequest_comment", "id": 109671078}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109670808.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109670808"}}, "parent": {"id": 109669054, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669054.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669054"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "OK. There are some things here that are not clear from the description in terms of desired behaviour in this case:\n\n1. What happens when the probabilities of overlapping labels is >1 \\(as shown\\)?\n2. Are the non-overlapping regions above have their remaining probability uniformly distributed?\n3. How does remaining probability get distributed say when two labels overlap with a probability >1 and the remaining label does not have have any probability defined for it \\(chr1 75 150 region above\\)?\n\n\u200c", "markup": "markdown", "html": "<p>OK. There are some things here that are not clear from the description in terms of desired behaviour in this case:</p>\n<ol>\n<li>What happens when the probabilities of overlapping labels is &gt;1 (as shown)?</li>\n<li>Are the non-overlapping regions above have their remaining probability uniformly distributed?</li>\n<li>How does remaining probability get distributed say when two labels overlap with a probability &gt;1 and the remaining label does not have have any probability defined for it (chr1 75 150 region above)?</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-07-17T16:20:03.881932+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2019-07-17T16:20:15.134659+00:00", "type": "pullrequest_comment", "id": 109670808}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669830.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669830"}}, "parent": {"id": 109669329, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669329.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669329"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "No VIRTUAL\\_EVIDENCE is a CPP option set to 1 if running virtual evidence and 0 otherwise. This is done since it may change frequently between rounds and/or tasks.", "markup": "markdown", "html": "<p>No VIRTUAL_EVIDENCE is a CPP option set to 1 if running virtual evidence and 0 otherwise. This is done since it may change frequently between rounds and/or tasks.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:13:33.833440+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "inline": {}, "updated_on": "2019-07-17T16:13:33.846518+00:00", "type": "pullrequest_comment", "id": 109669830}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669383.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669383"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "should use `CARD_BOOLEAN`", "markup": "markdown", "html": "<p>should use <code>CARD_BOOLEAN</code></p>", "type": "rendered"}, "created_on": "2019-07-17T16:10:22.510428+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {}, "updated_on": "2019-07-17T16:10:22.521785+00:00", "type": "pullrequest_comment", "id": 109669383}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669329.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669329"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "Is this file only used when resolution is 1? Is there some check for this? I cannot find a check for this if there is.", "markup": "markdown", "html": "<p>Is this file only used when resolution is 1? Is there some check for this? I cannot find a check for this if there is.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:10:03.970615+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {}, "updated_on": "2019-07-17T16:10:03.982876+00:00", "type": "pullrequest_comment", "id": 109669329}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109669054.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109669054"}}, "parent": {"id": 109668440, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109668440.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109668440"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "This would be allowed, since none of the labels specifically overlap", "markup": "markdown", "html": "<p>This would be allowed, since none of the labels specifically overlap</p>", "type": "rendered"}, "created_on": "2019-07-17T16:08:06.719469+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "updated_on": "2019-07-17T16:08:06.734992+00:00", "type": "pullrequest_comment", "id": 109669054}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109668663.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109668663"}}, "parent": {"id": 109667678, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109667678.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109667678"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "This is probably left to @{557058:a9657985-692c-405c-995b-4e41cda7ba2b} to decide whether or not it seems appropriate.", "markup": "markdown", "html": "<p>This is probably left to <span class=\"ap-mention\" data-atlassian-id=\"557058:a9657985-692c-405c-995b-4e41cda7ba2b\">@Michael Hoffman</span> to decide whether or not it seems appropriate.</p>", "type": "rendered"}, "created_on": "2019-07-17T16:05:15.465110+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2019-07-17T16:05:15.489074+00:00", "type": "pullrequest_comment", "id": 109668663}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109668440.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109668440"}}, "parent": {"id": 109667388, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109667388.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109667388"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "An example where I\u2019m not sure what I should expect:\n\n```\nchr1 0 100 0 0.5\nchr1 50 150 1 0.8\nchr1 75 175 2 0.7\n```\n\n\u200c", "markup": "markdown", "html": "<p>An example where I\u2019m not sure what I should expect:</p>\n<div class=\"codehilite\"><pre><span></span>chr1 0 100 0 0.5\nchr1 50 150 1 0.8\nchr1 75 175 2 0.7\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-07-17T16:03:55.113663+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2019-07-17T16:03:55.132778+00:00", "type": "pullrequest_comment", "id": 109668440}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109667678.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109667678"}}, "parent": {"id": 109666336, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109666336.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109666336"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "I think it could be a part of this PR, since hopefully it wouldn\u2019t be a large change to implement. I\u2019ll look at how this might be possible. Perhaps an input file with track names and weights?", "markup": "markdown", "html": "<p>I think it could be a part of this PR, since hopefully it wouldn\u2019t be a large change to implement. I\u2019ll look at how this might be possible. Perhaps an input file with track names and weights?</p>", "type": "rendered"}, "created_on": "2019-07-17T15:58:58.288014+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "updated_on": "2019-07-17T15:58:58.301886+00:00", "type": "pullrequest_comment", "id": 109667678}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109667388.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109667388"}}, "parent": {"id": 109665608, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109665608.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109665608"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "I\u2019m not sure what you mean by overlapping. Each label should be defined on its own line, so label definitions will have to overlap. Two of the same labels may not overlap however, though it was discussed trying to average them.\n\nFor example this is a valid VE file for our purposes:\n\n```\nchr1 0 10 1 0.7\nchr1 0 5 0 0.3\nchr1 6 10 0 0.2\n```\n\nEven though line one overlaps with lines 2 and 3 it applies to a different label.\n\nThis VE file would cause an error since label 0 would overlap with itself.\n\n```\nchr1 0 10 0 0.6\nchr1 5 20 0 0.4\n```\n\n\u200c", "markup": "markdown", "html": "<p>I\u2019m not sure what you mean by overlapping. Each label should be defined on its own line, so label definitions will have to overlap. Two of the same labels may not overlap however, though it was discussed trying to average them.</p>\n<p>For example this is a valid VE file for our purposes:</p>\n<div class=\"codehilite\"><pre><span></span>chr1 0 10 1 0.7\nchr1 0 5 0 0.3\nchr1 6 10 0 0.2\n</pre></div>\n\n\n<p>Even though line one overlaps with lines 2 and 3 it applies to a different label.</p>\n<p>This VE file would cause an error since label 0 would overlap with itself.</p>\n<div class=\"codehilite\"><pre><span></span>chr1 0 10 0 0.6\nchr1 5 20 0 0.4\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-07-17T15:57:18.845980+00:00", "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "updated_on": "2019-07-17T15:57:18.861070+00:00", "type": "pullrequest_comment", "id": 109667388}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109666336.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109666336"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "For the `track-weight` and the `virtual-evidence-weight` is there any reason why this couldn\u2019t be applied to only certain tracks/virtual evidence? I know this has been an oft requested feature and it would be nice to have a method to pick certain tracks, for example. Not sure if in the scope of this PR or what @{557058:a9657985-692c-405c-995b-4e41cda7ba2b} might think of this feature.", "markup": "markdown", "html": "<p>For the <code>track-weight</code> and the <code>virtual-evidence-weight</code> is there any reason why this couldn\u2019t be applied to only certain tracks/virtual evidence? I know this has been an oft requested feature and it would be nice to have a method to pick certain tracks, for example. Not sure if in the scope of this PR or what <span class=\"ap-mention\" data-atlassian-id=\"557058:a9657985-692c-405c-995b-4e41cda7ba2b\">@Michael Hoffman</span> might think of this feature.</p>", "type": "rendered"}, "created_on": "2019-07-17T15:50:57.791876+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2019-07-17T15:50:57.811071+00:00", "type": "pullrequest_comment", "id": 109666336}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"comment": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/109665608.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-109665608"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "How does this handle the case of overlapping virtual evidence regions? I believe this has been discussed numerous times between @{557058:e439e22e-8cfc-4cf1-b090-030d33a0730e} and @{557058:a9657985-692c-405c-995b-4e41cda7ba2b} . From the description it\u2019s not clear what should happen if two regions only partially overlap. Unfortunately I have not kept any notes on the discussion pertaining to this PR. Currently in this PR it looks like there\u2019s only an error thrown for overlapping regions with the same label.", "markup": "markdown", "html": "<p>How does this handle the case of overlapping virtual evidence regions? I believe this has been discussed numerous times between <span class=\"ap-mention\" data-atlassian-id=\"557058:e439e22e-8cfc-4cf1-b090-030d33a0730e\">@Rachel Chan</span> and <span class=\"ap-mention\" data-atlassian-id=\"557058:a9657985-692c-405c-995b-4e41cda7ba2b\">@Michael Hoffman</span> . From the description it\u2019s not clear what should happen if two regions only partially overlap. Unfortunately I have not kept any notes on the discussion pertaining to this PR. Currently in this PR it looks like there\u2019s only an error thrown for overlapping regions with the same label.</p>", "type": "rendered"}, "created_on": "2019-07-17T15:46:56.219888+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2019-07-17T15:46:56.241134+00:00", "type": "pullrequest_comment", "id": 109665608}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "## Introduction\r\n\r\nThis pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\)\r\n\r\n![](https://bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n\u200c\r\n\r\n## User Interface\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.\r\n\r\nDuring annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n## Input File\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`1 chr1 0 10 0.4 0.3 0.4`\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nThis is a slight modification of the test case added locally by Rachel. We supply the following virtual evidence priors to the simpleseg test case:\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n`chr1 4000 5000 0 0.9`\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n`chr1 0 1000 0 1000 . 0 1000 27,158,119`\r\n\r\n`chr1 1000 2000 1 1000 . 1000 2000 217,95,2`\r\n\r\n`chr1 2000 3000 2 1000 . 2000 3000 117,112,179`\r\n\r\n`chr1 3000 4000 3 1000 . 3000 4000 231,41,138`\r\n\r\n`chr1 4000 5000 0 1000 . 4000 5000 27,158,119`\r\n\r\n`chr1 5000 6000 1 1000 . 5000 6000 217,95,2`\r\n\r\n`chr1 6000 7000 2 1000 . 6000 7000 117,112,179`\r\n\r\n`chr1 7000 8000 3 1000 . 7000 8000 231,41,138`\r\n\r\nThis test case has been named `simplevirtualevidence`.", "title": "Implement virtual evidence for all segway tasks", "destination": {"commit": {"hash": "792d50375d96", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/792d50375d96.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/792d50375d96"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fcdfbdf7ba96", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/fcdfbdf7ba96"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/fcdfbdf7ba96"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-07-12T13:56:20.590854+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "## Introduction\r\n\r\nThis pull request implements virtual evidence for all available segway tasks, building off of existing work from both Rachel Chan and Max Libbrecht\u2019s implementations of VE for training.  \r\nSpecifically, a binary virtual evidence node C has been added, which supplies the prior probability that the parent \\(segment label\\) A at a particular position is a particular label \\(ie P\\(C=1|A=a\\)\\).\r\n\r\nIn other words, the binary virtual child C exists only to constrain the parent \\(segment label\\) to be a particular value \\(supervised label\\) with the specified prior probability.\r\n\r\nI have also added a presence node such that positions with no prior specified by the user will have no virtual evidence.\r\n\r\nThe revised part of the graphical model is as below, where Qt is the segment label at position t, Ct is the virtual evidence child, and oCt indicates the presence of Ct. The black dotted line indicates a deterministic dependence where the parent of Ct switches based on the value of oCt; the red line indicates a stochastic conditional dependence \\(as there is a different Ct|Qt CPT at each t.\\)\r\n\r\n![](https://bitbucket.org/repo/a7MnLo/images/3913472725-graph_changes.png)\r\n\u200c\r\n\r\n## User Interface\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTK without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run or train-run-round.\r\n\r\nDuring annotate and posterior a file can be supplied with the --virtual-evidence option to the init step however it may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --track-weight and --virtual-evidence-weight. The track weight applies an exponent to all track data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n## Input File\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`1 chr1 0 10 0.4 0.3 0.4`\r\n\r\nwith presence 2.\r\n\r\nNow let resolution equal 1. Then the presence is simply 1 or 0; 1 for positions with priors specified, and 0 for positions without. For positions with priors specified, uniform priors are inferred for any remaining labels, and this becomes the prior vector for that position.\r\n\r\nIn both cases, positions with no priors specified are given 0 presence and uniform priors for all labels.\r\n\r\n## Test case\r\n\r\nThis is a slight modification of the test case added locally by Rachel. We supply the following virtual evidence priors to the simpleseg test case:\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n`chr1 4000 5000 0 0.9`\r\n\r\nThis is able to separate the binary 0,0 and 0,1 regions in simpleseg, creating the following annotation:\r\n\r\n`chr1 0 1000 0 1000 . 0 1000 27,158,119`\r\n\r\n`chr1 1000 2000 1 1000 . 1000 2000 217,95,2`\r\n\r\n`chr1 2000 3000 2 1000 . 2000 3000 117,112,179`\r\n\r\n`chr1 3000 4000 3 1000 . 3000 4000 231,41,138`\r\n\r\n`chr1 4000 5000 0 1000 . 4000 5000 27,158,119`\r\n\r\n`chr1 5000 6000 1 1000 . 5000 6000 217,95,2`\r\n\r\n`chr1 6000 7000 2 1000 . 6000 7000 117,112,179`\r\n\r\n`chr1 7000 8000 3 1000 . 7000 8000 231,41,138`\r\n\r\nThis test case has been named `simplevirtualevidence`.", "title": "Implement virtual evidence for all segway tasks", "destination": {"commit": {"hash": "792d50375d96", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/792d50375d96.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/792d50375d96"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "10d75f5df2cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/10d75f5df2cb"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/10d75f5df2cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-07-08T17:47:47.028837+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "792d50375d96", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/792d50375d96.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/792d50375d96"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "10d75f5df2cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/10d75f5df2cb"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/10d75f5df2cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-07-08T17:30:21.265367+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "83a03f2f535d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/83a03f2f535d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/83a03f2f535d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b727fa90f026", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/b727fa90f026"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/b727fa90f026"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-06-11T15:40:41.536284+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "83a03f2f535d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/83a03f2f535d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/83a03f2f535d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "46b0f9132748", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/46b0f9132748"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/46b0f9132748"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-06-06T16:55:59.033209+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "83a03f2f535d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/83a03f2f535d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/83a03f2f535d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8625d6f5eccc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/8625d6f5eccc"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/8625d6f5eccc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-27T14:44:27.849075+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "e9c52989b680", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/e9c52989b680.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/e9c52989b680"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e38b1b63cd6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/e38b1b63cd6b"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/e38b1b63cd6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-24T18:07:34.243487+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotate\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "b3646a21705d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3646a21705d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3646a21705d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "85ca3ebab9f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/85ca3ebab9f4"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/85ca3ebab9f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-24T14:15:09.453483+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotateidentify\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\nDuring annotate identify and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0 0.5`\r\n\r\n`chr1 0 1 1 0.2`\r\n\r\n`chr1 1 2 1 0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "b3646a21705d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3646a21705d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3646a21705d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "85ca3ebab9f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/85ca3ebab9f4"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/85ca3ebab9f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-24T14:13:23.803564+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\n  \r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotateidentify\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\n  \r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\n  \r\n\r\nDuring annotate identify and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\n  \r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n  \r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\n  \r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\n  \r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0:0.5,1:0.2`\r\n\r\n`chr1 1 2 1:0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.\r\n\r\n\u200c", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "b3646a21705d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3646a21705d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3646a21705d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "85ca3ebab9f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/85ca3ebab9f4"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/85ca3ebab9f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-24T14:11:09.240323+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}, {"update": {"description": "**User Interface**\r\n\r\nNo change for users not running Virtual Evidence.\r\n\r\n  \r\n\r\nUsers supplying virtual evidence while running an entire task together \\(ie segway train or segway annotateidentify\\) will supply the virtual evidence file with --virtual-evidence.\r\n\r\n  \r\n\r\nUsers supplying virtual evidence while running steps for a task one at a time will need to specify --virtual-evidence during the init step in order to properly generate the input files such as input.master and the tri file. The tri file will be generated from GMTk without the virtual evidence specification, and will therefore be missing virtual evidence tracks unless it is specified during init. This can be a placeholder, though a warning will be shown saying the file does not exist. Whatever is supplied by --virtual-evidence during train-init will then be passed to train-run. This file can however be overridden by using the --virtual-evidence option again for train-run and train-run-round. In the case that none is supplied for either step, segway will use the file that had been specified during train-init.\r\n\r\n  \r\n\r\nDuring annotate identify and posterior the file can be supplied with the --virtual-evidence option to the init step and may not be changed during run.\r\n\r\n  \r\n\r\nIn addition to support for virtual-evidence with the more modular API, two new model variables have been added, --model-weight and --virtual-evidence-weight. The model weight applies an exponent to all data provided to the model to skew it away from uniform, while virtual evidence weight does the same thing for virtual evidence data specifically.\r\n\r\n**Input File**\r\n\r\nThe virtual evidence file should be of BED3\\+2 format where the 4th column is the label index and the fifth column is the prior. For example,\r\n\r\n`chr1 0 1000 0 0.9`\r\n\r\n  \r\n\r\nIf running on multiple worlds, the VE file is in BED3\\+3 format instead, and the world number must be specified for each row in the last column. If this is omitted and a BED3\\+2 file is submitted instead, the virtual evidence will be applied to all worlds instead. Using the previous example, in the second world,\r\n\r\n`chr1 0 1000 0 0.9 1`\r\n\r\n  \r\n\r\nThese examples specify a prior probability of 0.9 on label 0 and 0.05 on label 1 at chr1\\(0,1000\\).\r\n\r\nAt positions for which some labels are given a prior by the user but other labels not, the remaining probability is uniformly distributed amongst the leftover labels. For example, with 4 labels:\r\n\r\n`chr1 0 1000 0 0.4`\r\n\r\n  \r\n\r\nall labels but label 0 would be given a prior probability of \\(1-0.4\\)/3=0.2.\r\n\r\nFor positions at which no prior is specified for all labels, a uniform probability is computed and distributed amongst the labels \\(though given 0 weight by Segway later due to the presence variable\\).\r\n\r\n## Resolution and downsampling\r\n\r\nIn order to downsample virtual evidence \\(`get_downsampled_virtual_evidence_data_and_presence`\\), I decided to implement the following rule:\r\n\r\nLet resolution be greater than 1. For positions which have some priors specified but not all, compute uniform priors for the remaining labels and take the average prior probability \\(over the position axis\\) over these positions. The presence is then the number of positions that have any priors specified.\r\n\r\nFor example, with 3 total labels with resolution 10:\r\n\r\n`chr1 0 1 0:0.5,1:0.2`\r\n\r\n`chr1 1 2 1:0.4`\r\n\r\n\u200c\r\n\r\nthis expands \\(inferring uniform priors for remaining labels\\) into:\r\n\r\n`label 0 1 2`\r\n\r\n`chr1 0 1 0.5 0.2 0.3`\r\n\r\n`chr1 1 2 0.3 0.4 0.3`\r\n\r\n\u200c\r\n\r\nwe take the average over these positions to obtain:\r\n\r\n`chr1 0 10 0.4 0.3 0.4`\r\n\r\n\u200c\r\n\r\nwith presence 2.\r\n\r\n\u200c", "title": "[WIP] Add virtual evidence to the modular segway API", "destination": {"commit": {"hash": "b3646a21705d", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/b3646a21705d.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/b3646a21705d"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "85ca3ebab9f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/85ca3ebab9f4"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/85ca3ebab9f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "ve"}}, "state": "OPEN", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "date": "2019-05-24T14:11:09.153989+00:00"}, "pull_request": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}}]}