{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/130955309.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mjmm13/segway_python23:ecfa8015e80e..8cbdd3f79d65?path=segway%2Fobservations.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-130955309"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "You are doing something similar here and in `downsample_presence_array()`. This should be a new function, similar to:\n\n```\nfrom numpy import pad\n\ndef window_array(arr, stride):\n    pad_length = len(arr) % stride\n    arr_padded = pad(arr, (0, pad_length), constant_values=0)\n    \n    # first dimension inferred\n    return arr_padded.reshape((-1, stride))\n```\n\nIn `downsample_presence_array()` you can just call `.sum()` along the correct axis to do a fast sum.", "markup": "markdown", "html": "<p>You are doing something similar here and in <code>downsample_presence_array()</code>. This should be a new function, similar to:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">numpy</span> <span class=\"kn\">import</span> <span class=\"n\">pad</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">window_array</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"p\">):</span>\n    <span class=\"n\">pad_length</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">stride</span>\n    <span class=\"n\">arr_padded</span> <span class=\"o\">=</span> <span class=\"n\">pad</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_length</span><span class=\"p\">),</span> <span class=\"n\">constant_values</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># first dimension inferred</span>\n    <span class=\"k\">return</span> <span class=\"n\">arr_padded</span><span class=\"o\">.</span><span class=\"kp\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>In <code>downsample_presence_array()</code> you can just call <code>.sum()</code> along the correct axis to do a fast sum.</p>", "type": "rendered"}, "created_on": "2020-01-09T04:32:44.734460+00:00", "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}, "inline": {"to": 354, "from": null, "outdated": true, "path": "segway/observations.py"}, "updated_on": "2020-01-09T04:32:44.741480+00:00", "type": "pullrequest_comment", "id": 130955309}