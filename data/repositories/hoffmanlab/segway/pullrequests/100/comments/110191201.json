{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100/comments/110191201.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mjmm13/segway_python23:b5aab915d778..e035d27fc406?path=segway%2Fobservations.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100/_/diff#comment-110191201"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 100, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/100.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/100"}}, "title": "Implement virtual evidence for all segway tasks"}, "content": {"raw": "`any` is being applied to a boolean expression which will _always_ return `True` I believe. Get rid of the `!= None`. I\u2019m not sure what the point of it is. I\u2019m not sure if it\u2019s necessary to even put it outside the `any` call like `any(prior_list)  != None` .", "markup": "markdown", "html": "<p><code>any</code> is being applied to a boolean expression which will <em>always</em> return <code>True</code> I believe. Get rid of the <code>!= None</code>. I\u2019m not sure what the point of it is. I\u2019m not sure if it\u2019s necessary to even put it outside the <code>any</code> call like <code>any(prior_list)  != None</code> .</p>", "type": "rendered"}, "created_on": "2019-07-22T16:45:46.899071+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {"to": 514, "from": null, "outdated": true, "path": "segway/observations.py"}, "updated_on": "2019-07-22T16:45:46.911800+00:00", "type": "pullrequest_comment", "id": 110191201}