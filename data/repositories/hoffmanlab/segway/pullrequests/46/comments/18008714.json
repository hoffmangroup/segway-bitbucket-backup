{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/46/comments/18008714.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/46/_/diff#comment-18008714"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/46.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/46"}}, "title": "Change local job resubmission to append stderr logs"}, "content": {"raw": "This test is not run in the test_all.sh script. It's is explicitly excluded because testing for out-of-memory issues are so fickle to reproduce and vary widely from system to system. I could not, as per previous discussion, find a memory progression number that works across platforms to consistently check for out of memory resubmissions. It is known not to work on SGE.\n\nI chose this test in particular to at least test the fact that resubmission append outputs on the error logs.\n\nThe reason why 75 changed to 1 is in all likelihood due to this fickleness. Often if there is not sufficient memory other errors can simply occur before the program is able to run in earnest or it throws other errors (such as ImportError on a large python module) that are not caught as explict out-of-memory conditions.", "markup": "markdown", "html": "<p>This test is not run in the test_all.sh script. It's is explicitly excluded because testing for out-of-memory issues are so fickle to reproduce and vary widely from system to system. I could not, as per previous discussion, find a memory progression number that works across platforms to consistently check for out of memory resubmissions. It is known not to work on SGE.</p>\n<p>I chose this test in particular to at least test the fact that resubmission append outputs on the error logs.</p>\n<p>The reason why 75 changed to 1 is in all likelihood due to this fickleness. Often if there is not sufficient memory other errors can simply occur before the program is able to run in earnest or it throws other errors (such as ImportError on a large python module) that are not caught as explict out-of-memory conditions.</p>", "type": "rendered"}, "created_on": "2016-05-02T19:00:25.845219+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": "2016-05-02T19:00:59.754012+00:00", "type": "pullrequest_comment", "id": 18008714}