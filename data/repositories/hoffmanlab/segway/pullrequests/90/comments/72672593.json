{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/comments/72672593.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/ericr86/segway:0b99d1e4e64c..50c798f683cf?path=segway%2Ftask.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/90/_/diff#comment-72672593"}}, "parent": {"id": 70657352, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90/comments/70657352.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/90/_/diff#comment-70657352"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 90, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/90.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/90"}}, "title": "Fix observation files being temporarly and securely created in segway task"}, "content": {"raw": "So after some research del may or [may not actually cause the garbage collector to collec](http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm)t. I doubt numpy values are stored on the \"free list\". I've tried allocating a large numpy array of `zeros` and when `del` is used, the memory is released by the process back to the operating system. So I'm willing to bet that this `del` actually has an effect on segway-task's memory usage and should be kept in and used appropriately. To be extra sure we can call `gc.collect()` after the `del` to ensure memory has been released to the process and will give more memory to GMTK to run.", "markup": "markdown", "html": "<p>So after some research del may or <a data-is-external-link=\"true\" href=\"http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm\" rel=\"nofollow\">may not actually cause the garbage collector to collec</a>t. I doubt numpy values are stored on the \"free list\". I've tried allocating a large numpy array of <code>zeros</code> and when <code>del</code> is used, the memory is released by the process back to the operating system. So I'm willing to bet that this <code>del</code> actually has an effect on segway-task's memory usage and should be kept in and used appropriately. To be extra sure we can call <code>gc.collect()</code> after the <code>del</code> to ensure memory has been released to the process and will give more memory to GMTK to run.</p>", "type": "rendered"}, "created_on": "2018-08-10T19:46:07.595562+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {"to": null, "from": null, "outdated": true, "path": "segway/task.py"}, "updated_on": "2018-08-10T19:46:07.602446+00:00", "type": "pullrequest_comment", "id": 72672593}