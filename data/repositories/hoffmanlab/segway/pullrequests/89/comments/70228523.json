{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/comments/70228523.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mjmm13/segway_python23:c48413d9bb0d..50c798f683cf?path=segway%2Finput_master.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/89/_/diff#comment-70228523"}}, "parent": {"id": 69946815, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89/comments/69946815.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/89/_/diff#comment-69946815"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 89, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/89.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/89"}}, "title": "Python 3 Compatibility"}, "content": {"raw": "For future reference the following behavior is happening:\n\n```python\nfrom __future__ import print_function\nimport sys\n\n\nclass TestString:\n    def __init__(self):\n        self.str_call_count = 0\n\n    def __str__(self):\n        self.str_call_count += 1\n        print(\"Called {} times\".format(self.str_call_count), file=sys.stderr)\n        return u'foo'\n\n\na = TestString()\nprint('%s' % (a,))\nprint('---')\nprint('{}'.format(a))\n```\n\nWhich produces the following output on Python 2:\n\n```shell\n$ python2 test.py\nCalled 1 times\nCalled 2 times\nfoo\n---\nCalled 3 times\nfoo\n```\n\nAnd produces the following output on Python 3:\n\n```shell\n$ python3 test.py\nCalled 1 times\nfoo\n---\nCalled 2 times\nfoo\n```\n\nEssentially in some string interpolation steps in Python 2, the `__str__` method is called twice when the method returns a unicode string.", "markup": "markdown", "html": "<p>For future reference the following behavior is happening:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestString</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">str_call_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">str_call_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Called {} times&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">str_call_count</span><span class=\"p\">),</span> <span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;foo&#39;</span>\n\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">TestString</span><span class=\"p\">()</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;---&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;{}&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>Which produces the following output on Python 2:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>$ python2 test.py\nCalled <span class=\"m\">1</span> <span class=\"nb\">times</span>\nCalled <span class=\"m\">2</span> <span class=\"nb\">times</span>\nfoo\n---\nCalled <span class=\"m\">3</span> <span class=\"nb\">times</span>\nfoo\n</pre></div>\n\n\n<p>And produces the following output on Python 3:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>$ python3 test.py\nCalled <span class=\"m\">1</span> <span class=\"nb\">times</span>\nfoo\n---\nCalled <span class=\"m\">2</span> <span class=\"nb\">times</span>\nfoo\n</pre></div>\n\n\n<p>Essentially in some string interpolation steps in Python 2, the <code>__str__</code> method is called twice when the method returns a unicode string.</p>", "type": "rendered"}, "created_on": "2018-07-17T19:41:46.343817+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {"to": null, "from": null, "outdated": true, "path": "segway/input_master.py"}, "updated_on": "2018-07-17T19:41:46.352375+00:00", "type": "pullrequest_comment", "id": 70228523}