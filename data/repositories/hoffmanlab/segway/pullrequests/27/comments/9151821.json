{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/27/comments/9151821.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/oscar01/segway-mixture:None..None?path=segway%2Fobservations.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/27/_/diff#comment-9151821"}}, "parent": {"id": 9151642, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/27/comments/9151642.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/27/_/diff#comment-9151642"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 27, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/27.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/27"}}, "title": "adding mixtures"}, "content": {"raw": "Thanks but I am not entirely sure if that's a good way to fix it....\n\nCorrect me if I am wrong. But the zscore your implement basically squeeze the track data onto the standard normal distribution N(0,1). And then you learn parameter based on the data after the zscore transformation.\n\n`run_posterior_save_bed` in `task.py` belongs to the identification part where they use the best parameter find in training to calculate the best possible path. So a corresponding zscore transformation have to be done also for `run_posterior_save_bed` in identification task if zscore is enabled in training, otherwise data read in gmtkViterbi would be different from those in gmtkEMTrain which will cause trouble. This means `task.py` should be able to send parameters related to zscore/trackmeans/trackvar to this function.\n\n", "markup": "markdown", "html": "<p>Thanks but I am not entirely sure if that's a good way to fix it....</p>\n<p>Correct me if I am wrong. But the zscore your implement basically squeeze the track data onto the standard normal distribution N(0,1). And then you learn parameter based on the data after the zscore transformation.</p>\n<p><code>run_posterior_save_bed</code> in <code>task.py</code> belongs to the identification part where they use the best parameter find in training to calculate the best possible path. So a corresponding zscore transformation have to be done also for <code>run_posterior_save_bed</code> in identification task if zscore is enabled in training, otherwise data read in gmtkViterbi would be different from those in gmtkEMTrain which will cause trouble. This means <code>task.py</code> should be able to send parameters related to zscore/trackmeans/trackvar to this function.</p>", "type": "rendered"}, "created_on": "2015-08-17T21:06:17.226363+00:00", "user": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "inline": {"to": null, "from": null, "outdated": false, "path": "segway/observations.py"}, "updated_on": "2015-08-17T21:07:52.889236+00:00", "type": "pullrequest_comment", "id": 9151821}