{"rendered": {"description": {"raw": "Issue #37\r\n\r\nThis is the implementation of generate track mean for supervision label based on track data only in supervision region instead of the whole track.\r\nI am not sure whether it should be permanent feature or my hacky approach but I'll setup the Issue & pull request first.\r\n\r\nNow there is a new parameter added to the main segway function: ```--set-supervision-mean```.\r\nIf set, the base mean for all track for each label with semi-supervision present will be the mean of the track data in the supervision region. The real mean will be still added by std * rand(-0.2, 0.2) because I want to still keep some randomness. The std here is still generate by the whole track and there the reason why I did not change it is stated below.\r\n\r\nI did not generate a Gaussian variance only from the supervision region. I do think it is useful to add that feature but the current the variance seems to be uniform at first for all label, generating it in different way seems to require changing the structure of input-master file which I don't have time to do. Also if this would be a permanent feature then there is a problem we have to consider if we do it this way: what if we only have a very small supervision region? Variance could be 0. \r\n\r\nIf not set, everything is the same.\r\n\r\nSome other important issue of this modification:\r\n1. It does not support subseg\r\n2. It does not support Trackgroup\r\n\r\nI am not sure how the behaviour should be defined when subseg and Trackgroup is used.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/hoffmanlab/segway/issues/37/semisupervised-mean-generate-from-track\" rel=\"nofollow\" title=\"Semisupervised Mean Generate from Track data in supervision region.\" class=\"ap-connect-link\">#37</a></p>\n<p>This is the implementation of generate track mean for supervision label based on track data only in supervision region instead of the whole track.\nI am not sure whether it should be permanent feature or my hacky approach but I'll setup the Issue &amp; pull request first.</p>\n<p>Now there is a new parameter added to the main segway function: <code>--set-supervision-mean</code>.\nIf set, the base mean for all track for each label with semi-supervision present will be the mean of the track data in the supervision region. The real mean will be still added by std * rand(-0.2, 0.2) because I want to still keep some randomness. The std here is still generate by the whole track and there the reason why I did not change it is stated below.</p>\n<p>I did not generate a Gaussian variance only from the supervision region. I do think it is useful to add that feature but the current the variance seems to be uniform at first for all label, generating it in different way seems to require changing the structure of input-master file which I don't have time to do. Also if this would be a permanent feature then there is a problem we have to consider if we do it this way: what if we only have a very small supervision region? Variance could be 0. </p>\n<p>If not set, everything is the same.</p>\n<p>Some other important issue of this modification:\n1. It does not support subseg\n2. It does not support Trackgroup</p>\n<p>I am not sure how the behaviour should be defined when subseg and Trackgroup is used.</p>", "type": "rendered"}, "title": {"raw": "Semisupervised Mean Generate from Track data in supervision region.", "markup": "markdown", "html": "<p>Semisupervised Mean Generate from Track data in supervision region.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Issue #37\r\n\r\nThis is the implementation of generate track mean for supervision label based on track data only in supervision region instead of the whole track.\r\nI am not sure whether it should be permanent feature or my hacky approach but I'll setup the Issue & pull request first.\r\n\r\nNow there is a new parameter added to the main segway function: ```--set-supervision-mean```.\r\nIf set, the base mean for all track for each label with semi-supervision present will be the mean of the track data in the supervision region. The real mean will be still added by std * rand(-0.2, 0.2) because I want to still keep some randomness. The std here is still generate by the whole track and there the reason why I did not change it is stated below.\r\n\r\nI did not generate a Gaussian variance only from the supervision region. I do think it is useful to add that feature but the current the variance seems to be uniform at first for all label, generating it in different way seems to require changing the structure of input-master file which I don't have time to do. Also if this would be a permanent feature then there is a problem we have to consider if we do it this way: what if we only have a very small supervision region? Variance could be 0. \r\n\r\nIf not set, everything is the same.\r\n\r\nSome other important issue of this modification:\r\n1. It does not support subseg\r\n2. It does not support Trackgroup\r\n\r\nI am not sure how the behaviour should be defined when subseg and Trackgroup is used.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/Tamaki_Sakura/segway:a1e9739dfe9a%0Df04cce0da8be?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/25.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/25/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/25"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/Tamaki_Sakura/segway:a1e9739dfe9a%0Df04cce0da8be?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/25/statuses_page=1.json"}}, "title": "Semisupervised Mean Generate from Track data in supervision region.", "close_source_branch": false, "reviewers": [{"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}], "id": 25, "destination": {"commit": {"hash": "f04cce0da8be", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/f04cce0da8be.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/f04cce0da8be"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2015-08-02T22:40:34.485660+00:00", "summary": {"raw": "Issue #37\r\n\r\nThis is the implementation of generate track mean for supervision label based on track data only in supervision region instead of the whole track.\r\nI am not sure whether it should be permanent feature or my hacky approach but I'll setup the Issue & pull request first.\r\n\r\nNow there is a new parameter added to the main segway function: ```--set-supervision-mean```.\r\nIf set, the base mean for all track for each label with semi-supervision present will be the mean of the track data in the supervision region. The real mean will be still added by std * rand(-0.2, 0.2) because I want to still keep some randomness. The std here is still generate by the whole track and there the reason why I did not change it is stated below.\r\n\r\nI did not generate a Gaussian variance only from the supervision region. I do think it is useful to add that feature but the current the variance seems to be uniform at first for all label, generating it in different way seems to require changing the structure of input-master file which I don't have time to do. Also if this would be a permanent feature then there is a problem we have to consider if we do it this way: what if we only have a very small supervision region? Variance could be 0. \r\n\r\nIf not set, everything is the same.\r\n\r\nSome other important issue of this modification:\r\n1. It does not support subseg\r\n2. It does not support Trackgroup\r\n\r\nI am not sure how the behaviour should be defined when subseg and Trackgroup is used.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/hoffmanlab/segway/issues/37/semisupervised-mean-generate-from-track\" rel=\"nofollow\" title=\"Semisupervised Mean Generate from Track data in supervision region.\" class=\"ap-connect-link\">#37</a></p>\n<p>This is the implementation of generate track mean for supervision label based on track data only in supervision region instead of the whole track.\nI am not sure whether it should be permanent feature or my hacky approach but I'll setup the Issue &amp; pull request first.</p>\n<p>Now there is a new parameter added to the main segway function: <code>--set-supervision-mean</code>.\nIf set, the base mean for all track for each label with semi-supervision present will be the mean of the track data in the supervision region. The real mean will be still added by std * rand(-0.2, 0.2) because I want to still keep some randomness. The std here is still generate by the whole track and there the reason why I did not change it is stated below.</p>\n<p>I did not generate a Gaussian variance only from the supervision region. I do think it is useful to add that feature but the current the variance seems to be uniform at first for all label, generating it in different way seems to require changing the structure of input-master file which I don't have time to do. Also if this would be a permanent feature then there is a problem we have to consider if we do it this way: what if we only have a very small supervision region? Variance could be 0. </p>\n<p>If not set, everything is the same.</p>\n<p>Some other important issue of this modification:\n1. It does not support subseg\n2. It does not support Trackgroup</p>\n<p>I am not sure how the behaviour should be defined when subseg and Trackgroup is used.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a1e9739dfe9a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Tamaki_Sakura/segway/commit/a1e9739dfe9a"}, "html": {"href": "https://bitbucket.org/Tamaki_Sakura/segway/commits/a1e9739dfe9a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Tamaki_Sakura/segway"}, "html": {"href": "https://bitbucket.org/Tamaki_Sakura/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{99c18329-33d0-4f18-af6e-158fbae1f679}ts=python"}}, "type": "repository", "name": "segway", "full_name": "Tamaki_Sakura/segway", "uuid": "{99c18329-33d0-4f18-af6e-158fbae1f679}"}, "branch": {"name": "semi_default_change"}}, "comment_count": 0, "state": "OPEN", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2015-08-07T15:51:39.920511+00:00", "type": "participant", "approved": false, "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"role": "PARTICIPANT", "participated_on": "2015-08-06T17:22:33.261923+00:00", "type": "participant", "approved": false, "user": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}}], "reason": "", "updated_on": "2015-08-13T20:04:00.188767+00:00", "author": {"display_name": "Sakura Tamaki", "uuid": "{2e49c073-0cbe-4333-96b1-a81988007690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D"}, "html": {"href": "https://bitbucket.org/%7B2e49c073-0cbe-4333-96b1-a81988007690%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282/860719ec-a458-4597-a2c0-04bb410a3373/128"}}, "nickname": "Tamaki_Sakura", "type": "user", "account_id": "557058:8f562ae3-ccee-4990-9d3f-58dc4e5d4282"}, "merge_commit": null, "closed_by": null}