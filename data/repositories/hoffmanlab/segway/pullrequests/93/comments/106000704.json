{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/comments/106000704.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/mjmm13/segway_python23:9f8d0cd33132..a95dc6d332c4?path=segway%2Frun.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/93/_/diff#comment-106000704"}}, "parent": {"id": 105999815, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/comments/105999815.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/93/_/diff#comment-105999815"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 93, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/93"}}, "title": "Split Segway Tasks into Steps"}, "content": {"raw": "This is the only instance where this is called \\(line 3076\\)\n\n```python\n        src_filenames = max_params.get_filenames(self.validate)\n\n        if None in src_filenames.values():\n            raise RuntimeError(\"All training instances failed\")\n\n        best_params_filename = max_params.params_filename\n\n        for filename in src_filenames:\n            self.copy_results(filename, src_filenames[filename])\n```\n\nYou are always accessing the values and not the keys in this code so I\u2019m not sure why a dict is necessary.", "markup": "markdown", "html": "<p>This is the only instance where this is called (line 3076)</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"n\">src_filenames</span> <span class=\"o\">=</span> <span class=\"n\">max_params</span><span class=\"o\">.</span><span class=\"n\">get_filenames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">None</span> <span class=\"ow\">in</span> <span class=\"n\">src_filenames</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;All training instances failed&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">best_params_filename</span> <span class=\"o\">=</span> <span class=\"n\">max_params</span><span class=\"o\">.</span><span class=\"n\">params_filename</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">src_filenames</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy_results</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">src_filenames</span><span class=\"p\">[</span><span class=\"n\">filename</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>You are always accessing the values and not the keys in this code so I\u2019m not sure why a dict is necessary.</p>", "type": "rendered"}, "created_on": "2019-06-17T19:35:06.943965+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "inline": {"to": 491, "from": null, "outdated": true, "path": "segway/run.py"}, "updated_on": "2019-06-17T19:35:06.957879+00:00", "type": "pullrequest_comment", "id": 106000704}