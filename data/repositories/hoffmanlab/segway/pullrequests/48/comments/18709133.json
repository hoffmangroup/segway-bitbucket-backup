{"links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/48/comments/18709133.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/rcwchan/segway:None..None?path=segway%2Fobservations.py"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/48/_/diff#comment-18709133"}}, "parent": {"id": 18708609, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/48/comments/18708609.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/48/_/diff#comment-18708609"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 48, "links": {"self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/48.json"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/48"}}, "title": "Resolution option functionality for semi-supervised mode"}, "content": {"raw": "I think you would have to take the resolution-partitioned subarrays, and for each ith downsampled mode value (so for each mode), tell it to look in the ith resolution-partitioned subarray and count how many there are. I chose to do it this way simply because bincount automatically returns both your mode and the number of times it occurs, at the same time, so it seemed cleaner to just calculate both at once. It's possible the variable could be renamed to something like ```downsampled_supervision_tuple``` (I can't think of a better one off the top of my head). And/or simply add a comment that says 'this is a tuple where the first element is the downsampled supervision data, and the second element is its corresponding presence data'? Would that be more clear?", "markup": "markdown", "html": "<p>I think you would have to take the resolution-partitioned subarrays, and for each ith downsampled mode value (so for each mode), tell it to look in the ith resolution-partitioned subarray and count how many there are. I chose to do it this way simply because bincount automatically returns both your mode and the number of times it occurs, at the same time, so it seemed cleaner to just calculate both at once. It's possible the variable could be renamed to something like <code>downsampled_supervision_tuple</code> (I can't think of a better one off the top of my head). And/or simply add a comment that says 'this is a tuple where the first element is the downsampled supervision data, and the second element is its corresponding presence data'? Would that be more clear?</p>", "type": "rendered"}, "created_on": "2016-05-19T16:12:02.463965+00:00", "user": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "inline": {"to": null, "from": null, "outdated": false, "path": "segway/observations.py"}, "updated_on": "2016-05-19T16:12:12.219445+00:00", "type": "pullrequest_comment", "id": 18709133}