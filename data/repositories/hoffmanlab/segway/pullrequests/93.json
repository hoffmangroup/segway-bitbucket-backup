{"rendered": {"description": {"raw": "# Segway Modular API Updates\r\n\r\n## Introduction of Steps\r\n\r\nThis introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:\r\n\r\n* init: Generates all input files, but does not submit any jobs to GMTK \\(besides triangulate\\). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.\r\n* run: Submits jobs to GMTK. Produces params and viterbi files.\r\n* finish: Selects the best training and identify instances and uses these to generate the output files.\r\n* train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.\r\n\r\n## User Interface Changes\r\n\r\nUsers wishing to run all steps of a task together may continue to do so the same way they do now, writing segway <task>. \r\n\r\nTo run a single step, use the command segway <task>-<step>. For example, segway identify-run will run the identify associated programs. \r\n\r\nA change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:\r\n\r\n`\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"`\r\n\r\nWhere global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.", "markup": "markdown", "html": "<h1 id=\"markdown-header-segway-modular-api-updates\">Segway Modular API Updates</h1>\n<h2 id=\"markdown-header-introduction-of-steps\">Introduction of Steps</h2>\n<p>This introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:</p>\n<ul>\n<li>init: Generates all input files, but does not submit any jobs to GMTK (besides triangulate). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.</li>\n<li>run: Submits jobs to GMTK. Produces params and viterbi files.</li>\n<li>finish: Selects the best training and identify instances and uses these to generate the output files.</li>\n<li>train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.</li>\n</ul>\n<h2 id=\"markdown-header-user-interface-changes\">User Interface Changes</h2>\n<p>Users wishing to run all steps of a task together may continue to do so the same way they do now, writing segway &lt;task&gt;. </p>\n<p>To run a single step, use the command segway &lt;task&gt;-&lt;step&gt;. For example, segway identify-run will run the identify associated programs. </p>\n<p>A change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:</p>\n<p><code>\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"</code></p>\n<p>Where global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.</p>", "type": "rendered"}, "title": {"raw": "Split Segway Tasks into Steps", "markup": "markdown", "html": "<p>Split Segway Tasks into Steps</p>", "type": "rendered"}}, "type": "pullrequest", "description": "# Segway Modular API Updates\r\n\r\n## Introduction of Steps\r\n\r\nThis introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:\r\n\r\n* init: Generates all input files, but does not submit any jobs to GMTK \\(besides triangulate\\). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.\r\n* run: Submits jobs to GMTK. Produces params and viterbi files.\r\n* finish: Selects the best training and identify instances and uses these to generate the output files.\r\n* train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.\r\n\r\n## User Interface Changes\r\n\r\nUsers wishing to run all steps of a task together may continue to do so the same way they do now, writing segway <task>. \r\n\r\nTo run a single step, use the command segway <task>-<step>. For example, segway identify-run will run the identify associated programs. \r\n\r\nA change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:\r\n\r\n`\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"`\r\n\r\nWhere global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diffstat/hoffmanlab/segway:4e3898f31fb7%0Dcad3fd722588?from_pullrequest_id=93"}, "commits": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93.json"}, "comments": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/merge"}, "html": {"href": "#!/hoffmanlab/segway/pull-requests/93"}, "activity": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/diff/hoffmanlab/segway:4e3898f31fb7%0Dcad3fd722588?from_pullrequest_id=93"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segway/pullrequests/93/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segway/pullrequests/93/statuses_page=1.json"}}, "title": "Split Segway Tasks into Steps", "close_source_branch": false, "reviewers": [{"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}], "id": 93, "destination": {"commit": {"hash": "cad3fd722588", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/cad3fd722588.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/cad3fd722588"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segway.json"}, "html": {"href": "#!/hoffmanlab/segway"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}ts=python"}}, "type": "repository", "name": "segway", "full_name": "hoffmanlab/segway", "uuid": "{68bf38bf-f0c1-4c9c-909e-0ee4b2c26257}"}, "branch": {"name": "default"}}, "created_on": "2018-11-20T17:56:09.226053+00:00", "summary": {"raw": "# Segway Modular API Updates\r\n\r\n## Introduction of Steps\r\n\r\nThis introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:\r\n\r\n* init: Generates all input files, but does not submit any jobs to GMTK \\(besides triangulate\\). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.\r\n* run: Submits jobs to GMTK. Produces params and viterbi files.\r\n* finish: Selects the best training and identify instances and uses these to generate the output files.\r\n* train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.\r\n\r\n## User Interface Changes\r\n\r\nUsers wishing to run all steps of a task together may continue to do so the same way they do now, writing segway <task>. \r\n\r\nTo run a single step, use the command segway <task>-<step>. For example, segway identify-run will run the identify associated programs. \r\n\r\nA change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:\r\n\r\n`\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"`\r\n\r\nWhere global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.", "markup": "markdown", "html": "<h1 id=\"markdown-header-segway-modular-api-updates\">Segway Modular API Updates</h1>\n<h2 id=\"markdown-header-introduction-of-steps\">Introduction of Steps</h2>\n<p>This introduces a new API which divides the three Segway tasks, train, identify, and posterior, into steps allowing us to stop the processes at defined intervals to view and potentially modify the input files generated by Segway before and during training. The steps that have been defined are:</p>\n<ul>\n<li>init: Generates all input files, but does not submit any jobs to GMTK (besides triangulate). At the end of this step the input.master, segway.str, auxillary files, tri files, and the window.bed will all be generated.</li>\n<li>run: Submits jobs to GMTK. Produces params and viterbi files.</li>\n<li>finish: Selects the best training and identify instances and uses these to generate the output files.</li>\n<li>train-run-round: This step is specific to training. It will run a single round of training and then stop, allowing a user to view results and modify files.</li>\n</ul>\n<h2 id=\"markdown-header-user-interface-changes\">User Interface Changes</h2>\n<p>Users wishing to run all steps of a task together may continue to do so the same way they do now, writing segway &lt;task&gt;. </p>\n<p>To run a single step, use the command segway &lt;task&gt;-&lt;step&gt;. For example, segway identify-run will run the identify associated programs. </p>\n<p>A change to all users will be the order of the positional arguments and additional arguments provided to segway. Now users will only be able to specify arguments specific to each task, rather than having a downstream error occur. This means that the commands must now follow the order:</p>\n<p><code>\"segway [GLOBAL_OPTION] TASK [TASK_OPTION] GENOMEDATA [GENOMEDATA ...] TRAINDIR [IDENTIFYDIR]\"</code></p>\n<p>Where global options are those that apply to all tasks such as cluster arguments. Task options are those that are specific to the desired task.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7979932f6d34", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23/commit/7979932f6d34"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23/commits/7979932f6d34"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mjmm13/segway_python23"}, "html": {"href": "https://bitbucket.org/mjmm13/segway_python23"}, "avatar": {"href": "data/bytebucket.org/ravatar/{735c8db4-9d46-48a5-95b3-1d01db953c08}ts=python"}}, "type": "repository", "name": "segway_python23", "full_name": "mjmm13/segway_python23", "uuid": "{735c8db4-9d46-48a5-95b3-1d01db953c08}"}, "branch": {"name": "step_split"}}, "comment_count": 228, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-06-27T21:43:25.805653+00:00", "type": "participant", "approved": false, "user": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}}, {"role": "REVIEWER", "participated_on": "2019-06-28T15:16:44.065758+00:00", "type": "participant", "approved": false, "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-24T17:26:27.886962+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}], "reason": "", "updated_on": "2019-07-02T15:36:01.318340+00:00", "author": {"display_name": "Matthew McNeil", "uuid": "{018cd21a-1658-4202-9b1e-99dabc3e14d0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D"}, "html": {"href": "https://bitbucket.org/%7B018cd21a-1658-4202-9b1e-99dabc3e14d0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7e7604c308bd957d77e1762b5caeddcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-5.png"}}, "nickname": "mjmm13", "type": "user", "account_id": "5ac790531b5dd37ea53a123d"}, "merge_commit": {"hash": "4e3898f31fb7", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segway/commit/4e3898f31fb7.json"}, "html": {"href": "#!/hoffmanlab/segway/commits/4e3898f31fb7"}}}, "closed_by": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}}